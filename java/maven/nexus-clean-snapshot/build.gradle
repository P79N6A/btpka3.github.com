buildscript {
    ext {
        //springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17")
    }
}

//plugins{
//    id 'eclipse'
//    id 'idea'
//    id "io.spring.dependency-management" version "1.0.0.RELEASE" //1.0.2.RELEASE
//    id 'project-report'
//    id 'maven'
//    id 'org.springframework.boot' version '1.5.2.RELEASE'
//}


apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "io.spring.dependency-management"
apply plugin: 'project-report'
apply plugin: 'maven'
apply plugin: 'maven-publish'

apply plugin: 'groovy'
//apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "com.gorylenko.gradle-git-properties" // 生成 git.properties

gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT+8"
    gitRepositoryRoot = new File("${project.rootDir}/../../../")
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

eclipse {
    classpath {
        downloadSources = true
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

    dependencies {
        dependency("io.reactivex.rxjava2:rxjava:2.1.3")
        //dependency("io.reactivex.rxjava2:rxjava-joins:0.22.0")
//            dependency('org.codehaus.groovy:groovy-all:2.4.11')
//            dependency('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.7')
//            dependency('org.apache.httpcomponents:httpclient:4.5.3')
//            dependency('org.apache.cxf:cxf-spring-boot-starter-jaxws:3.1.10')
//            dependency('org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.10')
//            dependency('org.apache.cxf:cxf-rt-rs-service-description-swagger:3.1.10')
//            dependency('org.webjars:swagger-ui:2.2.10-1')
//            dependency('org.grails:gorm-mongodb-spring-boot:6.0.7.RELEASE')
//            dependency('org.grails.plugins:rx-mongodb:6.0.6.RELEASE')
//            dependency('org.grails:grails-datastore-gorm-rx-mongodb:6.0.7.RELEASE')
//            dependency('org.grails:grails-validation:3.1.11')
//            dependency('org.webjars:swagger-ui:2.2.10')
//            dependency('javax.ws.rs:jsr311-api:1.1.1')
//            dependency('javax.ws.rs:javax.ws.rs-api:2.0.1')
//            dependency('org.glassfish.jersey.ext:jersey-spring3:2.25.1')
//            dependency('io.swagger:swagger-core:1.5.10')                 // 1.5.12
//            dependency('io.swagger:swagger-jaxrs:1.5.12')
//            dependency('io.swagger:swagger-jersey2-jaxrs:1.5.12')
//            dependency('io.springfox:springfox-swagger2:2.6.1')
//            dependency('io.springfox:springfox-data-rest:2.6.1')
//            dependency('io.springfox:springfox-staticdocs:2.6.1')
//            dependency('io.springfox:springfox-swagger-ui:2.6.1')
//            dependency('org.webjars:sockjs-client:1.1.1')
//            dependency('org.webjars.bower:angular:1.6.0')
//            dependency('org.webjars.bower:angular-messages:1.6.0')
//            dependency('org.webjars.bower:angular-animate:1.6.0')
//            dependency('org.webjars.bower:angular-aria:1.6.0')
//            dependency('org.webjars:angular-material:1.1.1')
//            dependency('org.webjars.bower:angular-material-icons:0.7.1') {
//                exclude "org.webjars.bower:angular"
//            }
//
//            dependency('com.querydsl:querydsl-apt:4.1.4')
//            dependency('com.querydsl:querydsl-collections:4.1.4')
//            dependency('com.querydsl:querydsl-core:4.1.4')
//            dependency('com.querydsl:querydsl-jpa:4.1.4')
//            dependency('com.querydsl:querydsl-mongodb:4.1.4')
//            dependency('joda-time:joda-time:2.9.7')
//            dependency('org.apache.commons:commons-math3:3.6.1')
//            dependency('org.mongodb.morphia:morphia:1.3.2')
    }
}




publish {
    dependsOn assemble
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact(file("${buildDir}/libs/${project.name}-${project.version}-${bootRepackage.classifier}.jar")) {
                classifier 'boot'
            }
        }
    }

    repositories {
        maven {
            credentials {
                username "admin"
                password "admin123"
            }
            if (project.version.endsWith('-SNAPSHOT')) {
                url "http://mvn.kingsilk.xyz/content/repositories/snapshots/"
            } else {
                url "http://mvn.kingsilk.xyz/content/repositories/releases/"
            }
        }
    }
}

dependencies {
    //compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework:spring-web')
    //compile('org.codehaus.groovy:groovy-all')
    //compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile("org.springframework.boot:spring-boot-devtools")
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
    compile('org.apache.httpcomponents:httpclient')
    compile('org.apache.httpcomponents:httpasyncclient')

    compile("io.reactivex.rxjava2:rxjava")
    //compile("io.reactivex.rxjava2:rxjava-joins")

    //compile('org.springframework.security.oauth:spring-security-oauth2')
    //compile('org.springframework.boot:spring-boot-starter-actuator')

    // spring cloud
    //compile('org.springframework.cloud:spring-cloud-starter-eureka')
    // spring-cloud-starter-eureka 已经依赖了 spring-cloud-starter-ribbon
    //compile('org.springframework.cloud:spring-cloud-starter-ribbon')
    //compile('org.springframework.cloud:spring-cloud-starter-feign')
    //compile('io.github.openfeign:feign-httpclient')


    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    //archives javadocJar
}

test {
    testLogging.showStandardStreams = false
}

bootRepackage {
    enabled = true
    withJarTask jar
    classifier = 'boot'
}

bootRun {
    addResources = true
    systemProperties = System.properties
}

springBoot {
    //mainClass = System.properties['mainClass']
    buildInfo {
        additionalProperties = [
                'foo': 'bar'
        ]
    }
}

jar {
    manifest {
        attributes "Implementation-Version": project.version
    }
}



