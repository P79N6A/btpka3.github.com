

buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.codehaus.groovy:groovy:2.4.7')
//    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
//    compile('org.springframework.boot:spring-boot-starter-web')
//    testCompile('org.springframework.boot:spring-boot-starter-test')
//
//
//    compile("org.springframework.boot:spring-boot-devtools")

    compile("org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0")
    compile("com.rabbitmq:amqp-client:3.6.5")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-amqp")
    //compile("org.springframework.amqp:spring-rabbit:1.6.1.RELEASE")
}

//bootRun {
//    addResources = trues
//}


// gradle bootRun
//springBoot {
//    mainClass = System.properties['mainClass']
//}

// gradle -DmainClass=me.test.Example execute
task execute(type:JavaExec) {
    main = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}
