server.port: 10001


#security.oauth2.resource.id: MY_RSC
#security.oauth2.authorization.realm: btpka3/my-oauth2

logging.level.org.springframework.security: INFO
logging.level.org.springframework.boot.actuate.audit.listener.AuditListener: DEBUG
logging.level.org.springframework.security.config.annotation.authentication.configuration: DEBUG
logging.level.org.springframework.security.web.access: DEBUG
logging.level.org.springframework.security.web.csrf: DEBUG
logging.level.org.springframework.security.access: DEBUG
# 用来追踪 restTemplate 请求
logging.level.org.apache.http: DEBUG
logging.level.package org.springframework.security.oauth2.provider.authentication: DEBUG

my.oauth2:
  auth:
    url:                    http://a.localhost:10001
    accessTokenUri:         http://a.localhost:10001/oauth/token
    userAuthorizationUri:   http://a.localhost:10001/oauth/authorize
    checkTokenUri:          http://a.localhost:10001/oauth/check_token
    realm: btpka3/oauth2
  resource:
    id: MY_RSC
    url:                    http://r.localhost:10002
    photoListUri:           http://r.localhost:10002/o2/photo
    username4AuthServer:    a_my_rsc
    password4AuthServer:    a_my_rsc

  client:
    id: MY_CLIENT
    secret: secret
    url:                    http://c.localhost:10003
    scopes:
      - read
      - write
      - LOGIN
    authorizedGrantTypes:
      - authorization_code
      - implicit
      - client_credentials
      - password
      - refresh_token
    authorities:
      - ROLE_CLIENT
    preEstablishedRedirectUri:  http://c.localhost:10003/implicit.html


spring.h2.console.enabled: true

spring.datasource:
  url: jdbc:h2:tcp://localhost:9092/~/.oauth2-authorization-server
  #url: jdbc:h2:~/.first-spring-boot-database
  #username: sa
  #password:
  driver-class-name: "org.h2.Driver"

my.h2.tcp.conf: -tcp,-tcpAllowOthers,-tcpPort,9092

security:
  basic:
    enabled: false