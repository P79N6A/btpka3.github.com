/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'zll' at '9/19/16 6:30 PM' with Gradle 2.14.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {

    apply plugin: 'groovy'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'
    apply plugin: 'application'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    dependencies {
        compile('org.codehaus.groovy:groovy')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile("org.springframework.boot:spring-boot-devtools")
        compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.4')
        compile('org.apache.httpcomponents:httpclient:4.5.2')

        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    bootRun {
        addResources = true
    }

    // gradle bootRun
    springBoot {
        mainClass = System.properties['mainClass']
    }

    // gradle run -Dexec.args="arg1 arg2 arg3"
    //mainClassName = System.getProperty("mainClass")
    //run {
    //    //args System.getProperty("exec.args")?.split()
    //}

    // gradle -DmainClass=me.test.Example execute
    task execute(type: JavaExec) {
        main = System.getProperty('mainClass')
        classpath = sourceSets.main.runtimeClasspath
    }

}