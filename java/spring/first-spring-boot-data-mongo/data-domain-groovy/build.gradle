apply plugin: 'org.springframework.boot'
apply plugin: "java"
apply plugin: "groovy"

// https://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html#build-tool-plugins-gradle-repackage-configuration
bootRepackage {
    enabled = false
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
    main {
        //output.resourcesDir = output.classesDir
        java {
            srcDirs = [
                    'src/main/java',
                    'src/main/generated'
            ]
        }
    }
}

configurations {
    querydslapt
}

dependencies {
    compile('org.codehaus.groovy:groovy')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('com.querydsl:querydsl-mongodb')
//    compile('com.querydsl:querydsl-apt')
    compile('com.querydsl:querydsl-core')
    compile('joda-time:joda-time')
    compile('org.mongodb.morphia:morphia')
    querydslapt('com.querydsl:querydsl-apt')
}

task generateQueryDSL(type: GroovyCompile, group: 'build', description: 'Generates the QueryDSL query types') {

    source = sourceSets.main.groovy
    classpath = configurations.compile + configurations.querydslapt

    groovyOptions.javaAnnotationProcessing = true
    options.compilerArgs << "-proc:only"
    options.compilerArgs << "-processor" << "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"

    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}
//
compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}
clean {
    delete sourceSets.generated.java.srcDirs
}

compileGroovy {
    dependsOn generateQueryDSL
    //source generateQueryDSL.destinationDir
}

test {
    include 'me/test/**'
    testLogging.showStandardStreams = false
}







