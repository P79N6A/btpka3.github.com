
//plugins {
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.8"
//}
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'

bootRun {
    addResources = true
}

// gradle bootRun
springBoot {
    mainClass = System.properties['mainClass']
}
task execute(type: JavaExec) {
    main = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    compile project(":data-domain")

    compile('org.codehaus.groovy:groovy')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile("org.springframework.boot:spring-boot-devtools")
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
    compile('org.apache.httpcomponents:httpclient')

    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('com.querydsl:querydsl-mongodb')
    compile('com.querydsl:querydsl-apt')
    compile('com.querydsl:querydsl-core')
    compile('joda-time:joda-time')
    compile('org.mongodb.morphia:morphia')
    //querydslapt('com.querydsl:querydsl-apt')

}

test {
    include 'me/test/**'
    testLogging.showStandardStreams = false
}

// ------------------ bak

//task generateQueryDSL(type: GroovyCompile, group: 'build', description: 'Generates the QueryDSL query types') {
//
//    source = sourceSets.main.groovy
//    classpath = configurations.compile + configurations.querydslapt
//
//    groovyOptions.javaAnnotationProcessing = true
//    options.compilerArgs << "-proc:only"
//    options.compilerArgs << "-processor" << "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"
//
//    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
//}
//
//compileJava {
//    dependsOn generateQueryDSL
//    source generateQueryDSL.destinationDir
//}
//
//compileGeneratedJava {
//    dependsOn generateQueryDSL
//    options.warnings = false
//    classpath += sourceSets.main.runtimeClasspath
//}
//clean {
//    delete sourceSets.generated.java.srcDirs
//}

//project.tasks.compileJava.dependsOn project.tasks.compileQuerydsl
//compileGroovy {
//    dependsOn compileQueryDsl
//}
