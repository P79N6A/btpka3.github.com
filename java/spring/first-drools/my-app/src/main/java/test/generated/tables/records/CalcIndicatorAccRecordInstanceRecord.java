/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.CalcIndicatorAccRecordInstance;


/**
 * 时间取数运行实例
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorAccRecordInstanceRecord extends UpdatableRecordImpl<CalcIndicatorAccRecordInstanceRecord> implements Record22<ULong, Timestamp, Timestamp, String, String, String, String, String, ULong, Integer, String, String, String, String, String, String, String, Integer, String, String, Integer, String> {

    private static final long serialVersionUID = 513240939;

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.gmt_start</code>. 运行开始时间
     */
    public void setGmtStart(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.gmt_start</code>. 运行开始时间
     */
    public Timestamp getGmtStart() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.gmt_end</code>. 运行结束时间
     */
    public void setGmtEnd(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.gmt_end</code>. 运行结束时间
     */
    public Timestamp getGmtEnd() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.operator</code>. 操作人
     */
    public void setOperator(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.operator</code>. 操作人
     */
    public String getOperator() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.operator_id</code>. 操作人工号
     */
    public void setOperatorId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.operator_id</code>. 操作人工号
     */
    public String getOperatorId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.access_start_time</code>. 取数开始时间，格式：2015-12-23
     */
    public void setAccessStartTime(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.access_start_time</code>. 取数开始时间，格式：2015-12-23
     */
    public String getAccessStartTime() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.access_end_time</code>. 取数结束时间，格式：2015-12-23
     */
    public void setAccessEndTime(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.access_end_time</code>. 取数结束时间，格式：2015-12-23
     */
    public String getAccessEndTime() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.run_sql</code>. 取数运行模板
     */
    public void setRunSql(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.run_sql</code>. 取数运行模板
     */
    public String getRunSql() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.record_id</code>. acc_record关联ID
     */
    public void setRecordId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.record_id</code>. acc_record关联ID
     */
    public ULong getRecordId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.status</code>. 状态：0: 指标准备，1：运行中，2：成功，3：失败，4：数据预处理, 5: 终止
     */
    public void setStatus(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.status</code>. 状态：0: 指标准备，1：运行中，2：成功，3：失败，4：数据预处理, 5: 终止
     */
    public Integer getStatus() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.template</code>. 模板详细信息，json格式
     */
    public void setTemplate(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.template</code>. 模板详细信息，json格式
     */
    public String getTemplate() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_node_id</code>. odps 节点ID
     */
    public void setOdpsNodeId(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_node_id</code>. odps 节点ID
     */
    public String getOdpsNodeId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_task_id</code>. odps 运行任务ID
     */
    public void setOdpsTaskId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_task_id</code>. odps 运行任务ID
     */
    public String getOdpsTaskId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_pre_node_id</code>. odps 准备数据任务ID
     */
    public void setOdpsPreNodeId(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_pre_node_id</code>. odps 准备数据任务ID
     */
    public String getOdpsPreNodeId() {
        return (String) get(13);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_pre_task_id</code>. odps准备数据阶段node id
     */
    public void setOdpsPreTaskId(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.odps_pre_task_id</code>. odps准备数据阶段node id
     */
    public String getOdpsPreTaskId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.failure_msg</code>. 实例运行失败原因
     */
    public void setFailureMsg(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.failure_msg</code>. 实例运行失败原因
     */
    public String getFailureMsg() {
        return (String) get(15);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.indi_run_task_ids</code>. 指标运行taskId
     */
    public void setIndiRunTaskIds(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.indi_run_task_ids</code>. 指标运行taskId
     */
    public String getIndiRunTaskIds() {
        return (String) get(16);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.last_status</code>. 实例上一运行节点
     */
    public void setLastStatus(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.last_status</code>. 实例上一运行节点
     */
    public Integer getLastStatus() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.calc_mode</code>. 计算方式：odps，spark
     */
    public void setCalcMode(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.calc_mode</code>. 计算方式：odps，spark
     */
    public String getCalcMode() {
        return (String) get(18);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.spark_jobid</code>. spark jobId
     */
    public void setSparkJobid(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.spark_jobid</code>. spark jobId
     */
    public String getSparkJobid() {
        return (String) get(19);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.need_batch_join</code>. 是否需要分批JOIN。0：不用分批join，1：需要分批join
     */
    public void setNeedBatchJoin(Integer value) {
        set(20, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.need_batch_join</code>. 是否需要分批JOIN。0：不用分批join，1：需要分批join
     */
    public Integer getNeedBatchJoin() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_instance.join_run_task_info</code>. 分批join任务信息（json格式）
     */
    public void setJoinRunTaskInfo(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_instance.join_run_task_info</code>. 分批join任务信息（json格式）
     */
    public String getJoinRunTaskInfo() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<ULong, Timestamp, Timestamp, String, String, String, String, String, ULong, Integer, String, String, String, String, String, String, String, Integer, String, String, Integer, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<ULong, Timestamp, Timestamp, String, String, String, String, String, ULong, Integer, String, String, String, String, String, String, String, Integer, String, String, Integer, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.GMT_START;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.GMT_END;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.OPERATOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ACCESS_START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ACCESS_END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.RUN_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field9() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.RECORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ODPS_NODE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ODPS_TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ODPS_PRE_NODE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.ODPS_PRE_TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.FAILURE_MSG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.INDI_RUN_TASK_IDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field18() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.LAST_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.CALC_MODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field20() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.SPARK_JOBID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field21() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.NEED_BATCH_JOIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field22() {
        return CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE.JOIN_RUN_TASK_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtEnd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getAccessStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getAccessEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getRunSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component9() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getOdpsNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getOdpsTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getOdpsPreNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getOdpsPreTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getFailureMsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getIndiRunTaskIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component18() {
        return getLastStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getCalcMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component20() {
        return getSparkJobid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component21() {
        return getNeedBatchJoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component22() {
        return getJoinRunTaskInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtEnd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getAccessStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAccessEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getRunSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value9() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getOdpsNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getOdpsTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getOdpsPreNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getOdpsPreTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getFailureMsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getIndiRunTaskIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value18() {
        return getLastStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getCalcMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value20() {
        return getSparkJobid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value21() {
        return getNeedBatchJoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value22() {
        return getJoinRunTaskInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value2(Timestamp value) {
        setGmtStart(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value3(Timestamp value) {
        setGmtEnd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value4(String value) {
        setOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value5(String value) {
        setOperatorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value6(String value) {
        setAccessStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value7(String value) {
        setAccessEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value8(String value) {
        setRunSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value9(ULong value) {
        setRecordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value10(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value11(String value) {
        setTemplate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value12(String value) {
        setOdpsNodeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value13(String value) {
        setOdpsTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value14(String value) {
        setOdpsPreNodeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value15(String value) {
        setOdpsPreTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value16(String value) {
        setFailureMsg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value17(String value) {
        setIndiRunTaskIds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value18(Integer value) {
        setLastStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value19(String value) {
        setCalcMode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value20(String value) {
        setSparkJobid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value21(Integer value) {
        setNeedBatchJoin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord value22(String value) {
        setJoinRunTaskInfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordInstanceRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, ULong value9, Integer value10, String value11, String value12, String value13, String value14, String value15, String value16, String value17, Integer value18, String value19, String value20, Integer value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalcIndicatorAccRecordInstanceRecord
     */
    public CalcIndicatorAccRecordInstanceRecord() {
        super(CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE);
    }

    /**
     * Create a detached, initialised CalcIndicatorAccRecordInstanceRecord
     */
    public CalcIndicatorAccRecordInstanceRecord(ULong id, Timestamp gmtStart, Timestamp gmtEnd, String operator, String operatorId, String accessStartTime, String accessEndTime, String runSql, ULong recordId, Integer status, String template, String odpsNodeId, String odpsTaskId, String odpsPreNodeId, String odpsPreTaskId, String failureMsg, String indiRunTaskIds, Integer lastStatus, String calcMode, String sparkJobid, Integer needBatchJoin, String joinRunTaskInfo) {
        super(CalcIndicatorAccRecordInstance.CALC_INDICATOR_ACC_RECORD_INSTANCE);

        set(0, id);
        set(1, gmtStart);
        set(2, gmtEnd);
        set(3, operator);
        set(4, operatorId);
        set(5, accessStartTime);
        set(6, accessEndTime);
        set(7, runSql);
        set(8, recordId);
        set(9, status);
        set(10, template);
        set(11, odpsNodeId);
        set(12, odpsTaskId);
        set(13, odpsPreNodeId);
        set(14, odpsPreTaskId);
        set(15, failureMsg);
        set(16, indiRunTaskIds);
        set(17, lastStatus);
        set(18, calcMode);
        set(19, sparkJobid);
        set(20, needBatchJoin);
        set(21, joinRunTaskInfo);
    }
}
