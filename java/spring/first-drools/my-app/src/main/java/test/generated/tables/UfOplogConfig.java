/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfOplogConfigRecord;


/**
 * 日志配置信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfOplogConfig extends TableImpl<UfOplogConfigRecord> {

    private static final long serialVersionUID = -1999835648;

    /**
     * The reference instance of <code>SMETA_APP.uf_oplog_config</code>
     */
    public static final UfOplogConfig UF_OPLOG_CONFIG = new UfOplogConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfOplogConfigRecord> getRecordType() {
        return UfOplogConfigRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_oplog_config.id</code>. 主键
     */
    public final TableField<UfOplogConfigRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.gmt_create</code>. 创建时间
     */
    public final TableField<UfOplogConfigRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.gmt_modified</code>. 修改时间
     */
    public final TableField<UfOplogConfigRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.url</code>. 访问url
     */
    public final TableField<UfOplogConfigRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(512), this, "访问url");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.url_name</code>. url名称
     */
    public final TableField<UfOplogConfigRecord, String> URL_NAME = createField("url_name", org.jooq.impl.SQLDataType.VARCHAR(512), this, "url名称");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.opt_type</code>. 操作类型：0:查 1:增 2:改 3:删
     */
    public final TableField<UfOplogConfigRecord, ULong> OPT_TYPE = createField("opt_type", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "操作类型：0:查 1:增 2:改 3:删");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.opt_target</code>. 操作对象：如事件，规则，特征等
     */
    public final TableField<UfOplogConfigRecord, String> OPT_TARGET = createField("opt_target", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作对象：如事件，规则，特征等");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.url_key</code>. 操作关键字
     */
    public final TableField<UfOplogConfigRecord, String> URL_KEY = createField("url_key", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作关键字");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.opt_risk_level</code>. 操作风险等级(0-3 数值越高越危险)
     */
    public final TableField<UfOplogConfigRecord, Byte> OPT_RISK_LEVEL = createField("opt_risk_level", org.jooq.impl.SQLDataType.TINYINT, this, "操作风险等级(0-3 数值越高越危险)");

    /**
     * The column <code>SMETA_APP.uf_oplog_config.host_name</code>. 访问主机
     */
    public final TableField<UfOplogConfigRecord, String> HOST_NAME = createField("host_name", org.jooq.impl.SQLDataType.VARCHAR(256), this, "访问主机");

    /**
     * Create a <code>SMETA_APP.uf_oplog_config</code> table reference
     */
    public UfOplogConfig() {
        this(DSL.name("uf_oplog_config"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_oplog_config</code> table reference
     */
    public UfOplogConfig(String alias) {
        this(DSL.name(alias), UF_OPLOG_CONFIG);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_oplog_config</code> table reference
     */
    public UfOplogConfig(Name alias) {
        this(alias, UF_OPLOG_CONFIG);
    }

    private UfOplogConfig(Name alias, Table<UfOplogConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfOplogConfig(Name alias, Table<UfOplogConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "日志配置信息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_OPLOG_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfOplogConfigRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_OPLOG_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfOplogConfigRecord> getPrimaryKey() {
        return Keys.KEY_UF_OPLOG_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfOplogConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<UfOplogConfigRecord>>asList(Keys.KEY_UF_OPLOG_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfOplogConfig as(String alias) {
        return new UfOplogConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfOplogConfig as(Name alias) {
        return new UfOplogConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfOplogConfig rename(String name) {
        return new UfOplogConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfOplogConfig rename(Name name) {
        return new UfOplogConfig(name, null);
    }
}
