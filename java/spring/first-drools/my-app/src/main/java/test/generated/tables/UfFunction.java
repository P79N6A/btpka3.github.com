/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfFunctionRecord;


/**
 * 函数表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfFunction extends TableImpl<UfFunctionRecord> {

    private static final long serialVersionUID = 266720799;

    /**
     * The reference instance of <code>SMETA_APP.uf_function</code>
     */
    public static final UfFunction UF_FUNCTION = new UfFunction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfFunctionRecord> getRecordType() {
        return UfFunctionRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_function.id</code>. id主健
     */
    public final TableField<UfFunctionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id主健");

    /**
     * The column <code>SMETA_APP.uf_function.code</code>. 函数名称、code
     */
    public final TableField<UfFunctionRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "函数名称、code");

    /**
     * The column <code>SMETA_APP.uf_function.friendlyname</code>. 友好的名称
     */
    public final TableField<UfFunctionRecord, String> FRIENDLYNAME = createField("friendlyname", org.jooq.impl.SQLDataType.VARCHAR(100), this, "友好的名称");

    /**
     * The column <code>SMETA_APP.uf_function.catalogcode</code>. 类别
     */
    public final TableField<UfFunctionRecord, String> CATALOGCODE = createField("catalogcode", org.jooq.impl.SQLDataType.VARCHAR(100), this, "类别");

    /**
     * The column <code>SMETA_APP.uf_function.catalogname</code>. 类别名称 2012-08-09
     */
    public final TableField<UfFunctionRecord, String> CATALOGNAME = createField("catalogname", org.jooq.impl.SQLDataType.VARCHAR(50), this, "类别名称 2012-08-09");

    /**
     * The column <code>SMETA_APP.uf_function.returntype</code>. 返回值类型，注意要能在meta里找到，以实现自动提示
     */
    public final TableField<UfFunctionRecord, String> RETURNTYPE = createField("returntype", org.jooq.impl.SQLDataType.VARCHAR(100), this, "返回值类型，注意要能在meta里找到，以实现自动提示");

    /**
     * The column <code>SMETA_APP.uf_function.comment</code>. 函数功能说明，返回值说明
     */
    public final TableField<UfFunctionRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(500), this, "函数功能说明，返回值说明");

    /**
     * The column <code>SMETA_APP.uf_function.args</code>. 函数参数说明，要包括函数参数名称、类型、参数说明
     */
    public final TableField<UfFunctionRecord, String> ARGS = createField("args", org.jooq.impl.SQLDataType.CLOB, this, "函数参数说明，要包括函数参数名称、类型、参数说明");

    /**
     * The column <code>SMETA_APP.uf_function.announcement</code>. 该函数注意事项
     */
    public final TableField<UfFunctionRecord, String> ANNOUNCEMENT = createField("announcement", org.jooq.impl.SQLDataType.CLOB, this, "该函数注意事项");

    /**
     * The column <code>SMETA_APP.uf_function.metadata</code>. 函数元数据，比如用到了哪些组件
     */
    public final TableField<UfFunctionRecord, String> METADATA = createField("metadata", org.jooq.impl.SQLDataType.VARCHAR(500), this, "函数元数据，比如用到了哪些组件");

    /**
     * The column <code>SMETA_APP.uf_function.initializationneeded</code>. 是否需要初始化，一般脚本函数则需要
     */
    public final TableField<UfFunctionRecord, Integer> INITIALIZATIONNEEDED = createField("initializationneeded", org.jooq.impl.SQLDataType.INTEGER, this, "是否需要初始化，一般脚本函数则需要");

    /**
     * The column <code>SMETA_APP.uf_function.initializationinfo</code>. 初始化信息，比如何种脚本，如何初始化
     */
    public final TableField<UfFunctionRecord, String> INITIALIZATIONINFO = createField("initializationinfo", org.jooq.impl.SQLDataType.VARCHAR(100), this, "初始化信息，比如何种脚本，如何初始化");

    /**
     * The column <code>SMETA_APP.uf_function.cacheincluded</code>. 是否包含缓存
     */
    public final TableField<UfFunctionRecord, Integer> CACHEINCLUDED = createField("cacheincluded", org.jooq.impl.SQLDataType.INTEGER, this, "是否包含缓存");

    /**
     * The column <code>SMETA_APP.uf_function.createtime</code>. 创建时间
     */
    public final TableField<UfFunctionRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_function.creator</code>. 添加人
     */
    public final TableField<UfFunctionRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(100), this, "添加人");

    /**
     * The column <code>SMETA_APP.uf_function.body</code>. 函数体，用于基本函数，需要初始化
     */
    public final TableField<UfFunctionRecord, String> BODY = createField("body", org.jooq.impl.SQLDataType.CLOB, this, "函数体，用于基本函数，需要初始化");

    /**
     * The column <code>SMETA_APP.uf_function.lastupdatetime</code>. 最后修改时间
     */
    public final TableField<UfFunctionRecord, Timestamp> LASTUPDATETIME = createField("lastupdatetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "最后修改时间");

    /**
     * The column <code>SMETA_APP.uf_function.lastoperator</code>. 最后操作人
     */
    public final TableField<UfFunctionRecord, String> LASTOPERATOR = createField("lastoperator", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "最后操作人");

    /**
     * The column <code>SMETA_APP.uf_function.editor</code>. 2013-02-27 何种编辑器编辑的
     */
    public final TableField<UfFunctionRecord, String> EDITOR = createField("editor", org.jooq.impl.SQLDataType.VARCHAR(100), this, "2013-02-27 何种编辑器编辑的");

    /**
     * The column <code>SMETA_APP.uf_function.authorizationcode</code>. 授权码 2013-03-05
     */
    public final TableField<UfFunctionRecord, String> AUTHORIZATIONCODE = createField("authorizationcode", org.jooq.impl.SQLDataType.VARCHAR(500), this, "授权码 2013-03-05");

    /**
     * The column <code>SMETA_APP.uf_function.status</code>. 状态，0表示正常，-500表示废弃
     */
    public final TableField<UfFunctionRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "状态，0表示正常，-500表示废弃");

    /**
     * The column <code>SMETA_APP.uf_function.testcasescript</code>. 测试用例脚本
     */
    public final TableField<UfFunctionRecord, String> TESTCASESCRIPT = createField("testcasescript", org.jooq.impl.SQLDataType.CLOB, this, "测试用例脚本");

    /**
     * The column <code>SMETA_APP.uf_function.tags</code>. 标记 2014-01-23
     */
    public final TableField<UfFunctionRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR(500), this, "标记 2014-01-23");

    /**
     * The column <code>SMETA_APP.uf_function.weight</code>. 权重 2014-05-12
     */
    public final TableField<UfFunctionRecord, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "权重 2014-05-12");

    /**
     * The column <code>SMETA_APP.uf_function.snapshot</code>. 函数快照
     */
    public final TableField<UfFunctionRecord, String> SNAPSHOT = createField("snapshot", org.jooq.impl.SQLDataType.CLOB, this, "函数快照");

    /**
     * The column <code>SMETA_APP.uf_function.contacter</code>. 函数联系人
     */
    public final TableField<UfFunctionRecord, String> CONTACTER = createField("contacter", org.jooq.impl.SQLDataType.VARCHAR(100), this, "函数联系人");

    /**
     * The column <code>SMETA_APP.uf_function.tenantry</code>. 租户
     */
    public final TableField<UfFunctionRecord, String> TENANTRY = createField("tenantry", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("tb", org.jooq.impl.SQLDataType.VARCHAR)), this, "租户");

    /**
     * The column <code>SMETA_APP.uf_function.betahosts</code>. 发布状态
     */
    public final TableField<UfFunctionRecord, String> BETAHOSTS = createField("betahosts", org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.inline("empty", org.jooq.impl.SQLDataType.VARCHAR)), this, "发布状态");

    /**
     * The column <code>SMETA_APP.uf_function.report</code>. JSON格式单测数据
     */
    public final TableField<UfFunctionRecord, String> REPORT = createField("report", org.jooq.impl.SQLDataType.CLOB, this, "JSON格式单测数据");

    /**
     * Create a <code>SMETA_APP.uf_function</code> table reference
     */
    public UfFunction() {
        this(DSL.name("uf_function"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_function</code> table reference
     */
    public UfFunction(String alias) {
        this(DSL.name(alias), UF_FUNCTION);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_function</code> table reference
     */
    public UfFunction(Name alias) {
        this(alias, UF_FUNCTION);
    }

    private UfFunction(Name alias, Table<UfFunctionRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfFunction(Name alias, Table<UfFunctionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "函数表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_FUNCTION_PRIMARY, Indexes.UF_FUNCTION_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfFunctionRecord, Long> getIdentity() {
        return Keys.IDENTITY_UF_FUNCTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfFunctionRecord> getPrimaryKey() {
        return Keys.KEY_UF_FUNCTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfFunctionRecord>> getKeys() {
        return Arrays.<UniqueKey<UfFunctionRecord>>asList(Keys.KEY_UF_FUNCTION_PRIMARY, Keys.KEY_UF_FUNCTION_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFunction as(String alias) {
        return new UfFunction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFunction as(Name alias) {
        return new UfFunction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFunction rename(String name) {
        return new UfFunction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFunction rename(Name name) {
        return new UfFunction(name, null);
    }
}
