/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfConfigRunningRecord;


/**
 * 配置信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfConfigRunning extends TableImpl<UfConfigRunningRecord> {

    private static final long serialVersionUID = 101395858;

    /**
     * The reference instance of <code>SMETA_APP.uf_config_running</code>
     */
    public static final UfConfigRunning UF_CONFIG_RUNNING = new UfConfigRunning();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfConfigRunningRecord> getRecordType() {
        return UfConfigRunningRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_config_running.id</code>. 主键
     */
    public final TableField<UfConfigRunningRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_config_running.gmt_create</code>. 创建时间
     */
    public final TableField<UfConfigRunningRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_config_running.gmt_modified</code>. 修改时间
     */
    public final TableField<UfConfigRunningRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_config_running.category</code>. 分类
     */
    public final TableField<UfConfigRunningRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "分类");

    /**
     * The column <code>SMETA_APP.uf_config_running.type</code>. 数据类型
     */
    public final TableField<UfConfigRunningRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "数据类型");

    /**
     * The column <code>SMETA_APP.uf_config_running.clz</code>. 全限类名
     */
    public final TableField<UfConfigRunningRecord, String> CLZ = createField("clz", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "全限类名");

    /**
     * The column <code>SMETA_APP.uf_config_running.value</code>. 值
     */
    public final TableField<UfConfigRunningRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "值");

    /**
     * The column <code>SMETA_APP.uf_config_running.tenant_code</code>. 租户
     */
    public final TableField<UfConfigRunningRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "租户");

    /**
     * The column <code>SMETA_APP.uf_config_running.operator</code>. 操作人
     */
    public final TableField<UfConfigRunningRecord, ULong> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "操作人");

    /**
     * The column <code>SMETA_APP.uf_config_running.version</code>. 版本
     */
    public final TableField<UfConfigRunningRecord, UInteger> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "版本");

    /**
     * The column <code>SMETA_APP.uf_config_running.status</code>. 状态
     */
    public final TableField<UfConfigRunningRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "状态");

    /**
     * The column <code>SMETA_APP.uf_config_running.key_name</code>. 键
     */
    public final TableField<UfConfigRunningRecord, String> KEY_NAME = createField("key_name", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "键");

    /**
     * Create a <code>SMETA_APP.uf_config_running</code> table reference
     */
    public UfConfigRunning() {
        this(DSL.name("uf_config_running"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_config_running</code> table reference
     */
    public UfConfigRunning(String alias) {
        this(DSL.name(alias), UF_CONFIG_RUNNING);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_config_running</code> table reference
     */
    public UfConfigRunning(Name alias) {
        this(alias, UF_CONFIG_RUNNING);
    }

    private UfConfigRunning(Name alias, Table<UfConfigRunningRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfConfigRunning(Name alias, Table<UfConfigRunningRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "配置信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_CONFIG_RUNNING_IDX_CONFIG_QUERY, Indexes.UF_CONFIG_RUNNING_PRIMARY, Indexes.UF_CONFIG_RUNNING_UK_CONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfConfigRunningRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_CONFIG_RUNNING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfConfigRunningRecord> getPrimaryKey() {
        return Keys.KEY_UF_CONFIG_RUNNING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfConfigRunningRecord>> getKeys() {
        return Arrays.<UniqueKey<UfConfigRunningRecord>>asList(Keys.KEY_UF_CONFIG_RUNNING_PRIMARY, Keys.KEY_UF_CONFIG_RUNNING_UK_CONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfConfigRunning as(String alias) {
        return new UfConfigRunning(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfConfigRunning as(Name alias) {
        return new UfConfigRunning(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfConfigRunning rename(String name) {
        return new UfConfigRunning(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfConfigRunning rename(Name name) {
        return new UfConfigRunning(name, null);
    }
}
