/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.MoreEngineRecord;


/**
 * 引擎版本表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MoreEngine extends TableImpl<MoreEngineRecord> {

    private static final long serialVersionUID = 766149040;

    /**
     * The reference instance of <code>SMETA_APP.more_engine</code>
     */
    public static final MoreEngine MORE_ENGINE = new MoreEngine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MoreEngineRecord> getRecordType() {
        return MoreEngineRecord.class;
    }

    /**
     * The column <code>SMETA_APP.more_engine.id</code>. 主键
     */
    public final TableField<MoreEngineRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.more_engine.gmt_create</code>. 创建时间
     */
    public final TableField<MoreEngineRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.more_engine.gmt_modified</code>. 修改时间
     */
    public final TableField<MoreEngineRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.more_engine.operator_id</code>. 操作人id
     */
    public final TableField<MoreEngineRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "操作人id");

    /**
     * The column <code>SMETA_APP.more_engine.operator</code>. 操作人
     */
    public final TableField<MoreEngineRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作人");

    /**
     * The column <code>SMETA_APP.more_engine.name</code>. 名称，唯一标识
     */
    public final TableField<MoreEngineRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "名称，唯一标识");

    /**
     * The column <code>SMETA_APP.more_engine.download_url</code>. 下载地址
     */
    public final TableField<MoreEngineRecord, String> DOWNLOAD_URL = createField("download_url", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "下载地址");

    /**
     * The column <code>SMETA_APP.more_engine.md5</code>. md5编码
     */
    public final TableField<MoreEngineRecord, String> MD5 = createField("md5", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "md5编码");

    /**
     * The column <code>SMETA_APP.more_engine.status</code>. 状态，1-有效，0-草稿，-1-删除，默认是有效的
     */
    public final TableField<MoreEngineRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "状态，1-有效，0-草稿，-1-删除，默认是有效的");

    /**
     * The column <code>SMETA_APP.more_engine.prior</code>. 优先使用状态，true-为默优先引擎，false-非默认引擎
     */
    public final TableField<MoreEngineRecord, Byte> PRIOR = createField("prior", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "优先使用状态，true-为默优先引擎，false-非默认引擎");

    /**
     * The column <code>SMETA_APP.more_engine.file_name</code>. 文件名称，包括扩展名,也是唯一
     */
    public final TableField<MoreEngineRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR(256), this, "文件名称，包括扩展名,也是唯一");

    /**
     * The column <code>SMETA_APP.more_engine.blink_resource_id</code>. 对应的blink的资源id
     */
    public final TableField<MoreEngineRecord, String> BLINK_RESOURCE_ID = createField("blink_resource_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "对应的blink的资源id");

    /**
     * Create a <code>SMETA_APP.more_engine</code> table reference
     */
    public MoreEngine() {
        this(DSL.name("more_engine"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.more_engine</code> table reference
     */
    public MoreEngine(String alias) {
        this(DSL.name(alias), MORE_ENGINE);
    }

    /**
     * Create an aliased <code>SMETA_APP.more_engine</code> table reference
     */
    public MoreEngine(Name alias) {
        this(alias, MORE_ENGINE);
    }

    private MoreEngine(Name alias, Table<MoreEngineRecord> aliased) {
        this(alias, aliased, null);
    }

    private MoreEngine(Name alias, Table<MoreEngineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "引擎版本表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MORE_ENGINE_PRIMARY, Indexes.MORE_ENGINE_UK_FILENAME, Indexes.MORE_ENGINE_UK_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MoreEngineRecord, ULong> getIdentity() {
        return Keys.IDENTITY_MORE_ENGINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MoreEngineRecord> getPrimaryKey() {
        return Keys.KEY_MORE_ENGINE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MoreEngineRecord>> getKeys() {
        return Arrays.<UniqueKey<MoreEngineRecord>>asList(Keys.KEY_MORE_ENGINE_PRIMARY, Keys.KEY_MORE_ENGINE_UK_NAME, Keys.KEY_MORE_ENGINE_UK_FILENAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MoreEngine as(String alias) {
        return new MoreEngine(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MoreEngine as(Name alias) {
        return new MoreEngine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MoreEngine rename(String name) {
        return new MoreEngine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MoreEngine rename(Name name) {
        return new MoreEngine(name, null);
    }
}
