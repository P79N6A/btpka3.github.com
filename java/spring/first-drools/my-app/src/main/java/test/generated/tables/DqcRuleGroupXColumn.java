/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DqcRuleGroupXColumnRecord;


/**
 * 规则分组和属性映射表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DqcRuleGroupXColumn extends TableImpl<DqcRuleGroupXColumnRecord> {

    private static final long serialVersionUID = 140482609;

    /**
     * The reference instance of <code>SMETA_APP.dqc_rule_group_x_column</code>
     */
    public static final DqcRuleGroupXColumn DQC_RULE_GROUP_X_COLUMN = new DqcRuleGroupXColumn();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DqcRuleGroupXColumnRecord> getRecordType() {
        return DqcRuleGroupXColumnRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.id</code>. 主键
     */
    public final TableField<DqcRuleGroupXColumnRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.gmt_create</code>. 创建时间
     */
    public final TableField<DqcRuleGroupXColumnRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.gmt_modified</code>. 修改时间
     */
    public final TableField<DqcRuleGroupXColumnRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.group_code</code>. 规则分组code
     */
    public final TableField<DqcRuleGroupXColumnRecord, String> GROUP_CODE = createField("group_code", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "规则分组code");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.column_code</code>. 属性code
     */
    public final TableField<DqcRuleGroupXColumnRecord, String> COLUMN_CODE = createField("column_code", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "属性code");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.column_name</code>. 属性名称
     */
    public final TableField<DqcRuleGroupXColumnRecord, String> COLUMN_NAME = createField("column_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "属性名称");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.status</code>. 状态，1-有效，0-无效
     */
    public final TableField<DqcRuleGroupXColumnRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，1-有效，0-无效");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.last_operator</code>. 最后操作人
     */
    public final TableField<DqcRuleGroupXColumnRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "最后操作人");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_column.column_type</code>. 字段类型
     */
    public final TableField<DqcRuleGroupXColumnRecord, String> COLUMN_TYPE = createField("column_type", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "字段类型");

    /**
     * Create a <code>SMETA_APP.dqc_rule_group_x_column</code> table reference
     */
    public DqcRuleGroupXColumn() {
        this(DSL.name("dqc_rule_group_x_column"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_rule_group_x_column</code> table reference
     */
    public DqcRuleGroupXColumn(String alias) {
        this(DSL.name(alias), DQC_RULE_GROUP_X_COLUMN);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_rule_group_x_column</code> table reference
     */
    public DqcRuleGroupXColumn(Name alias) {
        this(alias, DQC_RULE_GROUP_X_COLUMN);
    }

    private DqcRuleGroupXColumn(Name alias, Table<DqcRuleGroupXColumnRecord> aliased) {
        this(alias, aliased, null);
    }

    private DqcRuleGroupXColumn(Name alias, Table<DqcRuleGroupXColumnRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "规则分组和属性映射表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DQC_RULE_GROUP_X_COLUMN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DqcRuleGroupXColumnRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DQC_RULE_GROUP_X_COLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DqcRuleGroupXColumnRecord> getPrimaryKey() {
        return Keys.KEY_DQC_RULE_GROUP_X_COLUMN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DqcRuleGroupXColumnRecord>> getKeys() {
        return Arrays.<UniqueKey<DqcRuleGroupXColumnRecord>>asList(Keys.KEY_DQC_RULE_GROUP_X_COLUMN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcRuleGroupXColumn as(String alias) {
        return new DqcRuleGroupXColumn(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcRuleGroupXColumn as(Name alias) {
        return new DqcRuleGroupXColumn(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcRuleGroupXColumn rename(String name) {
        return new DqcRuleGroupXColumn(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcRuleGroupXColumn rename(Name name) {
        return new DqcRuleGroupXColumn(name, null);
    }
}
