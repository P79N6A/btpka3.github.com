/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DqcWarningTableRecordRecord;


/**
 * dqc监控扫描事件记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DqcWarningTableRecord extends TableImpl<DqcWarningTableRecordRecord> {

    private static final long serialVersionUID = 660034192;

    /**
     * The reference instance of <code>SMETA_APP.dqc_warning_table_record</code>
     */
    public static final DqcWarningTableRecord DQC_WARNING_TABLE_RECORD = new DqcWarningTableRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DqcWarningTableRecordRecord> getRecordType() {
        return DqcWarningTableRecordRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.id</code>. 主键
     */
    public final TableField<DqcWarningTableRecordRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.gmt_create</code>. 创建时间
     */
    public final TableField<DqcWarningTableRecordRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.gmt_modified</code>. 修改时间
     */
    public final TableField<DqcWarningTableRecordRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.table_name</code>. 表名
     */
    public final TableField<DqcWarningTableRecordRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "表名");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.actual_expression</code>. 分区
     */
    public final TableField<DqcWarningTableRecordRecord, String> ACTUAL_EXPRESSION = createField("actual_expression", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "分区");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.warning_count</code>. 报警总数
     */
    public final TableField<DqcWarningTableRecordRecord, Integer> WARNING_COUNT = createField("warning_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "报警总数");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.event_code</code>. 事件编码
     */
    public final TableField<DqcWarningTableRecordRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.dqc_warning_table_record.event_name</code>. 事件名称
     */
    public final TableField<DqcWarningTableRecordRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件名称");

    /**
     * Create a <code>SMETA_APP.dqc_warning_table_record</code> table reference
     */
    public DqcWarningTableRecord() {
        this(DSL.name("dqc_warning_table_record"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_warning_table_record</code> table reference
     */
    public DqcWarningTableRecord(String alias) {
        this(DSL.name(alias), DQC_WARNING_TABLE_RECORD);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_warning_table_record</code> table reference
     */
    public DqcWarningTableRecord(Name alias) {
        this(alias, DQC_WARNING_TABLE_RECORD);
    }

    private DqcWarningTableRecord(Name alias, Table<DqcWarningTableRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private DqcWarningTableRecord(Name alias, Table<DqcWarningTableRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "dqc监控扫描事件记录");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DQC_WARNING_TABLE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DqcWarningTableRecordRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DQC_WARNING_TABLE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DqcWarningTableRecordRecord> getPrimaryKey() {
        return Keys.KEY_DQC_WARNING_TABLE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DqcWarningTableRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<DqcWarningTableRecordRecord>>asList(Keys.KEY_DQC_WARNING_TABLE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcWarningTableRecord as(String alias) {
        return new DqcWarningTableRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcWarningTableRecord as(Name alias) {
        return new DqcWarningTableRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcWarningTableRecord rename(String name) {
        return new DqcWarningTableRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcWarningTableRecord rename(Name name) {
        return new DqcWarningTableRecord(name, null);
    }
}
