/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.GlobalColumnRecord;


/**
 * 全局基础字段，用于跨事件查询
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GlobalColumn extends TableImpl<GlobalColumnRecord> {

    private static final long serialVersionUID = -1890190551;

    /**
     * The reference instance of <code>SMETA_APP.global_column</code>
     */
    public static final GlobalColumn GLOBAL_COLUMN = new GlobalColumn();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GlobalColumnRecord> getRecordType() {
        return GlobalColumnRecord.class;
    }

    /**
     * The column <code>SMETA_APP.global_column.id</code>. 主键
     */
    public final TableField<GlobalColumnRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.global_column.gmt_create</code>. 创建时间
     */
    public final TableField<GlobalColumnRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.global_column.gmt_modified</code>. 修改时间
     */
    public final TableField<GlobalColumnRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.global_column.column_code</code>. 属性code
     */
    public final TableField<GlobalColumnRecord, String> COLUMN_CODE = createField("column_code", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "属性code");

    /**
     * The column <code>SMETA_APP.global_column.column_name</code>. 属性中文名
     */
    public final TableField<GlobalColumnRecord, String> COLUMN_NAME = createField("column_name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "属性中文名");

    /**
     * The column <code>SMETA_APP.global_column.status</code>. 状态，0-废弃，1-有效
     */
    public final TableField<GlobalColumnRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，0-废弃，1-有效");

    /**
     * Create a <code>SMETA_APP.global_column</code> table reference
     */
    public GlobalColumn() {
        this(DSL.name("global_column"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.global_column</code> table reference
     */
    public GlobalColumn(String alias) {
        this(DSL.name(alias), GLOBAL_COLUMN);
    }

    /**
     * Create an aliased <code>SMETA_APP.global_column</code> table reference
     */
    public GlobalColumn(Name alias) {
        this(alias, GLOBAL_COLUMN);
    }

    private GlobalColumn(Name alias, Table<GlobalColumnRecord> aliased) {
        this(alias, aliased, null);
    }

    private GlobalColumn(Name alias, Table<GlobalColumnRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "全局基础字段，用于跨事件查询");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GLOBAL_COLUMN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GlobalColumnRecord, ULong> getIdentity() {
        return Keys.IDENTITY_GLOBAL_COLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GlobalColumnRecord> getPrimaryKey() {
        return Keys.KEY_GLOBAL_COLUMN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GlobalColumnRecord>> getKeys() {
        return Arrays.<UniqueKey<GlobalColumnRecord>>asList(Keys.KEY_GLOBAL_COLUMN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GlobalColumn as(String alias) {
        return new GlobalColumn(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GlobalColumn as(Name alias) {
        return new GlobalColumn(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GlobalColumn rename(String name) {
        return new GlobalColumn(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GlobalColumn rename(Name name) {
        return new GlobalColumn(name, null);
    }
}
