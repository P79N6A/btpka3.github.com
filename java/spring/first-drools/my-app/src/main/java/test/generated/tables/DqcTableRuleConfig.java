/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DqcTableRuleConfigRecord;


/**
 * 表级规则配置
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DqcTableRuleConfig extends TableImpl<DqcTableRuleConfigRecord> {

    private static final long serialVersionUID = -858970465;

    /**
     * The reference instance of <code>SMETA_APP.dqc_table_rule_config</code>
     */
    public static final DqcTableRuleConfig DQC_TABLE_RULE_CONFIG = new DqcTableRuleConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DqcTableRuleConfigRecord> getRecordType() {
        return DqcTableRuleConfigRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.id</code>. 主键
     */
    public final TableField<DqcTableRuleConfigRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.gmt_create</code>. 创建时间
     */
    public final TableField<DqcTableRuleConfigRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.gmt_modified</code>. 修改时间
     */
    public final TableField<DqcTableRuleConfigRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.table_name</code>. 表名
     */
    public final TableField<DqcTableRuleConfigRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "表名");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.event_column_code</code>. 列名
     */
    public final TableField<DqcTableRuleConfigRecord, String> EVENT_COLUMN_CODE = createField("event_column_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "列名");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.template</code>. 规则模板
     */
    public final TableField<DqcTableRuleConfigRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "规则模板");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.rule_content</code>. 规则内容
     */
    public final TableField<DqcTableRuleConfigRecord, String> RULE_CONTENT = createField("rule_content", org.jooq.impl.SQLDataType.CLOB, this, "规则内容");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.event_code</code>. 事件编码
     */
    public final TableField<DqcTableRuleConfigRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.event_name</code>. 事件名称
     */
    public final TableField<DqcTableRuleConfigRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件名称");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.key_column</code>. 是否核心字段，1-是，0-否
     */
    public final TableField<DqcTableRuleConfigRecord, Integer> KEY_COLUMN = createField("key_column", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "是否核心字段，1-是，0-否");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.rule_type</code>. 规则类型，1-用户自定义，0-系统生成
     */
    public final TableField<DqcTableRuleConfigRecord, Integer> RULE_TYPE = createField("rule_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "规则类型，1-用户自定义，0-系统生成");

    /**
     * The column <code>SMETA_APP.dqc_table_rule_config.status</code>. 是否报警，1-报警，0-不报警
     */
    public final TableField<DqcTableRuleConfigRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "是否报警，1-报警，0-不报警");

    /**
     * Create a <code>SMETA_APP.dqc_table_rule_config</code> table reference
     */
    public DqcTableRuleConfig() {
        this(DSL.name("dqc_table_rule_config"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_table_rule_config</code> table reference
     */
    public DqcTableRuleConfig(String alias) {
        this(DSL.name(alias), DQC_TABLE_RULE_CONFIG);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_table_rule_config</code> table reference
     */
    public DqcTableRuleConfig(Name alias) {
        this(alias, DQC_TABLE_RULE_CONFIG);
    }

    private DqcTableRuleConfig(Name alias, Table<DqcTableRuleConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private DqcTableRuleConfig(Name alias, Table<DqcTableRuleConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "表级规则配置");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DQC_TABLE_RULE_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DqcTableRuleConfigRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DQC_TABLE_RULE_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DqcTableRuleConfigRecord> getPrimaryKey() {
        return Keys.KEY_DQC_TABLE_RULE_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DqcTableRuleConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<DqcTableRuleConfigRecord>>asList(Keys.KEY_DQC_TABLE_RULE_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcTableRuleConfig as(String alias) {
        return new DqcTableRuleConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcTableRuleConfig as(Name alias) {
        return new DqcTableRuleConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcTableRuleConfig rename(String name) {
        return new DqcTableRuleConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcTableRuleConfig rename(Name name) {
        return new DqcTableRuleConfig(name, null);
    }
}
