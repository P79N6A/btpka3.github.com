/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.DictEventColumns;


/**
 * 事件字段关系表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictEventColumnsRecord extends UpdatableRecordImpl<DictEventColumnsRecord> {

    private static final long serialVersionUID = 1170665987;

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.event_code</code>. 事件编码
     */
    public void setEventCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.event_code</code>. 事件编码
     */
    public String getEventCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.column_code</code>. 字段编码
     */
    public void setColumnCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.column_code</code>. 字段编码
     */
    public String getColumnCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.event_column_code</code>. 事件下唯一字段。有实体：实体code_字段code，没实体：和字段code一样
     */
    public void setEventColumnCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.event_column_code</code>. 事件下唯一字段。有实体：实体code_字段code，没实体：和字段code一样
     */
    public String getEventColumnCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.status</code>. 状态：1有效，2草稿，3审批中 5伪删除的无效状态
     */
    public void setStatus(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.status</code>. 状态：1有效，2草稿，3审批中 5伪删除的无效状态
     */
    public Byte getStatus() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.operator_id</code>. 操作人ID
     */
    public void setOperatorId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.operator_id</code>. 操作人ID
     */
    public String getOperatorId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.operator</code>. 操作人
     */
    public void setOperator(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.operator</code>. 操作人
     */
    public String getOperator() {
        return (String) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.empty_status</code>. 是否非空，1：是，0：否
     */
    public void setEmptyStatus(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.empty_status</code>. 是否非空，1：是，0：否
     */
    public Byte getEmptyStatus() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.enum_status</code>. 是否可枚举，1：是，0：否
     */
    public void setEnumStatus(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.enum_status</code>. 是否可枚举，1：是，0：否
     */
    public Byte getEnumStatus() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.enum_value</code>. 枚举值，key：value格式存储
     */
    public void setEnumValue(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.enum_value</code>. 枚举值，key：value格式存储
     */
    public String getEnumValue() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.script</code>. 自定义脚本
     */
    public void setScript(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.script</code>. 自定义脚本
     */
    public String getScript() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.attr_type</code>. 属性分类：1原生属性，2函数属性，3实体属性
     */
    public void setAttrType(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.attr_type</code>. 属性分类：1原生属性，2函数属性，3实体属性
     */
    public Byte getAttrType() {
        return (Byte) get(13);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.comment</code>. 备注
     */
    public void setComment(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.comment</code>. 备注
     */
    public String getComment() {
        return (String) get(14);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.entity_code</code>. 实体编码
     */
    public void setEntityCode(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.entity_code</code>. 实体编码
     */
    public String getEntityCode() {
        return (String) get(15);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.indi_property</code>. 指标的时间和主键信息
     */
    public void setIndiProperty(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.indi_property</code>. 指标的时间和主键信息
     */
    public String getIndiProperty() {
        return (String) get(16);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.indi_code</code>. 指标中心指标code
     */
    public void setIndiCode(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.indi_code</code>. 指标中心指标code
     */
    public String getIndiCode() {
        return (String) get(17);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.indi_type</code>. 指标类型
     */
    public void setIndiType(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.indi_type</code>. 指标类型
     */
    public String getIndiType() {
        return (String) get(18);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.tenant_code</code>. 租户code
     */
    public void setTenantCode(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.tenant_code</code>. 租户code
     */
    public String getTenantCode() {
        return (String) get(19);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.tag_code</code>. 属性打标code
     */
    public void setTagCode(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.tag_code</code>. 属性打标code
     */
    public String getTagCode() {
        return (String) get(20);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.type</code>. 字段类型
     */
    public void setType(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.type</code>. 字段类型
     */
    public String getType() {
        return (String) get(21);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.offline_script</code>. 离线取数脚本
     */
    public void setOfflineScript(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.offline_script</code>. 离线取数脚本
     */
    public String getOfflineScript() {
        return (String) get(22);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.biz_level</code>. 业务等级
     */
    public void setBizLevel(String value) {
        set(23, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.biz_level</code>. 业务等级
     */
    public String getBizLevel() {
        return (String) get(23);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.offline_column</code>. 离线表里对应的列名
     */
    public void setOfflineColumn(String value) {
        set(24, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.offline_column</code>. 离线表里对应的列名
     */
    public String getOfflineColumn() {
        return (String) get(24);
    }

    /**
     * Setter for <code>SMETA_APP.dict_event_columns.func_script</code>. 取数函数脚本
     */
    public void setFuncScript(String value) {
        set(25, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_event_columns.func_script</code>. 取数函数脚本
     */
    public String getFuncScript() {
        return (String) get(25);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DictEventColumnsRecord
     */
    public DictEventColumnsRecord() {
        super(DictEventColumns.DICT_EVENT_COLUMNS);
    }

    /**
     * Create a detached, initialised DictEventColumnsRecord
     */
    public DictEventColumnsRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String eventCode, String columnCode, String eventColumnCode, Byte status, String operatorId, String operator, Byte emptyStatus, Byte enumStatus, String enumValue, String script, Byte attrType, String comment, String entityCode, String indiProperty, String indiCode, String indiType, String tenantCode, String tagCode, String type, String offlineScript, String bizLevel, String offlineColumn, String funcScript) {
        super(DictEventColumns.DICT_EVENT_COLUMNS);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, eventCode);
        set(4, columnCode);
        set(5, eventColumnCode);
        set(6, status);
        set(7, operatorId);
        set(8, operator);
        set(9, emptyStatus);
        set(10, enumStatus);
        set(11, enumValue);
        set(12, script);
        set(13, attrType);
        set(14, comment);
        set(15, entityCode);
        set(16, indiProperty);
        set(17, indiCode);
        set(18, indiType);
        set(19, tenantCode);
        set(20, tagCode);
        set(21, type);
        set(22, offlineScript);
        set(23, bizLevel);
        set(24, offlineColumn);
        set(25, funcScript);
    }
}
