/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DictSceneColumnPoolRecord;


/**
 * 场景里用到的特征集合
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictSceneColumnPool extends TableImpl<DictSceneColumnPoolRecord> {

    private static final long serialVersionUID = -582740423;

    /**
     * The reference instance of <code>SMETA_APP.dict_scene_column_pool</code>
     */
    public static final DictSceneColumnPool DICT_SCENE_COLUMN_POOL = new DictSceneColumnPool();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictSceneColumnPoolRecord> getRecordType() {
        return DictSceneColumnPoolRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.id</code>. 主键
     */
    public final TableField<DictSceneColumnPoolRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.gmt_create</code>. 创建时间
     */
    public final TableField<DictSceneColumnPoolRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.gmt_modified</code>. 修改时间
     */
    public final TableField<DictSceneColumnPoolRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.cn_name</code>. 特征中文名
     */
    public final TableField<DictSceneColumnPoolRecord, String> CN_NAME = createField("cn_name", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "特征中文名");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.en_name</code>. 特征英文名
     */
    public final TableField<DictSceneColumnPoolRecord, String> EN_NAME = createField("en_name", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "特征英文名");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.code</code>. 特征code
     */
    public final TableField<DictSceneColumnPoolRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "特征code");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.type</code>. 特征类型
     */
    public final TableField<DictSceneColumnPoolRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "特征类型");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.operator</code>. 操作人
     */
    public final TableField<DictSceneColumnPoolRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "操作人");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.status</code>. 状态，1-有效，0-废弃
     */
    public final TableField<DictSceneColumnPoolRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，1-有效，0-废弃");

    /**
     * The column <code>SMETA_APP.dict_scene_column_pool.operator_id</code>. 操作人id
     */
    public final TableField<DictSceneColumnPoolRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "操作人id");

    /**
     * Create a <code>SMETA_APP.dict_scene_column_pool</code> table reference
     */
    public DictSceneColumnPool() {
        this(DSL.name("dict_scene_column_pool"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_scene_column_pool</code> table reference
     */
    public DictSceneColumnPool(String alias) {
        this(DSL.name(alias), DICT_SCENE_COLUMN_POOL);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_scene_column_pool</code> table reference
     */
    public DictSceneColumnPool(Name alias) {
        this(alias, DICT_SCENE_COLUMN_POOL);
    }

    private DictSceneColumnPool(Name alias, Table<DictSceneColumnPoolRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictSceneColumnPool(Name alias, Table<DictSceneColumnPoolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "场景里用到的特征集合");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DICT_SCENE_COLUMN_POOL_PRIMARY, Indexes.DICT_SCENE_COLUMN_POOL_UK_CN_NAME, Indexes.DICT_SCENE_COLUMN_POOL_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictSceneColumnPoolRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DICT_SCENE_COLUMN_POOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictSceneColumnPoolRecord> getPrimaryKey() {
        return Keys.KEY_DICT_SCENE_COLUMN_POOL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictSceneColumnPoolRecord>> getKeys() {
        return Arrays.<UniqueKey<DictSceneColumnPoolRecord>>asList(Keys.KEY_DICT_SCENE_COLUMN_POOL_PRIMARY, Keys.KEY_DICT_SCENE_COLUMN_POOL_UK_CN_NAME, Keys.KEY_DICT_SCENE_COLUMN_POOL_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictSceneColumnPool as(String alias) {
        return new DictSceneColumnPool(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictSceneColumnPool as(Name alias) {
        return new DictSceneColumnPool(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictSceneColumnPool rename(String name) {
        return new DictSceneColumnPool(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DictSceneColumnPool rename(Name name) {
        return new DictSceneColumnPool(name, null);
    }
}
