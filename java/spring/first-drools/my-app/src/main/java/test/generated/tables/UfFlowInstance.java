/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfFlowInstanceRecord;


/**
 * 流程实例表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfFlowInstance extends TableImpl<UfFlowInstanceRecord> {

    private static final long serialVersionUID = 1297721375;

    /**
     * The reference instance of <code>SMETA_APP.uf_flow_instance</code>
     */
    public static final UfFlowInstance UF_FLOW_INSTANCE = new UfFlowInstance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfFlowInstanceRecord> getRecordType() {
        return UfFlowInstanceRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_flow_instance.id</code>. 主键
     */
    public final TableField<UfFlowInstanceRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.gmt_create</code>. 创建时间
     */
    public final TableField<UfFlowInstanceRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.gmt_modified</code>. 实例完成时间
     */
    public final TableField<UfFlowInstanceRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "实例完成时间");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.flow_code</code>. 流程编码
     */
    public final TableField<UfFlowInstanceRecord, String> FLOW_CODE = createField("flow_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "流程编码");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.business_id</code>. 对象id
     */
    public final TableField<UfFlowInstanceRecord, String> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "对象id");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.business_type</code>. 对象类型
     */
    public final TableField<UfFlowInstanceRecord, String> BUSINESS_TYPE = createField("business_type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "对象类型");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.title</code>. 实例的名称
     */
    public final TableField<UfFlowInstanceRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "实例的名称");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.status</code>. 实例状态（运行、异常、通过、拒绝、撤销、终止）
     */
    public final TableField<UfFlowInstanceRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "实例状态（运行、异常、通过、拒绝、撤销、终止）");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.variable</code>. 实例变量
     */
    public final TableField<UfFlowInstanceRecord, String> VARIABLE = createField("variable", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "实例变量");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.tenant_code</code>. 租户编码
     */
    public final TableField<UfFlowInstanceRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "租户编码");

    /**
     * The column <code>SMETA_APP.uf_flow_instance.originator_id</code>. 发起人
     */
    public final TableField<UfFlowInstanceRecord, ULong> ORIGINATOR_ID = createField("originator_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "发起人");

    /**
     * Create a <code>SMETA_APP.uf_flow_instance</code> table reference
     */
    public UfFlowInstance() {
        this(DSL.name("uf_flow_instance"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_flow_instance</code> table reference
     */
    public UfFlowInstance(String alias) {
        this(DSL.name(alias), UF_FLOW_INSTANCE);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_flow_instance</code> table reference
     */
    public UfFlowInstance(Name alias) {
        this(alias, UF_FLOW_INSTANCE);
    }

    private UfFlowInstance(Name alias, Table<UfFlowInstanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfFlowInstance(Name alias, Table<UfFlowInstanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "流程实例表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_FLOW_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfFlowInstanceRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_FLOW_INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfFlowInstanceRecord> getPrimaryKey() {
        return Keys.KEY_UF_FLOW_INSTANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfFlowInstanceRecord>> getKeys() {
        return Arrays.<UniqueKey<UfFlowInstanceRecord>>asList(Keys.KEY_UF_FLOW_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFlowInstance as(String alias) {
        return new UfFlowInstance(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFlowInstance as(Name alias) {
        return new UfFlowInstance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFlowInstance rename(String name) {
        return new UfFlowInstance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFlowInstance rename(Name name) {
        return new UfFlowInstance(name, null);
    }
}
