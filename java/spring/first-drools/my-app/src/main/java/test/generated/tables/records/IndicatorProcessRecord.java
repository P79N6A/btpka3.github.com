/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.IndicatorProcess;


/**
 * 指标流程实例关系表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndicatorProcessRecord extends UpdatableRecordImpl<IndicatorProcessRecord> implements Record7<ULong, Timestamp, Timestamp, String, String, String, String> {

    private static final long serialVersionUID = -489478307;

    /**
     * Setter for <code>SMETA_APP.indicator_process.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_process.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_process.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_process.key_code</code>. 业务编码
     */
    public void setKeyCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.key_code</code>. 业务编码
     */
    public String getKeyCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_process.process_id</code>. 流程实例ID
     */
    public void setProcessId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.process_id</code>. 流程实例ID
     */
    public String getProcessId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_process.status</code>. 流程实例状态
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.status</code>. 流程实例状态
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_process.indicator_type</code>. 指标类型
     */
    public void setIndicatorType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_process.indicator_type</code>. 指标类型
     */
    public String getIndicatorType() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<ULong, Timestamp, Timestamp, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<ULong, Timestamp, Timestamp, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return IndicatorProcess.INDICATOR_PROCESS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return IndicatorProcess.INDICATOR_PROCESS.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return IndicatorProcess.INDICATOR_PROCESS.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return IndicatorProcess.INDICATOR_PROCESS.KEY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return IndicatorProcess.INDICATOR_PROCESS.PROCESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return IndicatorProcess.INDICATOR_PROCESS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return IndicatorProcess.INDICATOR_PROCESS.INDICATOR_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getKeyCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getProcessId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIndicatorType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getKeyCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getProcessId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIndicatorType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value4(String value) {
        setKeyCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value5(String value) {
        setProcessId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value6(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord value7(String value) {
        setIndicatorType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorProcessRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndicatorProcessRecord
     */
    public IndicatorProcessRecord() {
        super(IndicatorProcess.INDICATOR_PROCESS);
    }

    /**
     * Create a detached, initialised IndicatorProcessRecord
     */
    public IndicatorProcessRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String keyCode, String processId, String status, String indicatorType) {
        super(IndicatorProcess.INDICATOR_PROCESS);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, keyCode);
        set(4, processId);
        set(5, status);
        set(6, indicatorType);
    }
}
