/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.RiskTagRecord;


/**
 * 标签元数据表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiskTag extends TableImpl<RiskTagRecord> {

    private static final long serialVersionUID = -1530873576;

    /**
     * The reference instance of <code>SMETA_APP.risk_tag</code>
     */
    public static final RiskTag RISK_TAG = new RiskTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RiskTagRecord> getRecordType() {
        return RiskTagRecord.class;
    }

    /**
     * The column <code>SMETA_APP.risk_tag.id</code>. 主键
     */
    public final TableField<RiskTagRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.risk_tag.gmt_create</code>. 创建时间
     */
    public final TableField<RiskTagRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.risk_tag.gmt_modified</code>. 修改时间
     */
    public final TableField<RiskTagRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.risk_tag.tag_name</code>. 标签名
     */
    public final TableField<RiskTagRecord, String> TAG_NAME = createField("tag_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "标签名");

    /**
     * The column <code>SMETA_APP.risk_tag.tag_def</code>. 标签详细定义
     */
    public final TableField<RiskTagRecord, String> TAG_DEF = createField("tag_def", org.jooq.impl.SQLDataType.CLOB, this, "标签详细定义");

    /**
     * The column <code>SMETA_APP.risk_tag.contact</code>. 业务联系人
     */
    public final TableField<RiskTagRecord, String> CONTACT = createField("contact", org.jooq.impl.SQLDataType.VARCHAR(20), this, "业务联系人");

    /**
     * The column <code>SMETA_APP.risk_tag.parent_id</code>. 父节点ID
     */
    public final TableField<RiskTagRecord, ULong> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "父节点ID");

    /**
     * The column <code>SMETA_APP.risk_tag.tenant_code</code>. 租户code
     */
    public final TableField<RiskTagRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(32), this, "租户code");

    /**
     * The column <code>SMETA_APP.risk_tag.tag_type</code>. 标签类型
     */
    public final TableField<RiskTagRecord, String> TAG_TYPE = createField("tag_type", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "标签类型");

    /**
     * The column <code>SMETA_APP.risk_tag.last_operator</code>. 最后编辑人
     */
    public final TableField<RiskTagRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(32), this, "最后编辑人");

    /**
     * The column <code>SMETA_APP.risk_tag.status</code>. 状态，0-废弃，1-有效
     */
    public final TableField<RiskTagRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "状态，0-废弃，1-有效");

    /**
     * The column <code>SMETA_APP.risk_tag.leaf</code>. 是否叶子节点，1-是，0-否
     */
    public final TableField<RiskTagRecord, Integer> LEAF = createField("leaf", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "是否叶子节点，1-是，0-否");

    /**
     * The column <code>SMETA_APP.risk_tag.tag_category</code>. 标签类别，目前主要是淘宝规则使用，1-严重违规，0-一般违规
     */
    public final TableField<RiskTagRecord, Integer> TAG_CATEGORY = createField("tag_category", org.jooq.impl.SQLDataType.INTEGER, this, "标签类别，目前主要是淘宝规则使用，1-严重违规，0-一般违规");

    /**
     * The column <code>SMETA_APP.risk_tag.tag_level</code>. 标签等级
     */
    public final TableField<RiskTagRecord, String> TAG_LEVEL = createField("tag_level", org.jooq.impl.SQLDataType.VARCHAR(64), this, "标签等级");

    /**
     * The column <code>SMETA_APP.risk_tag.risk_tag_id</code>. 风险标签id，主要针对风险类型，数据从iris迁移过来，其他类型数据也沿用此字段
     */
    public final TableField<RiskTagRecord, Long> RISK_TAG_ID = createField("risk_tag_id", org.jooq.impl.SQLDataType.BIGINT, this, "风险标签id，主要针对风险类型，数据从iris迁移过来，其他类型数据也沿用此字段");

    /**
     * The column <code>SMETA_APP.risk_tag.id_path</code>. 当前节点的路径，用id拼接
     */
    public final TableField<RiskTagRecord, String> ID_PATH = createField("id_path", org.jooq.impl.SQLDataType.VARCHAR(512), this, "当前节点的路径，用id拼接");

    /**
     * The column <code>SMETA_APP.risk_tag.name_path</code>. 当前节点路径，用标签名拼接
     */
    public final TableField<RiskTagRecord, String> NAME_PATH = createField("name_path", org.jooq.impl.SQLDataType.VARCHAR(512), this, "当前节点路径，用标签名拼接");

    /**
     * Create a <code>SMETA_APP.risk_tag</code> table reference
     */
    public RiskTag() {
        this(DSL.name("risk_tag"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.risk_tag</code> table reference
     */
    public RiskTag(String alias) {
        this(DSL.name(alias), RISK_TAG);
    }

    /**
     * Create an aliased <code>SMETA_APP.risk_tag</code> table reference
     */
    public RiskTag(Name alias) {
        this(alias, RISK_TAG);
    }

    private RiskTag(Name alias, Table<RiskTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private RiskTag(Name alias, Table<RiskTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "标签元数据表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RISK_TAG_IDX_PARENT_ID, Indexes.RISK_TAG_IDX_RISK_TAG_ID, Indexes.RISK_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RiskTagRecord, ULong> getIdentity() {
        return Keys.IDENTITY_RISK_TAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RiskTagRecord> getPrimaryKey() {
        return Keys.KEY_RISK_TAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RiskTagRecord>> getKeys() {
        return Arrays.<UniqueKey<RiskTagRecord>>asList(Keys.KEY_RISK_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RiskTag as(String alias) {
        return new RiskTag(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RiskTag as(Name alias) {
        return new RiskTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RiskTag rename(String name) {
        return new RiskTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RiskTag rename(Name name) {
        return new RiskTag(name, null);
    }
}
