/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DictColumnIndiInfoRecord;


/**
 * 属性对应指标信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictColumnIndiInfo extends TableImpl<DictColumnIndiInfoRecord> {

    private static final long serialVersionUID = 387906015;

    /**
     * The reference instance of <code>SMETA_APP.dict_column_indi_info</code>
     */
    public static final DictColumnIndiInfo DICT_COLUMN_INDI_INFO = new DictColumnIndiInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictColumnIndiInfoRecord> getRecordType() {
        return DictColumnIndiInfoRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.indi_code</code>. 指标code
     */
    public final TableField<DictColumnIndiInfoRecord, String> INDI_CODE = createField("indi_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "指标code");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.event_code</code>. smc事件
     */
    public final TableField<DictColumnIndiInfoRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "smc事件");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.event_column_code</code>. smc事件属性
     */
    public final TableField<DictColumnIndiInfoRecord, String> EVENT_COLUMN_CODE = createField("event_column_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "smc事件属性");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.old_cac_event_code</code>. 老计算事件
     */
    public final TableField<DictColumnIndiInfoRecord, String> OLD_CAC_EVENT_CODE = createField("old_cac_event_code", org.jooq.impl.SQLDataType.VARCHAR(512), this, "老计算事件");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.old_event_column_code</code>. 老属性
     */
    public final TableField<DictColumnIndiInfoRecord, String> OLD_EVENT_COLUMN_CODE = createField("old_event_column_code", org.jooq.impl.SQLDataType.VARCHAR(512), this, "老属性");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.gmt_create</code>. 时间
     */
    public final TableField<DictColumnIndiInfoRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "时间");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.owner</code>. 负责人
     */
    public final TableField<DictColumnIndiInfoRecord, String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR(128), this, "负责人");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.id</code>. 主键
     */
    public final TableField<DictColumnIndiInfoRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.indi_name</code>. 指标名称
     */
    public final TableField<DictColumnIndiInfoRecord, String> INDI_NAME = createField("indi_name", org.jooq.impl.SQLDataType.VARCHAR(512), this, "指标名称");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.indi_level</code>. 指标级别
     */
    public final TableField<DictColumnIndiInfoRecord, String> INDI_LEVEL = createField("indi_level", org.jooq.impl.SQLDataType.VARCHAR(32), this, "指标级别");

    /**
     * The column <code>SMETA_APP.dict_column_indi_info.relation_type</code>. 关系类型1，字典使用指标 2,指标使用字典字段
     */
    public final TableField<DictColumnIndiInfoRecord, String> RELATION_TYPE = createField("relation_type", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "关系类型1，字典使用指标 2,指标使用字典字段");

    /**
     * Create a <code>SMETA_APP.dict_column_indi_info</code> table reference
     */
    public DictColumnIndiInfo() {
        this(DSL.name("dict_column_indi_info"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_column_indi_info</code> table reference
     */
    public DictColumnIndiInfo(String alias) {
        this(DSL.name(alias), DICT_COLUMN_INDI_INFO);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_column_indi_info</code> table reference
     */
    public DictColumnIndiInfo(Name alias) {
        this(alias, DICT_COLUMN_INDI_INFO);
    }

    private DictColumnIndiInfo(Name alias, Table<DictColumnIndiInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictColumnIndiInfo(Name alias, Table<DictColumnIndiInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "属性对应指标信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DICT_COLUMN_INDI_INFO_IDX_COLUMN_CODE, Indexes.DICT_COLUMN_INDI_INFO_IDX_EVENT_CODE, Indexes.DICT_COLUMN_INDI_INFO_IDX_INDI_CODE, Indexes.DICT_COLUMN_INDI_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictColumnIndiInfoRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DICT_COLUMN_INDI_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictColumnIndiInfoRecord> getPrimaryKey() {
        return Keys.KEY_DICT_COLUMN_INDI_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictColumnIndiInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<DictColumnIndiInfoRecord>>asList(Keys.KEY_DICT_COLUMN_INDI_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictColumnIndiInfo as(String alias) {
        return new DictColumnIndiInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictColumnIndiInfo as(Name alias) {
        return new DictColumnIndiInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictColumnIndiInfo rename(String name) {
        return new DictColumnIndiInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DictColumnIndiInfo rename(Name name) {
        return new DictColumnIndiInfo(name, null);
    }
}
