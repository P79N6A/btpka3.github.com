/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DqcBasicRuleRecord;


/**
 * dqc自定义规则配置
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DqcBasicRule extends TableImpl<DqcBasicRuleRecord> {

    private static final long serialVersionUID = 86827750;

    /**
     * The reference instance of <code>SMETA_APP.dqc_basic_rule</code>
     */
    public static final DqcBasicRule DQC_BASIC_RULE = new DqcBasicRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DqcBasicRuleRecord> getRecordType() {
        return DqcBasicRuleRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.id</code>. 主键
     */
    public final TableField<DqcBasicRuleRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.gmt_create</code>. 创建时间
     */
    public final TableField<DqcBasicRuleRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.gmt_modified</code>. 修改时间
     */
    public final TableField<DqcBasicRuleRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.user_sql</code>. 用户自定义sql
     */
    public final TableField<DqcBasicRuleRecord, String> USER_SQL = createField("user_sql", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "用户自定义sql");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.rule_name</code>. 规则名称
     */
    public final TableField<DqcBasicRuleRecord, String> RULE_NAME = createField("rule_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "规则名称");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.last_operator</code>. 最后操作人
     */
    public final TableField<DqcBasicRuleRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "最后操作人");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.status</code>. 规则状态，1-有效，0-无效
     */
    public final TableField<DqcBasicRuleRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "规则状态，1-有效，0-无效");

    /**
     * The column <code>SMETA_APP.dqc_basic_rule.operator</code>. 比较符号 ,'&lt;' 和 '&gt;'
     */
    public final TableField<DqcBasicRuleRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "比较符号 ,'<' 和 '>'");

    /**
     * Create a <code>SMETA_APP.dqc_basic_rule</code> table reference
     */
    public DqcBasicRule() {
        this(DSL.name("dqc_basic_rule"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_basic_rule</code> table reference
     */
    public DqcBasicRule(String alias) {
        this(DSL.name(alias), DQC_BASIC_RULE);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_basic_rule</code> table reference
     */
    public DqcBasicRule(Name alias) {
        this(alias, DQC_BASIC_RULE);
    }

    private DqcBasicRule(Name alias, Table<DqcBasicRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private DqcBasicRule(Name alias, Table<DqcBasicRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "dqc自定义规则配置");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DQC_BASIC_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DqcBasicRuleRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DQC_BASIC_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DqcBasicRuleRecord> getPrimaryKey() {
        return Keys.KEY_DQC_BASIC_RULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DqcBasicRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<DqcBasicRuleRecord>>asList(Keys.KEY_DQC_BASIC_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcBasicRule as(String alias) {
        return new DqcBasicRule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcBasicRule as(Name alias) {
        return new DqcBasicRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcBasicRule rename(String name) {
        return new DqcBasicRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcBasicRule rename(Name name) {
        return new DqcBasicRule(name, null);
    }
}
