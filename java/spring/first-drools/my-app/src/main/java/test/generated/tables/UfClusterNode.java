/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfClusterNodeRecord;


/**
 * 租户机器配置表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfClusterNode extends TableImpl<UfClusterNodeRecord> {

    private static final long serialVersionUID = 1164760623;

    /**
     * The reference instance of <code>SMETA_APP.uf_cluster_node</code>
     */
    public static final UfClusterNode UF_CLUSTER_NODE = new UfClusterNode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfClusterNodeRecord> getRecordType() {
        return UfClusterNodeRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_cluster_node.id</code>. 主键
     */
    public final TableField<UfClusterNodeRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.gmt_create</code>. 创建时间
     */
    public final TableField<UfClusterNodeRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.gmt_modified</code>. 修改时间
     */
    public final TableField<UfClusterNodeRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.last_operator</code>. 最后修改者
     */
    public final TableField<UfClusterNodeRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "最后修改者");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.host_name</code>. 机器hosthome
     */
    public final TableField<UfClusterNodeRecord, String> HOST_NAME = createField("host_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "机器hosthome");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.region_code</code>. 地区
     */
    public final TableField<UfClusterNodeRecord, String> REGION_CODE = createField("region_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "地区");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.lab_code</code>. 机房code
     */
    public final TableField<UfClusterNodeRecord, String> LAB_CODE = createField("lab_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "机房code");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.sync_type</code>. sync/async
     */
    public final TableField<UfClusterNodeRecord, String> SYNC_TYPE = createField("sync_type", org.jooq.impl.SQLDataType.VARCHAR(18), this, "sync/async");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.tenant_code</code>. 租户编码
     */
    public final TableField<UfClusterNodeRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "租户编码");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.node_ip</code>. 机器ip
     */
    public final TableField<UfClusterNodeRecord, String> NODE_IP = createField("node_ip", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "机器ip");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.node_group</code>. 机器分组
     */
    public final TableField<UfClusterNodeRecord, String> NODE_GROUP = createField("node_group", org.jooq.impl.SQLDataType.VARCHAR(64), this, "机器分组");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.group_schema</code>. 分组schema
     */
    public final TableField<UfClusterNodeRecord, String> GROUP_SCHEMA = createField("group_schema", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("tao", org.jooq.impl.SQLDataType.VARCHAR)), this, "分组schema");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.app_name</code>. 机器资源所属的应用名
     */
    public final TableField<UfClusterNodeRecord, String> APP_NAME = createField("app_name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("mtee3", org.jooq.impl.SQLDataType.VARCHAR)), this, "机器资源所属的应用名");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.armory_sn</code>. armory唯一标识符
     */
    public final TableField<UfClusterNodeRecord, String> ARMORY_SN = createField("armory_sn", org.jooq.impl.SQLDataType.VARCHAR(64), this, "armory唯一标识符");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.armory_status</code>. armory的节点状态
     */
    public final TableField<UfClusterNodeRecord, Integer> ARMORY_STATUS = createField("armory_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "armory的节点状态");

    /**
     * The column <code>SMETA_APP.uf_cluster_node.cluster_name</code>. 构建Akka集群的名称
     */
    public final TableField<UfClusterNodeRecord, String> CLUSTER_NAME = createField("cluster_name", org.jooq.impl.SQLDataType.VARCHAR(256), this, "构建Akka集群的名称");

    /**
     * Create a <code>SMETA_APP.uf_cluster_node</code> table reference
     */
    public UfClusterNode() {
        this(DSL.name("uf_cluster_node"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_cluster_node</code> table reference
     */
    public UfClusterNode(String alias) {
        this(DSL.name(alias), UF_CLUSTER_NODE);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_cluster_node</code> table reference
     */
    public UfClusterNode(Name alias) {
        this(alias, UF_CLUSTER_NODE);
    }

    private UfClusterNode(Name alias, Table<UfClusterNodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfClusterNode(Name alias, Table<UfClusterNodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "租户机器配置表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_CLUSTER_NODE_PRIMARY, Indexes.UF_CLUSTER_NODE_UK_HOSTNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfClusterNodeRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_CLUSTER_NODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfClusterNodeRecord> getPrimaryKey() {
        return Keys.KEY_UF_CLUSTER_NODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfClusterNodeRecord>> getKeys() {
        return Arrays.<UniqueKey<UfClusterNodeRecord>>asList(Keys.KEY_UF_CLUSTER_NODE_PRIMARY, Keys.KEY_UF_CLUSTER_NODE_UK_HOSTNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfClusterNode as(String alias) {
        return new UfClusterNode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfClusterNode as(Name alias) {
        return new UfClusterNode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfClusterNode rename(String name) {
        return new UfClusterNode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfClusterNode rename(Name name) {
        return new UfClusterNode(name, null);
    }
}
