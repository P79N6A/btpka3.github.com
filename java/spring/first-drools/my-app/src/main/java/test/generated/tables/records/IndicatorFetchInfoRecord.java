/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.IndicatorFetchInfo;


/**
 * 指标对应的祛暑逻辑
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndicatorFetchInfoRecord extends UpdatableRecordImpl<IndicatorFetchInfoRecord> implements Record15<ULong, Timestamp, Timestamp, String, String, String, String, String, String, String, String, String, String, String, Integer> {

    private static final long serialVersionUID = -1098280555;

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_field</code>. 取数字段
     */
    public void setFetchField(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_field</code>. 取数字段
     */
    public String getFetchField() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_table</code>. 取数来源
     */
    public void setFetchTable(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_table</code>. 取数来源
     */
    public String getFetchTable() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_sql</code>. 取数算法逻辑
     */
    public void setFetchSql(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_sql</code>. 取数算法逻辑
     */
    public String getFetchSql() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.description</code>. 取数描述
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.description</code>. 取数描述
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.indicator_code</code>. 指标code
     */
    public void setIndicatorCode(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.indicator_code</code>. 指标code
     */
    public String getIndicatorCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_type</code>. 取数类型（实时、离线）
     */
    public void setFetchType(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_type</code>. 取数类型（实时、离线）
     */
    public String getFetchType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_code</code>. 实时取数编码
     */
    public void setFetchCode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_code</code>. 实时取数编码
     */
    public String getFetchCode() {
        return (String) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_method</code>. 实时取数方法
     */
    public void setFetchMethod(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_method</code>. 实时取数方法
     */
    public String getFetchMethod() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_source</code>. 实时取数来源
     */
    public void setFetchSource(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_source</code>. 实时取数来源
     */
    public String getFetchSource() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_source_param</code>. 实时取数来源参数
     */
    public void setFetchSourceParam(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_source_param</code>. 实时取数来源参数
     */
    public String getFetchSourceParam() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.fetch_source_code</code>. 实时取数数据源编码
     */
    public void setFetchSourceCode(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.fetch_source_code</code>. 实时取数数据源编码
     */
    public String getFetchSourceCode() {
        return (String) get(13);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_fetch_info.status</code>. 状态 0无效 1有效
     */
    public void setStatus(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_fetch_info.status</code>. 状态 0无效 1有效
     */
    public Integer getStatus() {
        return (Integer) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<ULong, Timestamp, Timestamp, String, String, String, String, String, String, String, String, String, String, String, Integer> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<ULong, Timestamp, Timestamp, String, String, String, String, String, String, String, String, String, String, String, Integer> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_FIELD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.INDICATOR_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_SOURCE_PARAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.FETCH_SOURCE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return IndicatorFetchInfo.INDICATOR_FETCH_INFO.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getFetchField();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getFetchTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getFetchSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getIndicatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getFetchType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getFetchCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getFetchMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getFetchSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getFetchSourceParam();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getFetchSourceCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFetchField();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getFetchTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFetchSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getIndicatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getFetchType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getFetchCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getFetchMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getFetchSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getFetchSourceParam();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getFetchSourceCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value4(String value) {
        setFetchField(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value5(String value) {
        setFetchTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value6(String value) {
        setFetchSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value7(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value8(String value) {
        setIndicatorCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value9(String value) {
        setFetchType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value10(String value) {
        setFetchCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value11(String value) {
        setFetchMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value12(String value) {
        setFetchSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value13(String value) {
        setFetchSourceParam(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value14(String value) {
        setFetchSourceCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord value15(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorFetchInfoRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, Integer value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndicatorFetchInfoRecord
     */
    public IndicatorFetchInfoRecord() {
        super(IndicatorFetchInfo.INDICATOR_FETCH_INFO);
    }

    /**
     * Create a detached, initialised IndicatorFetchInfoRecord
     */
    public IndicatorFetchInfoRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String fetchField, String fetchTable, String fetchSql, String description, String indicatorCode, String fetchType, String fetchCode, String fetchMethod, String fetchSource, String fetchSourceParam, String fetchSourceCode, Integer status) {
        super(IndicatorFetchInfo.INDICATOR_FETCH_INFO);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, fetchField);
        set(4, fetchTable);
        set(5, fetchSql);
        set(6, description);
        set(7, indicatorCode);
        set(8, fetchType);
        set(9, fetchCode);
        set(10, fetchMethod);
        set(11, fetchSource);
        set(12, fetchSourceParam);
        set(13, fetchSourceCode);
        set(14, status);
    }
}
