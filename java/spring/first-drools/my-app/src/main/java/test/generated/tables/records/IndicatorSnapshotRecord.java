/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.IndicatorSnapshot;


/**
 * 指标快照
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndicatorSnapshotRecord extends UpdatableRecordImpl<IndicatorSnapshotRecord> implements Record13<Long, Timestamp, Timestamp, String, String, String, String, String, String, byte[], String, String, String> {

    private static final long serialVersionUID = -1326878206;

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.id</code>. 主键
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.opt_type</code>. 操作类型（新增、修改，删除，上线，下线）（ADD，MODIFY，DELETE，ONLINE，OFFLINE）
     */
    public void setOptType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.opt_type</code>. 操作类型（新增、修改，删除，上线，下线）（ADD，MODIFY，DELETE，ONLINE，OFFLINE）
     */
    public String getOptType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.workspace_code</code>. 操作信息
     */
    public void setWorkspaceCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.workspace_code</code>. 操作信息
     */
    public String getWorkspaceCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.indicator_code</code>. 指标编码
     */
    public void setIndicatorCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.indicator_code</code>. 指标编码
     */
    public String getIndicatorCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.indicator_name</code>. 指标名称
     */
    public void setIndicatorName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.indicator_name</code>. 指标名称
     */
    public String getIndicatorName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.algorithm</code>. 计算逻辑
     */
    public void setAlgorithm(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.algorithm</code>. 计算逻辑
     */
    public String getAlgorithm() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.operator</code>. 操作人
     */
    public void setOperator(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.operator</code>. 操作人
     */
    public String getOperator() {
        return (String) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.indicator_do</code>. 指标序列化对象
     */
    public void setIndicatorDo(byte... value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.indicator_do</code>. 指标序列化对象
     */
    public byte[] getIndicatorDo() {
        return (byte[]) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.approval</code>. 审批人
     */
    public void setApproval(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.approval</code>. 审批人
     */
    public String getApproval() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.status</code>. 审批状态（初始化，审批中，审批通过，审批不通过）（init，pending，agree，refuse）
     */
    public void setStatus(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.status</code>. 审批状态（初始化，审批中，审批通过，审批不通过）（init，pending，agree，refuse）
     */
    public String getStatus() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_snapshot.reason</code>. 审批理由
     */
    public void setReason(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_snapshot.reason</code>. 审批理由
     */
    public String getReason() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Timestamp, Timestamp, String, String, String, String, String, String, byte[], String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Timestamp, Timestamp, String, String, String, String, String, String, byte[], String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.OPT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.WORKSPACE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.INDICATOR_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.INDICATOR_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.ALGORITHM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field10() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.INDICATOR_DO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.APPROVAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return IndicatorSnapshot.INDICATOR_SNAPSHOT.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOptType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getWorkspaceCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getIndicatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIndicatorName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getAlgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component10() {
        return getIndicatorDo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getApproval();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOptType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getWorkspaceCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getIndicatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIndicatorName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAlgorithm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value10() {
        return getIndicatorDo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getApproval();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value4(String value) {
        setOptType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value5(String value) {
        setWorkspaceCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value6(String value) {
        setIndicatorCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value7(String value) {
        setIndicatorName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value8(String value) {
        setAlgorithm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value9(String value) {
        setOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value10(byte... value) {
        setIndicatorDo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value11(String value) {
        setApproval(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value12(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord value13(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorSnapshotRecord values(Long value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, String value9, byte[] value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndicatorSnapshotRecord
     */
    public IndicatorSnapshotRecord() {
        super(IndicatorSnapshot.INDICATOR_SNAPSHOT);
    }

    /**
     * Create a detached, initialised IndicatorSnapshotRecord
     */
    public IndicatorSnapshotRecord(Long id, Timestamp gmtCreate, Timestamp gmtModified, String optType, String workspaceCode, String indicatorCode, String indicatorName, String algorithm, String operator, byte[] indicatorDo, String approval, String status, String reason) {
        super(IndicatorSnapshot.INDICATOR_SNAPSHOT);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, optType);
        set(4, workspaceCode);
        set(5, indicatorCode);
        set(6, indicatorName);
        set(7, algorithm);
        set(8, operator);
        set(9, indicatorDo);
        set(10, approval);
        set(11, status);
        set(12, reason);
    }
}
