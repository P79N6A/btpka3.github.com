/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfUserTenantRefRecord;


/**
 * 用户租户关系表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfUserTenantRef extends TableImpl<UfUserTenantRefRecord> {

    private static final long serialVersionUID = -1459546179;

    /**
     * The reference instance of <code>SMETA_APP.uf_user_tenant_ref</code>
     */
    public static final UfUserTenantRef UF_USER_TENANT_REF = new UfUserTenantRef();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfUserTenantRefRecord> getRecordType() {
        return UfUserTenantRefRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_user_tenant_ref.id</code>. 主键
     */
    public final TableField<UfUserTenantRefRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_user_tenant_ref.gmt_create</code>. 创建时间
     */
    public final TableField<UfUserTenantRefRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_user_tenant_ref.gmt_modified</code>. 修改时间
     */
    public final TableField<UfUserTenantRefRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_user_tenant_ref.last_operator</code>. 最后修改者
     */
    public final TableField<UfUserTenantRefRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "最后修改者");

    /**
     * The column <code>SMETA_APP.uf_user_tenant_ref.user_id</code>. 用户id
     */
    public final TableField<UfUserTenantRefRecord, ULong> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "用户id");

    /**
     * The column <code>SMETA_APP.uf_user_tenant_ref.tenant_code</code>. 租户code
     */
    public final TableField<UfUserTenantRefRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "租户code");

    /**
     * Create a <code>SMETA_APP.uf_user_tenant_ref</code> table reference
     */
    public UfUserTenantRef() {
        this(DSL.name("uf_user_tenant_ref"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_user_tenant_ref</code> table reference
     */
    public UfUserTenantRef(String alias) {
        this(DSL.name(alias), UF_USER_TENANT_REF);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_user_tenant_ref</code> table reference
     */
    public UfUserTenantRef(Name alias) {
        this(alias, UF_USER_TENANT_REF);
    }

    private UfUserTenantRef(Name alias, Table<UfUserTenantRefRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfUserTenantRef(Name alias, Table<UfUserTenantRefRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户租户关系表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_USER_TENANT_REF_PRIMARY, Indexes.UF_USER_TENANT_REF_UK_USER_TENANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfUserTenantRefRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_USER_TENANT_REF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfUserTenantRefRecord> getPrimaryKey() {
        return Keys.KEY_UF_USER_TENANT_REF_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfUserTenantRefRecord>> getKeys() {
        return Arrays.<UniqueKey<UfUserTenantRefRecord>>asList(Keys.KEY_UF_USER_TENANT_REF_PRIMARY, Keys.KEY_UF_USER_TENANT_REF_UK_USER_TENANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfUserTenantRef as(String alias) {
        return new UfUserTenantRef(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfUserTenantRef as(Name alias) {
        return new UfUserTenantRef(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfUserTenantRef rename(String name) {
        return new UfUserTenantRef(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfUserTenantRef rename(Name name) {
        return new UfUserTenantRef(name, null);
    }
}
