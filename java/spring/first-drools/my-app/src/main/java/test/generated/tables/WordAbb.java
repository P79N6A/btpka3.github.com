/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.WordAbbRecord;


/**
 * 属性单词缩写表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WordAbb extends TableImpl<WordAbbRecord> {

    private static final long serialVersionUID = -210152700;

    /**
     * The reference instance of <code>SMETA_APP.word_abb</code>
     */
    public static final WordAbb WORD_ABB = new WordAbb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WordAbbRecord> getRecordType() {
        return WordAbbRecord.class;
    }

    /**
     * The column <code>SMETA_APP.word_abb.word</code>. 单词
     */
    public final TableField<WordAbbRecord, String> WORD = createField("word", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "单词");

    /**
     * The column <code>SMETA_APP.word_abb.abb</code>. 单词缩写
     */
    public final TableField<WordAbbRecord, String> ABB = createField("abb", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "单词缩写");

    /**
     * The column <code>SMETA_APP.word_abb.id</code>. 主键
     */
    public final TableField<WordAbbRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * Create a <code>SMETA_APP.word_abb</code> table reference
     */
    public WordAbb() {
        this(DSL.name("word_abb"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.word_abb</code> table reference
     */
    public WordAbb(String alias) {
        this(DSL.name(alias), WORD_ABB);
    }

    /**
     * Create an aliased <code>SMETA_APP.word_abb</code> table reference
     */
    public WordAbb(Name alias) {
        this(alias, WORD_ABB);
    }

    private WordAbb(Name alias, Table<WordAbbRecord> aliased) {
        this(alias, aliased, null);
    }

    private WordAbb(Name alias, Table<WordAbbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "属性单词缩写表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WORD_ABB_IDX_WORD, Indexes.WORD_ABB_PRIMARY, Indexes.WORD_ABB_UK_WORD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WordAbbRecord, ULong> getIdentity() {
        return Keys.IDENTITY_WORD_ABB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WordAbbRecord> getPrimaryKey() {
        return Keys.KEY_WORD_ABB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WordAbbRecord>> getKeys() {
        return Arrays.<UniqueKey<WordAbbRecord>>asList(Keys.KEY_WORD_ABB_UK_WORD, Keys.KEY_WORD_ABB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordAbb as(String alias) {
        return new WordAbb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordAbb as(Name alias) {
        return new WordAbb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WordAbb rename(String name) {
        return new WordAbb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WordAbb rename(Name name) {
        return new WordAbb(name, null);
    }
}
