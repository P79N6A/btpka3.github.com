/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.SceneColumnRecord;


/**
 * 场景使用的特征表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SceneColumn extends TableImpl<SceneColumnRecord> {

    private static final long serialVersionUID = 601756608;

    /**
     * The reference instance of <code>SMETA_APP.scene_column</code>
     */
    public static final SceneColumn SCENE_COLUMN = new SceneColumn();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SceneColumnRecord> getRecordType() {
        return SceneColumnRecord.class;
    }

    /**
     * The column <code>SMETA_APP.scene_column.id</code>. 主键
     */
    public final TableField<SceneColumnRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.scene_column.gmt_create</code>. 创建时间
     */
    public final TableField<SceneColumnRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.scene_column.gmt_modified</code>. 修改时间
     */
    public final TableField<SceneColumnRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.scene_column.cn_name</code>. 场景特征中文名
     */
    public final TableField<SceneColumnRecord, String> CN_NAME = createField("cn_name", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "场景特征中文名");

    /**
     * The column <code>SMETA_APP.scene_column.en_name</code>. 场景特征英文名
     */
    public final TableField<SceneColumnRecord, String> EN_NAME = createField("en_name", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "场景特征英文名");

    /**
     * The column <code>SMETA_APP.scene_column.code</code>. 特征code
     */
    public final TableField<SceneColumnRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "特征code");

    /**
     * The column <code>SMETA_APP.scene_column.type</code>. 特征类型
     */
    public final TableField<SceneColumnRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "特征类型");

    /**
     * The column <code>SMETA_APP.scene_column.operator_id</code>. 操作人id
     */
    public final TableField<SceneColumnRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "操作人id");

    /**
     * The column <code>SMETA_APP.scene_column.operator</code>. 操作人
     */
    public final TableField<SceneColumnRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "操作人");

    /**
     * The column <code>SMETA_APP.scene_column.status</code>. 状态1-有效，0-废弃
     */
    public final TableField<SceneColumnRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态1-有效，0-废弃");

    /**
     * Create a <code>SMETA_APP.scene_column</code> table reference
     */
    public SceneColumn() {
        this(DSL.name("scene_column"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.scene_column</code> table reference
     */
    public SceneColumn(String alias) {
        this(DSL.name(alias), SCENE_COLUMN);
    }

    /**
     * Create an aliased <code>SMETA_APP.scene_column</code> table reference
     */
    public SceneColumn(Name alias) {
        this(alias, SCENE_COLUMN);
    }

    private SceneColumn(Name alias, Table<SceneColumnRecord> aliased) {
        this(alias, aliased, null);
    }

    private SceneColumn(Name alias, Table<SceneColumnRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "场景使用的特征表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCENE_COLUMN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SceneColumnRecord, ULong> getIdentity() {
        return Keys.IDENTITY_SCENE_COLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SceneColumnRecord> getPrimaryKey() {
        return Keys.KEY_SCENE_COLUMN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SceneColumnRecord>> getKeys() {
        return Arrays.<UniqueKey<SceneColumnRecord>>asList(Keys.KEY_SCENE_COLUMN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SceneColumn as(String alias) {
        return new SceneColumn(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SceneColumn as(Name alias) {
        return new SceneColumn(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SceneColumn rename(String name) {
        return new SceneColumn(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SceneColumn rename(Name name) {
        return new SceneColumn(name, null);
    }
}
