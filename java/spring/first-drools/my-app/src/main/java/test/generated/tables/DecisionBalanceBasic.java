/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DecisionBalanceBasicRecord;


/**
 * 决策天平定义
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DecisionBalanceBasic extends TableImpl<DecisionBalanceBasicRecord> {

    private static final long serialVersionUID = 1149889616;

    /**
     * The reference instance of <code>SMETA_APP.decision_balance_basic</code>
     */
    public static final DecisionBalanceBasic DECISION_BALANCE_BASIC = new DecisionBalanceBasic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DecisionBalanceBasicRecord> getRecordType() {
        return DecisionBalanceBasicRecord.class;
    }

    /**
     * The column <code>SMETA_APP.decision_balance_basic.id</code>. 主键
     */
    public final TableField<DecisionBalanceBasicRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.gmt_create</code>. 创建时间
     */
    public final TableField<DecisionBalanceBasicRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.gmt_modified</code>. 修改时间
     */
    public final TableField<DecisionBalanceBasicRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.name</code>. 天平名称
     */
    public final TableField<DecisionBalanceBasicRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "天平名称");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.code</code>. 英文code
     */
    public final TableField<DecisionBalanceBasicRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "英文code");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.owner</code>. owner
     */
    public final TableField<DecisionBalanceBasicRecord, String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "owner");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.content</code>. 拓展字段
     */
    public final TableField<DecisionBalanceBasicRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "拓展字段");

    /**
     * The column <code>SMETA_APP.decision_balance_basic.remark</code>. 备注
     */
    public final TableField<DecisionBalanceBasicRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "备注");

    /**
     * Create a <code>SMETA_APP.decision_balance_basic</code> table reference
     */
    public DecisionBalanceBasic() {
        this(DSL.name("decision_balance_basic"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.decision_balance_basic</code> table reference
     */
    public DecisionBalanceBasic(String alias) {
        this(DSL.name(alias), DECISION_BALANCE_BASIC);
    }

    /**
     * Create an aliased <code>SMETA_APP.decision_balance_basic</code> table reference
     */
    public DecisionBalanceBasic(Name alias) {
        this(alias, DECISION_BALANCE_BASIC);
    }

    private DecisionBalanceBasic(Name alias, Table<DecisionBalanceBasicRecord> aliased) {
        this(alias, aliased, null);
    }

    private DecisionBalanceBasic(Name alias, Table<DecisionBalanceBasicRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "决策天平定义");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DECISION_BALANCE_BASIC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DecisionBalanceBasicRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DECISION_BALANCE_BASIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DecisionBalanceBasicRecord> getPrimaryKey() {
        return Keys.KEY_DECISION_BALANCE_BASIC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DecisionBalanceBasicRecord>> getKeys() {
        return Arrays.<UniqueKey<DecisionBalanceBasicRecord>>asList(Keys.KEY_DECISION_BALANCE_BASIC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DecisionBalanceBasic as(String alias) {
        return new DecisionBalanceBasic(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DecisionBalanceBasic as(Name alias) {
        return new DecisionBalanceBasic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DecisionBalanceBasic rename(String name) {
        return new DecisionBalanceBasic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DecisionBalanceBasic rename(Name name) {
        return new DecisionBalanceBasic(name, null);
    }
}
