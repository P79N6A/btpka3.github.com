/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfStatCounterRecord;


/**
 * 统计计数表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfStatCounter extends TableImpl<UfStatCounterRecord> {

    private static final long serialVersionUID = -1354817674;

    /**
     * The reference instance of <code>SMETA_APP.uf_stat_counter</code>
     */
    public static final UfStatCounter UF_STAT_COUNTER = new UfStatCounter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfStatCounterRecord> getRecordType() {
        return UfStatCounterRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_stat_counter.id</code>. 主键
     */
    public final TableField<UfStatCounterRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.gmt_create</code>. 创建时间
     */
    public final TableField<UfStatCounterRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.gmt_modified</code>. 修改时间
     */
    public final TableField<UfStatCounterRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.tenant_code</code>. 租户
     */
    public final TableField<UfStatCounterRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "租户");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.date</code>. 时间
     */
    public final TableField<UfStatCounterRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "时间");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.timeunit</code>. 时间单位（分）
     */
    public final TableField<UfStatCounterRecord, Integer> TIMEUNIT = createField("timeunit", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "时间单位（分）");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.type</code>. 数据类型
     */
    public final TableField<UfStatCounterRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "数据类型");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.counter_key</code>. 主键
     */
    public final TableField<UfStatCounterRecord, String> COUNTER_KEY = createField("counter_key", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.count</code>. 接收数
     */
    public final TableField<UfStatCounterRecord, ULong> COUNT = createField("count", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "接收数");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.process</code>. 处理数
     */
    public final TableField<UfStatCounterRecord, ULong> PROCESS = createField("process", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "处理数");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.hit</code>. 命中数
     */
    public final TableField<UfStatCounterRecord, ULong> HIT = createField("hit", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "命中数");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.nohit</code>. 不命中数
     */
    public final TableField<UfStatCounterRecord, ULong> NOHIT = createField("nohit", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "不命中数");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.unknown</code>. 未知
     */
    public final TableField<UfStatCounterRecord, ULong> UNKNOWN = createField("unknown", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "未知");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.exception</code>. 异常
     */
    public final TableField<UfStatCounterRecord, ULong> EXCEPTION = createField("exception", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "异常");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.cost</code>. 耗时
     */
    public final TableField<UfStatCounterRecord, ULong> COST = createField("cost", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "耗时");

    /**
     * The column <code>SMETA_APP.uf_stat_counter.overflow</code>. 超阈值
     */
    public final TableField<UfStatCounterRecord, ULong> OVERFLOW = createField("overflow", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "超阈值");

    /**
     * Create a <code>SMETA_APP.uf_stat_counter</code> table reference
     */
    public UfStatCounter() {
        this(DSL.name("uf_stat_counter"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_stat_counter</code> table reference
     */
    public UfStatCounter(String alias) {
        this(DSL.name(alias), UF_STAT_COUNTER);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_stat_counter</code> table reference
     */
    public UfStatCounter(Name alias) {
        this(alias, UF_STAT_COUNTER);
    }

    private UfStatCounter(Name alias, Table<UfStatCounterRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfStatCounter(Name alias, Table<UfStatCounterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "统计计数表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_STAT_COUNTER_IDX_KEY, Indexes.UF_STAT_COUNTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfStatCounterRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_STAT_COUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfStatCounterRecord> getPrimaryKey() {
        return Keys.KEY_UF_STAT_COUNTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfStatCounterRecord>> getKeys() {
        return Arrays.<UniqueKey<UfStatCounterRecord>>asList(Keys.KEY_UF_STAT_COUNTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfStatCounter as(String alias) {
        return new UfStatCounter(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfStatCounter as(Name alias) {
        return new UfStatCounter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfStatCounter rename(String name) {
        return new UfStatCounter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfStatCounter rename(Name name) {
        return new UfStatCounter(name, null);
    }
}
