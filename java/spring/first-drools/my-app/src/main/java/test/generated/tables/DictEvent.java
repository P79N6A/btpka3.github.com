/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DictEventRecord;


/**
 * 事件表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictEvent extends TableImpl<DictEventRecord> {

    private static final long serialVersionUID = 747025288;

    /**
     * The reference instance of <code>SMETA_APP.dict_event</code>
     */
    public static final DictEvent DICT_EVENT = new DictEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictEventRecord> getRecordType() {
        return DictEventRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dict_event.id</code>. 主键
     */
    public final TableField<DictEventRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dict_event.gmt_create</code>. 创建时间
     */
    public final TableField<DictEventRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dict_event.gmt_modified</code>. 修改时间
     */
    public final TableField<DictEventRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dict_event.operator_id</code>. 操作人ID
     */
    public final TableField<DictEventRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作人ID");

    /**
     * The column <code>SMETA_APP.dict_event.operator</code>. 操作人
     */
    public final TableField<DictEventRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作人");

    /**
     * The column <code>SMETA_APP.dict_event.code</code>. 事件编码
     */
    public final TableField<DictEventRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.dict_event.name</code>. 事件名称
     */
    public final TableField<DictEventRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件名称");

    /**
     * The column <code>SMETA_APP.dict_event.method</code>. 接入方式：notify、hsf、http
     */
    public final TableField<DictEventRecord, String> METHOD = createField("method", org.jooq.impl.SQLDataType.VARCHAR(64), this, "接入方式：notify、hsf、http");

    /**
     * The column <code>SMETA_APP.dict_event.source_event</code>. 来源事件
     */
    public final TableField<DictEventRecord, String> SOURCE_EVENT = createField("source_event", org.jooq.impl.SQLDataType.VARCHAR(128), this, "来源事件");

    /**
     * The column <code>SMETA_APP.dict_event.source_bu</code>. 来源BU
     */
    public final TableField<DictEventRecord, String> SOURCE_BU = createField("source_bu", org.jooq.impl.SQLDataType.VARCHAR(64), this, "来源BU");

    /**
     * The column <code>SMETA_APP.dict_event.source_sys</code>. 来源系统
     */
    public final TableField<DictEventRecord, String> SOURCE_SYS = createField("source_sys", org.jooq.impl.SQLDataType.VARCHAR(64), this, "来源系统");

    /**
     * The column <code>SMETA_APP.dict_event.source_biz_contacter</code>. 源业务联系人
     */
    public final TableField<DictEventRecord, String> SOURCE_BIZ_CONTACTER = createField("source_biz_contacter", org.jooq.impl.SQLDataType.VARCHAR(64), this, "源业务联系人");

    /**
     * The column <code>SMETA_APP.dict_event.source_tech_contacter</code>. 源技术联系人
     */
    public final TableField<DictEventRecord, String> SOURCE_TECH_CONTACTER = createField("source_tech_contacter", org.jooq.impl.SQLDataType.VARCHAR(64), this, "源技术联系人");

    /**
     * The column <code>SMETA_APP.dict_event.comment</code>. 事件描述
     */
    public final TableField<DictEventRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB, this, "事件描述");

    /**
     * The column <code>SMETA_APP.dict_event.event_amount</code>. 预估事件量（每天）
     */
    public final TableField<DictEventRecord, String> EVENT_AMOUNT = createField("event_amount", org.jooq.impl.SQLDataType.VARCHAR(64), this, "预估事件量（每天）");

    /**
     * The column <code>SMETA_APP.dict_event.top_qps</code>. 高峰QPS
     */
    public final TableField<DictEventRecord, String> TOP_QPS = createField("top_qps", org.jooq.impl.SQLDataType.VARCHAR(64), this, "高峰QPS");

    /**
     * The column <code>SMETA_APP.dict_event.sla</code>. SLA要求
     */
    public final TableField<DictEventRecord, String> SLA = createField("sla", org.jooq.impl.SQLDataType.VARCHAR(64), this, "SLA要求");

    /**
     * The column <code>SMETA_APP.dict_event.biz_contacter</code>. 接入业务联系人
     */
    public final TableField<DictEventRecord, String> BIZ_CONTACTER = createField("biz_contacter", org.jooq.impl.SQLDataType.VARCHAR(64), this, "接入业务联系人");

    /**
     * The column <code>SMETA_APP.dict_event.tech_contacter</code>. 接入技术联系人
     */
    public final TableField<DictEventRecord, String> TECH_CONTACTER = createField("tech_contacter", org.jooq.impl.SQLDataType.VARCHAR(64), this, "接入技术联系人");

    /**
     * The column <code>SMETA_APP.dict_event.event_type</code>. 事件分类
     */
    public final TableField<DictEventRecord, String> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "事件分类");

    /**
     * The column <code>SMETA_APP.dict_event.biz_scenes</code>. 业务场景
     */
    public final TableField<DictEventRecord, String> BIZ_SCENES = createField("biz_scenes", org.jooq.impl.SQLDataType.VARCHAR(64), this, "业务场景");

    /**
     * The column <code>SMETA_APP.dict_event.sample_data</code>. 样例数据
     */
    public final TableField<DictEventRecord, String> SAMPLE_DATA = createField("sample_data", org.jooq.impl.SQLDataType.CLOB, this, "样例数据");

    /**
     * The column <code>SMETA_APP.dict_event.analyze_code</code>. 事件解析代码
     */
    public final TableField<DictEventRecord, String> ANALYZE_CODE = createField("analyze_code", org.jooq.impl.SQLDataType.CLOB, this, "事件解析代码");

    /**
     * The column <code>SMETA_APP.dict_event.status</code>. 事件状态：0删除，1有效，2草稿，3审批中, 4mtee事件下线
     */
    public final TableField<DictEventRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "事件状态：0删除，1有效，2草稿，3审批中, 4mtee事件下线");

    /**
     * The column <code>SMETA_APP.dict_event.biz_contacter_id</code>. 接入业务联系人ID
     */
    public final TableField<DictEventRecord, String> BIZ_CONTACTER_ID = createField("biz_contacter_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "接入业务联系人ID");

    /**
     * The column <code>SMETA_APP.dict_event.tech_contacter_id</code>. 接入技术联系人ID
     */
    public final TableField<DictEventRecord, String> TECH_CONTACTER_ID = createField("tech_contacter_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "接入技术联系人ID");

    /**
     * The column <code>SMETA_APP.dict_event.serialize</code>. 事件序列化方式
     */
    public final TableField<DictEventRecord, String> SERIALIZE = createField("serialize", org.jooq.impl.SQLDataType.VARCHAR(64), this, "事件序列化方式");

    /**
     * The column <code>SMETA_APP.dict_event.topic</code>. topic
     */
    public final TableField<DictEventRecord, String> TOPIC = createField("topic", org.jooq.impl.SQLDataType.VARCHAR(64), this, "topic");

    /**
     * The column <code>SMETA_APP.dict_event.message_type</code>. type_message
     */
    public final TableField<DictEventRecord, String> MESSAGE_TYPE = createField("message_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "type_message");

    /**
     * The column <code>SMETA_APP.dict_event.odps_table</code>. 云梯表
     */
    public final TableField<DictEventRecord, String> ODPS_TABLE = createField("odps_table", org.jooq.impl.SQLDataType.VARCHAR(128), this, "云梯表");

    /**
     * The column <code>SMETA_APP.dict_event.event_group</code>. 事件分组，一个事件可以属于多个分组：china、ameriaa、japan、singapore
     */
    public final TableField<DictEventRecord, String> EVENT_GROUP = createField("event_group", org.jooq.impl.SQLDataType.VARCHAR(256), this, "事件分组，一个事件可以属于多个分组：china、ameriaa、japan、singapore");

    /**
     * The column <code>SMETA_APP.dict_event.mt_offline</code>. 事件是否下线：0：mtee事件不存在，1:mtee 事件有效，3:mtee事件下线
     */
    public final TableField<DictEventRecord, Byte> MT_OFFLINE = createField("mt_offline", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "事件是否下线：0：mtee事件不存在，1:mtee 事件有效，3:mtee事件下线");

    /**
     * The column <code>SMETA_APP.dict_event.mt_migration</code>. mtee老事件规则迁移装填，0:未迁移，1：已经迁移
     */
    public final TableField<DictEventRecord, Byte> MT_MIGRATION = createField("mt_migration", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "mtee老事件规则迁移装填，0:未迁移，1：已经迁移");

    /**
     * The column <code>SMETA_APP.dict_event.mt_distribute</code>. mtee事件是否分发数据，默认不分发, 0: 未分发，1:分发
     */
    public final TableField<DictEventRecord, Byte> MT_DISTRIBUTE = createField("mt_distribute", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "mtee事件是否分发数据，默认不分发, 0: 未分发，1:分发");

    /**
     * The column <code>SMETA_APP.dict_event.nut_event_code</code>. 对应nut中老事件code
     */
    public final TableField<DictEventRecord, String> NUT_EVENT_CODE = createField("nut_event_code", org.jooq.impl.SQLDataType.VARCHAR(256), this, "对应nut中老事件code");

    /**
     * The column <code>SMETA_APP.dict_event.tenant_code</code>. 租户code
     */
    public final TableField<DictEventRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.inline("ali_taobao", org.jooq.impl.SQLDataType.VARCHAR)), this, "租户code");

    /**
     * The column <code>SMETA_APP.dict_event.threshold</code>. 事件阀值，mtee3.0使用
     */
    public final TableField<DictEventRecord, Integer> THRESHOLD = createField("threshold", org.jooq.impl.SQLDataType.INTEGER, this, "事件阀值，mtee3.0使用");

    /**
     * The column <code>SMETA_APP.dict_event.open_account_id</code>. 用户id，公有云用户使用
     */
    public final TableField<DictEventRecord, Long> OPEN_ACCOUNT_ID = createField("open_account_id", org.jooq.impl.SQLDataType.BIGINT, this, "用户id，公有云用户使用");

    /**
     * The column <code>SMETA_APP.dict_event.platform_version</code>. 平台版本号，用来区分mtee2.0和mtee3.0的事件
     */
    public final TableField<DictEventRecord, Integer> PLATFORM_VERSION = createField("platform_version", org.jooq.impl.SQLDataType.INTEGER, this, "平台版本号，用来区分mtee2.0和mtee3.0的事件");

    /**
     * The column <code>SMETA_APP.dict_event.event_step</code>. 事件新建流程步骤
     */
    public final TableField<DictEventRecord, Integer> EVENT_STEP = createField("event_step", org.jooq.impl.SQLDataType.INTEGER, this, "事件新建流程步骤");

    /**
     * The column <code>SMETA_APP.dict_event.event_migrate</code>. 事件迁移状态：0：未迁移 1：迁移中2：迁移完成
     */
    public final TableField<DictEventRecord, Byte> EVENT_MIGRATE = createField("event_migrate", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "事件迁移状态：0：未迁移 1：迁移中2：迁移完成");

    /**
     * The column <code>SMETA_APP.dict_event.event_platform</code>. 计算平台标记，实时计算mtee，离线计算airbus
     */
    public final TableField<DictEventRecord, String> EVENT_PLATFORM = createField("event_platform", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("mtee", org.jooq.impl.SQLDataType.VARCHAR)), this, "计算平台标记，实时计算mtee，离线计算airbus");

    /**
     * The column <code>SMETA_APP.dict_event.event_store_unit</code>. 事件存储单元信息：有eu13：线上中心、	su18：深圳单元、na61：张北云单元、et2：线上中心
     */
    public final TableField<DictEventRecord, String> EVENT_STORE_UNIT = createField("event_store_unit", org.jooq.impl.SQLDataType.VARCHAR(32), this, "事件存储单元信息：有eu13：线上中心、	su18：深圳单元、na61：张北云单元、et2：线上中心");

    /**
     * Create a <code>SMETA_APP.dict_event</code> table reference
     */
    public DictEvent() {
        this(DSL.name("dict_event"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_event</code> table reference
     */
    public DictEvent(String alias) {
        this(DSL.name(alias), DICT_EVENT);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_event</code> table reference
     */
    public DictEvent(Name alias) {
        this(alias, DICT_EVENT);
    }

    private DictEvent(Name alias, Table<DictEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictEvent(Name alias, Table<DictEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DICT_EVENT_IDX_STATUS, Indexes.DICT_EVENT_PRIMARY, Indexes.DICT_EVENT_UK_CODE, Indexes.DICT_EVENT_UK_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictEventRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DICT_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictEventRecord> getPrimaryKey() {
        return Keys.KEY_DICT_EVENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictEventRecord>> getKeys() {
        return Arrays.<UniqueKey<DictEventRecord>>asList(Keys.KEY_DICT_EVENT_PRIMARY, Keys.KEY_DICT_EVENT_UK_CODE, Keys.KEY_DICT_EVENT_UK_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictEvent as(String alias) {
        return new DictEvent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictEvent as(Name alias) {
        return new DictEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictEvent rename(String name) {
        return new DictEvent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DictEvent rename(Name name) {
        return new DictEvent(name, null);
    }
}
