/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfKeyValueRecord;


/**
 * kv数据表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfKeyValue extends TableImpl<UfKeyValueRecord> {

    private static final long serialVersionUID = -1255121772;

    /**
     * The reference instance of <code>SMETA_APP.uf_key_value</code>
     */
    public static final UfKeyValue UF_KEY_VALUE = new UfKeyValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfKeyValueRecord> getRecordType() {
        return UfKeyValueRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_key_value.id</code>. 主键
     */
    public final TableField<UfKeyValueRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_key_value.gmt_create</code>. 创建时间
     */
    public final TableField<UfKeyValueRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_key_value.gmt_modified</code>. 修改时间
     */
    public final TableField<UfKeyValueRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_key_value.kv_key</code>. key
     */
    public final TableField<UfKeyValueRecord, String> KV_KEY = createField("kv_key", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "key");

    /**
     * The column <code>SMETA_APP.uf_key_value.kv_value</code>. 值
     */
    public final TableField<UfKeyValueRecord, String> KV_VALUE = createField("kv_value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "值");

    /**
     * The column <code>SMETA_APP.uf_key_value.kv_code</code>. kv类型
     */
    public final TableField<UfKeyValueRecord, Long> KV_CODE = createField("kv_code", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "kv类型");

    /**
     * The column <code>SMETA_APP.uf_key_value.status</code>. 状态，1-有效，0-废弃
     */
    public final TableField<UfKeyValueRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，1-有效，0-废弃");

    /**
     * The column <code>SMETA_APP.uf_key_value.comment</code>. 备注信息
     */
    public final TableField<UfKeyValueRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(512), this, "备注信息");

    /**
     * The column <code>SMETA_APP.uf_key_value.creator</code>. 创建人
     */
    public final TableField<UfKeyValueRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "创建人");

    /**
     * The column <code>SMETA_APP.uf_key_value.last_operator</code>. 最后编辑人
     */
    public final TableField<UfKeyValueRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "最后编辑人");

    /**
     * The column <code>SMETA_APP.uf_key_value.tenant_code</code>. 租户code
     */
    public final TableField<UfKeyValueRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "租户code");

    /**
     * Create a <code>SMETA_APP.uf_key_value</code> table reference
     */
    public UfKeyValue() {
        this(DSL.name("uf_key_value"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_key_value</code> table reference
     */
    public UfKeyValue(String alias) {
        this(DSL.name(alias), UF_KEY_VALUE);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_key_value</code> table reference
     */
    public UfKeyValue(Name alias) {
        this(alias, UF_KEY_VALUE);
    }

    private UfKeyValue(Name alias, Table<UfKeyValueRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfKeyValue(Name alias, Table<UfKeyValueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "kv数据表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_KEY_VALUE_IDX_KEY_VALUE_TENANT, Indexes.UF_KEY_VALUE_PRIMARY, Indexes.UF_KEY_VALUE_UK_KEY_TENANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfKeyValueRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_KEY_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfKeyValueRecord> getPrimaryKey() {
        return Keys.KEY_UF_KEY_VALUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfKeyValueRecord>> getKeys() {
        return Arrays.<UniqueKey<UfKeyValueRecord>>asList(Keys.KEY_UF_KEY_VALUE_PRIMARY, Keys.KEY_UF_KEY_VALUE_UK_KEY_TENANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfKeyValue as(String alias) {
        return new UfKeyValue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfKeyValue as(Name alias) {
        return new UfKeyValue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfKeyValue rename(String name) {
        return new UfKeyValue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfKeyValue rename(Name name) {
        return new UfKeyValue(name, null);
    }
}
