/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.DictMappingEvent;


/**
 * mtee 迁移事件表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictMappingEventRecord extends UpdatableRecordImpl<DictMappingEventRecord> implements Record13<Long, Timestamp, Timestamp, String, String, String, String, String, Integer, String, String, String, String> {

    private static final long serialVersionUID = 406144362;

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.id</code>. 主键
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.event_name</code>. 事件名称
     */
    public void setEventName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.event_name</code>. 事件名称
     */
    public String getEventName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.event_code</code>. 事件编码
     */
    public void setEventCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.event_code</code>. 事件编码
     */
    public String getEventCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.event_type</code>. 事件类型
     */
    public void setEventType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.event_type</code>. 事件类型
     */
    public String getEventType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.operator_id</code>. 操作人ID
     */
    public void setOperatorId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.operator_id</code>. 操作人ID
     */
    public String getOperatorId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.operator</code>. 操作人
     */
    public void setOperator(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.operator</code>. 操作人
     */
    public String getOperator() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.status</code>. 状态（1：迁移审核，2：迁移中，3：已迁移
     */
    public void setStatus(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.status</code>. 状态（1：迁移审核，2：迁移中，3：已迁移
     */
    public Integer getStatus() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.comment</code>. 备注
     */
    public void setComment(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.comment</code>. 备注
     */
    public String getComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.creater</code>. 创建人
     */
    public void setCreater(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.creater</code>. 创建人
     */
    public String getCreater() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.creater_id</code>. 创建人ID
     */
    public void setCreaterId(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.creater_id</code>. 创建人ID
     */
    public String getCreaterId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.dict_mapping_event.submitter</code>. 审核提交人
     */
    public void setSubmitter(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.dict_mapping_event.submitter</code>. 审核提交人
     */
    public String getSubmitter() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Timestamp, Timestamp, String, String, String, String, String, Integer, String, String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Timestamp, Timestamp, String, String, String, String, String, Integer, String, String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return DictMappingEvent.DICT_MAPPING_EVENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return DictMappingEvent.DICT_MAPPING_EVENT.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return DictMappingEvent.DICT_MAPPING_EVENT.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DictMappingEvent.DICT_MAPPING_EVENT.EVENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DictMappingEvent.DICT_MAPPING_EVENT.EVENT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DictMappingEvent.DICT_MAPPING_EVENT.EVENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return DictMappingEvent.DICT_MAPPING_EVENT.OPERATOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return DictMappingEvent.DICT_MAPPING_EVENT.OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return DictMappingEvent.DICT_MAPPING_EVENT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return DictMappingEvent.DICT_MAPPING_EVENT.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return DictMappingEvent.DICT_MAPPING_EVENT.CREATER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return DictMappingEvent.DICT_MAPPING_EVENT.CREATER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return DictMappingEvent.DICT_MAPPING_EVENT.SUBMITTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getEventName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getEventType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getCreater();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getCreaterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getSubmitter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEventName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getEventType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getCreater();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getCreaterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getSubmitter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value4(String value) {
        setEventName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value5(String value) {
        setEventCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value6(String value) {
        setEventType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value7(String value) {
        setOperatorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value8(String value) {
        setOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value9(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value10(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value11(String value) {
        setCreater(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value12(String value) {
        setCreaterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord value13(String value) {
        setSubmitter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictMappingEventRecord values(Long value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, Integer value9, String value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DictMappingEventRecord
     */
    public DictMappingEventRecord() {
        super(DictMappingEvent.DICT_MAPPING_EVENT);
    }

    /**
     * Create a detached, initialised DictMappingEventRecord
     */
    public DictMappingEventRecord(Long id, Timestamp gmtCreate, Timestamp gmtModified, String eventName, String eventCode, String eventType, String operatorId, String operator, Integer status, String comment, String creater, String createrId, String submitter) {
        super(DictMappingEvent.DICT_MAPPING_EVENT);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, eventName);
        set(4, eventCode);
        set(5, eventType);
        set(6, operatorId);
        set(7, operator);
        set(8, status);
        set(9, comment);
        set(10, creater);
        set(11, createrId);
        set(12, submitter);
    }
}
