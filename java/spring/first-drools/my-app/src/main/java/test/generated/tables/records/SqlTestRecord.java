/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.SqlTest;


/**
 * 日常环境测试表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlTestRecord extends UpdatableRecordImpl<SqlTestRecord> implements Record6<ULong, Timestamp, Timestamp, String, String, Long> {

    private static final long serialVersionUID = -628291150;

    /**
     * Setter for <code>SMETA_APP.sql_test.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.sql_test.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.sql_test.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.sql_test.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.sql_test.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.sql_test.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.sql_test.name</code>. 姓名

     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.sql_test.name</code>. 姓名

     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.sql_test.course</code>. 课程
     */
    public void setCourse(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.sql_test.course</code>. 课程
     */
    public String getCourse() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.sql_test.score</code>. 分数
     */
    public void setScore(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.sql_test.score</code>. 分数
     */
    public Long getScore() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<ULong, Timestamp, Timestamp, String, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<ULong, Timestamp, Timestamp, String, String, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return SqlTest.SQL_TEST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return SqlTest.SQL_TEST.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return SqlTest.SQL_TEST.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SqlTest.SQL_TEST.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SqlTest.SQL_TEST.COURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return SqlTest.SQL_TEST.SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCourse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCourse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord value5(String value) {
        setCourse(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord value6(Long value) {
        setScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlTestRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SqlTestRecord
     */
    public SqlTestRecord() {
        super(SqlTest.SQL_TEST);
    }

    /**
     * Create a detached, initialised SqlTestRecord
     */
    public SqlTestRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String name, String course, Long score) {
        super(SqlTest.SQL_TEST);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, name);
        set(4, course);
        set(5, score);
    }
}
