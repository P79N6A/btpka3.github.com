/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcSyncTaskQueueRecord;


/**
 * 离线指标 待同步处理队列
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcSyncTaskQueue extends TableImpl<CalcSyncTaskQueueRecord> {

    private static final long serialVersionUID = -830752747;

    /**
     * The reference instance of <code>SMETA_APP.calc_sync_task_queue</code>
     */
    public static final CalcSyncTaskQueue CALC_SYNC_TASK_QUEUE = new CalcSyncTaskQueue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcSyncTaskQueueRecord> getRecordType() {
        return CalcSyncTaskQueueRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.id</code>. 主键
     */
    public final TableField<CalcSyncTaskQueueRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.gmt_create</code>. 创建时间
     */
    public final TableField<CalcSyncTaskQueueRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcSyncTaskQueueRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.task_type</code>. 添加指标addSyncIndi，删除指标delSyncIndi，删除任务delSyncTask，刷新任务refreshSyncTask
     */
    public final TableField<CalcSyncTaskQueueRecord, String> TASK_TYPE = createField("task_type", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "添加指标addSyncIndi，删除指标delSyncIndi，删除任务delSyncTask，刷新任务refreshSyncTask");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.indi_codes</code>. 指标编码集
     */
    public final TableField<CalcSyncTaskQueueRecord, String> INDI_CODES = createField("indi_codes", org.jooq.impl.SQLDataType.CLOB, this, "指标编码集");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.store_code</code>. 存储编码：tair_cn, tair_us, tair_ru, hbase_cn_mtee_offline_indicator
     */
    public final TableField<CalcSyncTaskQueueRecord, String> STORE_CODE = createField("store_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "存储编码：tair_cn, tair_us, tair_ru, hbase_cn_mtee_offline_indicator");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.sync_code</code>. 同步编码：a
     */
    public final TableField<CalcSyncTaskQueueRecord, String> SYNC_CODE = createField("sync_code", org.jooq.impl.SQLDataType.VARCHAR(16), this, "同步编码：a");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.operator_id</code>. 任务接口人：工号 不足6位前面补0
     */
    public final TableField<CalcSyncTaskQueueRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "任务接口人：工号 不足6位前面补0");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.operator</code>. 任务接口人：花名
     */
    public final TableField<CalcSyncTaskQueueRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "任务接口人：花名");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.status</code>. 处理状态：0未处理，1处理中，2已完成，3有异常
     */
    public final TableField<CalcSyncTaskQueueRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "处理状态：0未处理，1处理中，2已完成，3有异常");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.result_log</code>. 处理日志
     */
    public final TableField<CalcSyncTaskQueueRecord, String> RESULT_LOG = createField("result_log", org.jooq.impl.SQLDataType.CLOB, this, "处理日志");

    /**
     * The column <code>SMETA_APP.calc_sync_task_queue.hbase_temp_version</code>. 同步hbase模板版本：v1，v2
     */
    public final TableField<CalcSyncTaskQueueRecord, String> HBASE_TEMP_VERSION = createField("hbase_temp_version", org.jooq.impl.SQLDataType.VARCHAR(16), this, "同步hbase模板版本：v1，v2");

    /**
     * Create a <code>SMETA_APP.calc_sync_task_queue</code> table reference
     */
    public CalcSyncTaskQueue() {
        this(DSL.name("calc_sync_task_queue"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_sync_task_queue</code> table reference
     */
    public CalcSyncTaskQueue(String alias) {
        this(DSL.name(alias), CALC_SYNC_TASK_QUEUE);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_sync_task_queue</code> table reference
     */
    public CalcSyncTaskQueue(Name alias) {
        this(alias, CALC_SYNC_TASK_QUEUE);
    }

    private CalcSyncTaskQueue(Name alias, Table<CalcSyncTaskQueueRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcSyncTaskQueue(Name alias, Table<CalcSyncTaskQueueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "离线指标 待同步处理队列");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_SYNC_TASK_QUEUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcSyncTaskQueueRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_SYNC_TASK_QUEUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcSyncTaskQueueRecord> getPrimaryKey() {
        return Keys.KEY_CALC_SYNC_TASK_QUEUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcSyncTaskQueueRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcSyncTaskQueueRecord>>asList(Keys.KEY_CALC_SYNC_TASK_QUEUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcSyncTaskQueue as(String alias) {
        return new CalcSyncTaskQueue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcSyncTaskQueue as(Name alias) {
        return new CalcSyncTaskQueue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcSyncTaskQueue rename(String name) {
        return new CalcSyncTaskQueue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcSyncTaskQueue rename(Name name) {
        return new CalcSyncTaskQueue(name, null);
    }
}
