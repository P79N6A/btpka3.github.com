/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.IndiNutEventRecord;


/**
 * 实时计算事件
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndiNutEvent extends TableImpl<IndiNutEventRecord> {

    private static final long serialVersionUID = -278878645;

    /**
     * The reference instance of <code>SMETA_APP.indi_nut_event</code>
     */
    public static final IndiNutEvent INDI_NUT_EVENT = new IndiNutEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndiNutEventRecord> getRecordType() {
        return IndiNutEventRecord.class;
    }

    /**
     * The column <code>SMETA_APP.indi_nut_event.id</code>. 主键
     */
    public final TableField<IndiNutEventRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.indi_nut_event.gmt_create</code>. 创建时间
     */
    public final TableField<IndiNutEventRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.indi_nut_event.gmt_modified</code>. 修改时间
     */
    public final TableField<IndiNutEventRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.indi_nut_event.created_by</code>. 事件创建者
     */
    public final TableField<IndiNutEventRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "事件创建者");

    /**
     * The column <code>SMETA_APP.indi_nut_event.updated_by</code>. 事件更新者
     */
    public final TableField<IndiNutEventRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(64), this, "事件更新者");

    /**
     * The column <code>SMETA_APP.indi_nut_event.code</code>. 事件编码
     */
    public final TableField<IndiNutEventRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.indi_nut_event.name</code>. 事件名称
     */
    public final TableField<IndiNutEventRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "事件名称");

    /**
     * The column <code>SMETA_APP.indi_nut_event.description</code>. 事件描述
     */
    public final TableField<IndiNutEventRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "事件描述");

    /**
     * The column <code>SMETA_APP.indi_nut_event.indi_event_code</code>. 对应指标事件编码
     */
    public final TableField<IndiNutEventRecord, String> INDI_EVENT_CODE = createField("indi_event_code", org.jooq.impl.SQLDataType.VARCHAR(32), this, "对应指标事件编码");

    /**
     * The column <code>SMETA_APP.indi_nut_event.is_effective</code>. 状态
     */
    public final TableField<IndiNutEventRecord, Byte> IS_EFFECTIVE = createField("is_effective", org.jooq.impl.SQLDataType.TINYINT, this, "状态");

    /**
     * The column <code>SMETA_APP.indi_nut_event.flag</code>. 新老事件标识：new、old
     */
    public final TableField<IndiNutEventRecord, String> FLAG = createField("flag", org.jooq.impl.SQLDataType.VARCHAR(32), this, "新老事件标识：new、old");

    /**
     * The column <code>SMETA_APP.indi_nut_event.new_code</code>. 映射新事件编码
     */
    public final TableField<IndiNutEventRecord, String> NEW_CODE = createField("new_code", org.jooq.impl.SQLDataType.VARCHAR(128), this, "映射新事件编码");

    /**
     * Create a <code>SMETA_APP.indi_nut_event</code> table reference
     */
    public IndiNutEvent() {
        this(DSL.name("indi_nut_event"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.indi_nut_event</code> table reference
     */
    public IndiNutEvent(String alias) {
        this(DSL.name(alias), INDI_NUT_EVENT);
    }

    /**
     * Create an aliased <code>SMETA_APP.indi_nut_event</code> table reference
     */
    public IndiNutEvent(Name alias) {
        this(alias, INDI_NUT_EVENT);
    }

    private IndiNutEvent(Name alias, Table<IndiNutEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private IndiNutEvent(Name alias, Table<IndiNutEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "实时计算事件");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INDI_NUT_EVENT_IDX_CODE, Indexes.INDI_NUT_EVENT_IDX_IE, Indexes.INDI_NUT_EVENT_PRIMARY, Indexes.INDI_NUT_EVENT_UK_IDX_CODE_NUT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IndiNutEventRecord, ULong> getIdentity() {
        return Keys.IDENTITY_INDI_NUT_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IndiNutEventRecord> getPrimaryKey() {
        return Keys.KEY_INDI_NUT_EVENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IndiNutEventRecord>> getKeys() {
        return Arrays.<UniqueKey<IndiNutEventRecord>>asList(Keys.KEY_INDI_NUT_EVENT_PRIMARY, Keys.KEY_INDI_NUT_EVENT_UK_IDX_CODE_NUT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndiNutEvent as(String alias) {
        return new IndiNutEvent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndiNutEvent as(Name alias) {
        return new IndiNutEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IndiNutEvent rename(String name) {
        return new IndiNutEvent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IndiNutEvent rename(Name name) {
        return new IndiNutEvent(name, null);
    }
}
