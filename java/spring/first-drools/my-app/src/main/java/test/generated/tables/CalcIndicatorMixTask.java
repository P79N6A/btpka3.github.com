/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcIndicatorMixTaskRecord;


/**
 * 融合指标数据处理调度任务
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorMixTask extends TableImpl<CalcIndicatorMixTaskRecord> {

    private static final long serialVersionUID = 952757907;

    /**
     * The reference instance of <code>SMETA_APP.calc_indicator_mix_task</code>
     */
    public static final CalcIndicatorMixTask CALC_INDICATOR_MIX_TASK = new CalcIndicatorMixTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcIndicatorMixTaskRecord> getRecordType() {
        return CalcIndicatorMixTaskRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.id</code>. 主键
     */
    public final TableField<CalcIndicatorMixTaskRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.gmt_create</code>. 创建时间
     */
    public final TableField<CalcIndicatorMixTaskRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcIndicatorMixTaskRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.rt_indi_code</code>. 实时指标编码
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> RT_INDI_CODE = createField("rt_indi_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "实时指标编码");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.nl_indi_code</code>. 近线指标编码
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> NL_INDI_CODE = createField("nl_indi_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "近线指标编码");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.nl_indi_name</code>. 近线指标名称
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> NL_INDI_NAME = createField("nl_indi_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "近线指标名称");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.indi_project</code>. 指标结果表应用
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> INDI_PROJECT = createField("indi_project", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "指标结果表应用");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.indi_table_name</code>. 指标结果表名称
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> INDI_TABLE_NAME = createField("indi_table_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "指标结果表名称");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.indi_table_partition</code>. 指标结果表分区
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> INDI_TABLE_PARTITION = createField("indi_table_partition", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "指标结果表分区");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.record</code>. 指标表总记录数
     */
    public final TableField<CalcIndicatorMixTaskRecord, Long> RECORD = createField("record", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "指标表总记录数");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.read_start</code>. 读取记录的起始位置
     */
    public final TableField<CalcIndicatorMixTaskRecord, Long> READ_START = createField("read_start", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "读取记录的起始位置");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.read_count</code>. 读取记录的数量
     */
    public final TableField<CalcIndicatorMixTaskRecord, Long> READ_COUNT = createField("read_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "读取记录的数量");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.consumer_ip</code>. 数据消费服务器
     */
    public final TableField<CalcIndicatorMixTaskRecord, String> CONSUMER_IP = createField("consumer_ip", org.jooq.impl.SQLDataType.VARCHAR(32), this, "数据消费服务器");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.consumer_status</code>. 数据消费状态：0未消费，1消费中，2消费完成，3消费失败
     */
    public final TableField<CalcIndicatorMixTaskRecord, Integer> CONSUMER_STATUS = createField("consumer_status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "数据消费状态：0未消费，1消费中，2消费完成，3消费失败");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.consumer_version</code>. 数据消费版本
     */
    public final TableField<CalcIndicatorMixTaskRecord, Integer> CONSUMER_VERSION = createField("consumer_version", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "数据消费版本");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.consumer_start_time</code>. 消费开始时间
     */
    public final TableField<CalcIndicatorMixTaskRecord, Timestamp> CONSUMER_START_TIME = createField("consumer_start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "消费开始时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_mix_task.consumer_end_time</code>. 消费结束时间
     */
    public final TableField<CalcIndicatorMixTaskRecord, Timestamp> CONSUMER_END_TIME = createField("consumer_end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "消费结束时间");

    /**
     * Create a <code>SMETA_APP.calc_indicator_mix_task</code> table reference
     */
    public CalcIndicatorMixTask() {
        this(DSL.name("calc_indicator_mix_task"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_mix_task</code> table reference
     */
    public CalcIndicatorMixTask(String alias) {
        this(DSL.name(alias), CALC_INDICATOR_MIX_TASK);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_mix_task</code> table reference
     */
    public CalcIndicatorMixTask(Name alias) {
        this(alias, CALC_INDICATOR_MIX_TASK);
    }

    private CalcIndicatorMixTask(Name alias, Table<CalcIndicatorMixTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcIndicatorMixTask(Name alias, Table<CalcIndicatorMixTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "融合指标数据处理调度任务");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_INDICATOR_MIX_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcIndicatorMixTaskRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_INDICATOR_MIX_TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcIndicatorMixTaskRecord> getPrimaryKey() {
        return Keys.KEY_CALC_INDICATOR_MIX_TASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcIndicatorMixTaskRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcIndicatorMixTaskRecord>>asList(Keys.KEY_CALC_INDICATOR_MIX_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorMixTask as(String alias) {
        return new CalcIndicatorMixTask(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorMixTask as(Name alias) {
        return new CalcIndicatorMixTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorMixTask rename(String name) {
        return new CalcIndicatorMixTask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorMixTask rename(Name name) {
        return new CalcIndicatorMixTask(name, null);
    }
}
