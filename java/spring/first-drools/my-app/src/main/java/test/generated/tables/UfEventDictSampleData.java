/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfEventDictSampleDataRecord;


/**
 * 事件数据字典采样值
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfEventDictSampleData extends TableImpl<UfEventDictSampleDataRecord> {

    private static final long serialVersionUID = -1577123191;

    /**
     * The reference instance of <code>SMETA_APP.uf_event_dict_sample_data</code>
     */
    public static final UfEventDictSampleData UF_EVENT_DICT_SAMPLE_DATA = new UfEventDictSampleData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfEventDictSampleDataRecord> getRecordType() {
        return UfEventDictSampleDataRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.id</code>. 主键
     */
    public final TableField<UfEventDictSampleDataRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.gmt_create</code>. 创建时间
     */
    public final TableField<UfEventDictSampleDataRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.gmt_modified</code>. 修改时间
     */
    public final TableField<UfEventDictSampleDataRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.event_code</code>. 事件编码
     */
    public final TableField<UfEventDictSampleDataRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.dict</code>. 数据字典
     */
    public final TableField<UfEventDictSampleDataRecord, String> DICT = createField("dict", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "数据字典");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.data</code>. 值
     */
    public final TableField<UfEventDictSampleDataRecord, String> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "值");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.receive_time</code>. 时间戳
     */
    public final TableField<UfEventDictSampleDataRecord, ULong> RECEIVE_TIME = createField("receive_time", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "时间戳");

    /**
     * The column <code>SMETA_APP.uf_event_dict_sample_data.trace_id</code>. TraceId
     */
    public final TableField<UfEventDictSampleDataRecord, String> TRACE_ID = createField("trace_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "TraceId");

    /**
     * Create a <code>SMETA_APP.uf_event_dict_sample_data</code> table reference
     */
    public UfEventDictSampleData() {
        this(DSL.name("uf_event_dict_sample_data"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_event_dict_sample_data</code> table reference
     */
    public UfEventDictSampleData(String alias) {
        this(DSL.name(alias), UF_EVENT_DICT_SAMPLE_DATA);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_event_dict_sample_data</code> table reference
     */
    public UfEventDictSampleData(Name alias) {
        this(alias, UF_EVENT_DICT_SAMPLE_DATA);
    }

    private UfEventDictSampleData(Name alias, Table<UfEventDictSampleDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfEventDictSampleData(Name alias, Table<UfEventDictSampleDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件数据字典采样值");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_EVENT_DICT_SAMPLE_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfEventDictSampleDataRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_EVENT_DICT_SAMPLE_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfEventDictSampleDataRecord> getPrimaryKey() {
        return Keys.KEY_UF_EVENT_DICT_SAMPLE_DATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfEventDictSampleDataRecord>> getKeys() {
        return Arrays.<UniqueKey<UfEventDictSampleDataRecord>>asList(Keys.KEY_UF_EVENT_DICT_SAMPLE_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleData as(String alias) {
        return new UfEventDictSampleData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleData as(Name alias) {
        return new UfEventDictSampleData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfEventDictSampleData rename(String name) {
        return new UfEventDictSampleData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfEventDictSampleData rename(Name name) {
        return new UfEventDictSampleData(name, null);
    }
}
