/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfFlowRecord;


/**
 * 流程定义表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfFlow extends TableImpl<UfFlowRecord> {

    private static final long serialVersionUID = -119797921;

    /**
     * The reference instance of <code>SMETA_APP.uf_flow</code>
     */
    public static final UfFlow UF_FLOW = new UfFlow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfFlowRecord> getRecordType() {
        return UfFlowRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_flow.id</code>. 主键
     */
    public final TableField<UfFlowRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_flow.gmt_create</code>. 创建时间
     */
    public final TableField<UfFlowRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_flow.gmt_modified</code>. 修改时间
     */
    public final TableField<UfFlowRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_flow.creator</code>. 工作流创建人
     */
    public final TableField<UfFlowRecord, ULong> CREATOR = createField("creator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "工作流创建人");

    /**
     * The column <code>SMETA_APP.uf_flow.last_operator</code>. 最后修改人
     */
    public final TableField<UfFlowRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "最后修改人");

    /**
     * The column <code>SMETA_APP.uf_flow.code</code>. 工作流编码
     */
    public final TableField<UfFlowRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "工作流编码");

    /**
     * The column <code>SMETA_APP.uf_flow.title</code>. 工作流标题
     */
    public final TableField<UfFlowRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "工作流标题");

    /**
     * The column <code>SMETA_APP.uf_flow.comment</code>. 描述
     */
    public final TableField<UfFlowRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(300), this, "描述");

    /**
     * The column <code>SMETA_APP.uf_flow.type</code>. tenant;opBackstage
     */
    public final TableField<UfFlowRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(18).nullable(false).defaultValue(org.jooq.impl.DSL.inline("tenant", org.jooq.impl.SQLDataType.VARCHAR)), this, "tenant;opBackstage");

    /**
     * Create a <code>SMETA_APP.uf_flow</code> table reference
     */
    public UfFlow() {
        this(DSL.name("uf_flow"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_flow</code> table reference
     */
    public UfFlow(String alias) {
        this(DSL.name(alias), UF_FLOW);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_flow</code> table reference
     */
    public UfFlow(Name alias) {
        this(alias, UF_FLOW);
    }

    private UfFlow(Name alias, Table<UfFlowRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfFlow(Name alias, Table<UfFlowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "流程定义表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_FLOW_PRIMARY, Indexes.UF_FLOW_UK_CODE, Indexes.UF_FLOW_UK_TITLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfFlowRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_FLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfFlowRecord> getPrimaryKey() {
        return Keys.KEY_UF_FLOW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfFlowRecord>> getKeys() {
        return Arrays.<UniqueKey<UfFlowRecord>>asList(Keys.KEY_UF_FLOW_PRIMARY, Keys.KEY_UF_FLOW_UK_CODE, Keys.KEY_UF_FLOW_UK_TITLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFlow as(String alias) {
        return new UfFlow(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFlow as(Name alias) {
        return new UfFlow(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFlow rename(String name) {
        return new UfFlow(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFlow rename(Name name) {
        return new UfFlow(name, null);
    }
}
