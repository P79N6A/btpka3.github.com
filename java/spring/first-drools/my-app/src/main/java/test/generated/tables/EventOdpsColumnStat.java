/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.EventOdpsColumnStatRecord;


/**
 * 事件上云属性统
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventOdpsColumnStat extends TableImpl<EventOdpsColumnStatRecord> {

    private static final long serialVersionUID = 250952141;

    /**
     * The reference instance of <code>SMETA_APP.event_odps_column_stat</code>
     */
    public static final EventOdpsColumnStat EVENT_ODPS_COLUMN_STAT = new EventOdpsColumnStat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventOdpsColumnStatRecord> getRecordType() {
        return EventOdpsColumnStatRecord.class;
    }

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.id</code>. 主键
     */
    public final TableField<EventOdpsColumnStatRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.gmt_create</code>. 创建时间
     */
    public final TableField<EventOdpsColumnStatRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.gmt_modified</code>. 修改时间
     */
    public final TableField<EventOdpsColumnStatRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.event_code</code>. 事件编码
     */
    public final TableField<EventOdpsColumnStatRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.event_column_code</code>. 属性编码
     */
    public final TableField<EventOdpsColumnStatRecord, String> EVENT_COLUMN_CODE = createField("event_column_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "属性编码");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.column_type</code>. 属性类型,1:原生属性，2：函数属性，3：实体属性
     */
    public final TableField<EventOdpsColumnStatRecord, Integer> COLUMN_TYPE = createField("column_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "属性类型,1:原生属性，2：函数属性，3：实体属性");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.cost</code>. 补全成本
     */
    public final TableField<EventOdpsColumnStatRecord, Integer> COST = createField("cost", org.jooq.impl.SQLDataType.INTEGER, this, "补全成本");

    /**
     * The column <code>SMETA_APP.event_odps_column_stat.status</code>. 上云状态，1：已上云，0：未上云
     */
    public final TableField<EventOdpsColumnStatRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "上云状态，1：已上云，0：未上云");

    /**
     * Create a <code>SMETA_APP.event_odps_column_stat</code> table reference
     */
    public EventOdpsColumnStat() {
        this(DSL.name("event_odps_column_stat"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.event_odps_column_stat</code> table reference
     */
    public EventOdpsColumnStat(String alias) {
        this(DSL.name(alias), EVENT_ODPS_COLUMN_STAT);
    }

    /**
     * Create an aliased <code>SMETA_APP.event_odps_column_stat</code> table reference
     */
    public EventOdpsColumnStat(Name alias) {
        this(alias, EVENT_ODPS_COLUMN_STAT);
    }

    private EventOdpsColumnStat(Name alias, Table<EventOdpsColumnStatRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventOdpsColumnStat(Name alias, Table<EventOdpsColumnStatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件上云属性统");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVENT_ODPS_COLUMN_STAT_IDX_EVENT_CODE, Indexes.EVENT_ODPS_COLUMN_STAT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventOdpsColumnStatRecord, ULong> getIdentity() {
        return Keys.IDENTITY_EVENT_ODPS_COLUMN_STAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventOdpsColumnStatRecord> getPrimaryKey() {
        return Keys.KEY_EVENT_ODPS_COLUMN_STAT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventOdpsColumnStatRecord>> getKeys() {
        return Arrays.<UniqueKey<EventOdpsColumnStatRecord>>asList(Keys.KEY_EVENT_ODPS_COLUMN_STAT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnStat as(String alias) {
        return new EventOdpsColumnStat(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnStat as(Name alias) {
        return new EventOdpsColumnStat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventOdpsColumnStat rename(String name) {
        return new EventOdpsColumnStat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventOdpsColumnStat rename(Name name) {
        return new EventOdpsColumnStat(name, null);
    }
}
