/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.EventDeploymentConfigRecord;


/**
 * 事件部署配置信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventDeploymentConfig extends TableImpl<EventDeploymentConfigRecord> {

    private static final long serialVersionUID = -2110382142;

    /**
     * The reference instance of <code>SMETA_APP.event_deployment_config</code>
     */
    public static final EventDeploymentConfig EVENT_DEPLOYMENT_CONFIG = new EventDeploymentConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventDeploymentConfigRecord> getRecordType() {
        return EventDeploymentConfigRecord.class;
    }

    /**
     * The column <code>SMETA_APP.event_deployment_config.id</code>. 主键
     */
    public final TableField<EventDeploymentConfigRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.event_deployment_config.gmt_create</code>. 创建时间
     */
    public final TableField<EventDeploymentConfigRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>SMETA_APP.event_deployment_config.gmt_modified</code>. 修改时间
     */
    public final TableField<EventDeploymentConfigRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.event_deployment_config.event_code</code>. 事件编码
     */
    public final TableField<EventDeploymentConfigRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.event_deployment_config.status</code>. 事件状态
     */
    public final TableField<EventDeploymentConfigRecord, UByte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "事件状态");

    /**
     * The column <code>SMETA_APP.event_deployment_config.operator</code>. 最后操作者
     */
    public final TableField<EventDeploymentConfigRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "最后操作者");

    /**
     * The column <code>SMETA_APP.event_deployment_config.creator</code>. 创建者
     */
    public final TableField<EventDeploymentConfigRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "创建者");

    /**
     * The column <code>SMETA_APP.event_deployment_config.version</code>. 版本
     */
    public final TableField<EventDeploymentConfigRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "版本");

    /**
     * The column <code>SMETA_APP.event_deployment_config.pipeline</code>. 配置项信息
     */
    public final TableField<EventDeploymentConfigRecord, String> PIPELINE = createField("pipeline", org.jooq.impl.SQLDataType.CLOB, this, "配置项信息");

    /**
     * The column <code>SMETA_APP.event_deployment_config.event_name</code>. 事件名称
     */
    public final TableField<EventDeploymentConfigRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "事件名称");

    /**
     * The column <code>SMETA_APP.event_deployment_config.tenant_code</code>. 租户编码
     */
    public final TableField<EventDeploymentConfigRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "租户编码");

    /**
     * The column <code>SMETA_APP.event_deployment_config.migrate</code>. 迁移标记：0未迁移，1迁移中 2 迁移完成
     */
    public final TableField<EventDeploymentConfigRecord, Integer> MIGRATE = createField("migrate", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "迁移标记：0未迁移，1迁移中 2 迁移完成");

    /**
     * The column <code>SMETA_APP.event_deployment_config.app_id</code>. 平台信息
     */
    public final TableField<EventDeploymentConfigRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.inline("mt", org.jooq.impl.SQLDataType.VARCHAR)), this, "平台信息");

    /**
     * The column <code>SMETA_APP.event_deployment_config.beta_host</code>. beta机器
     */
    public final TableField<EventDeploymentConfigRecord, String> BETA_HOST = createField("beta_host", org.jooq.impl.SQLDataType.VARCHAR(64), this, "beta机器");

    /**
     * The column <code>SMETA_APP.event_deployment_config.draft_pipeline</code>. 配置信息草稿
     */
    public final TableField<EventDeploymentConfigRecord, String> DRAFT_PIPELINE = createField("draft_pipeline", org.jooq.impl.SQLDataType.CLOB, this, "配置信息草稿");

    /**
     * Create a <code>SMETA_APP.event_deployment_config</code> table reference
     */
    public EventDeploymentConfig() {
        this(DSL.name("event_deployment_config"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.event_deployment_config</code> table reference
     */
    public EventDeploymentConfig(String alias) {
        this(DSL.name(alias), EVENT_DEPLOYMENT_CONFIG);
    }

    /**
     * Create an aliased <code>SMETA_APP.event_deployment_config</code> table reference
     */
    public EventDeploymentConfig(Name alias) {
        this(alias, EVENT_DEPLOYMENT_CONFIG);
    }

    private EventDeploymentConfig(Name alias, Table<EventDeploymentConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventDeploymentConfig(Name alias, Table<EventDeploymentConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件部署配置信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVENT_DEPLOYMENT_CONFIG_IDX_EVENT_QUERY, Indexes.EVENT_DEPLOYMENT_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventDeploymentConfigRecord, ULong> getIdentity() {
        return Keys.IDENTITY_EVENT_DEPLOYMENT_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventDeploymentConfigRecord> getPrimaryKey() {
        return Keys.KEY_EVENT_DEPLOYMENT_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventDeploymentConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<EventDeploymentConfigRecord>>asList(Keys.KEY_EVENT_DEPLOYMENT_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventDeploymentConfig as(String alias) {
        return new EventDeploymentConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventDeploymentConfig as(Name alias) {
        return new EventDeploymentConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventDeploymentConfig rename(String name) {
        return new EventDeploymentConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventDeploymentConfig rename(Name name) {
        return new EventDeploymentConfig(name, null);
    }
}
