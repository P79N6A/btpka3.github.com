/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.EventMonitor;


/**
 * 事件按天监控表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventMonitorRecord extends UpdatableRecordImpl<EventMonitorRecord> implements Record10<ULong, Timestamp, Timestamp, String, String, Double, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -565390721;

    /**
     * Setter for <code>SMETA_APP.event_monitor.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.biz_date</code>. 业务时间，格式：20160707
     */
    public void setBizDate(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.biz_date</code>. 业务时间，格式：20160707
     */
    public String getBizDate() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.event_code</code>. 事件编码
     */
    public void setEventCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.event_code</code>. 事件编码
     */
    public String getEventCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.mtee_dispatch_cnt</code>. mtee分发量
     */
    public void setMteeDispatchCnt(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.mtee_dispatch_cnt</code>. mtee分发量
     */
    public Double getMteeDispatchCnt() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.pisa_dispatch_cnt</code>. pisa分发量
     */
    public void setPisaDispatchCnt(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.pisa_dispatch_cnt</code>. pisa分发量
     */
    public Integer getPisaDispatchCnt() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.sevent_deal_cnt</code>. sevent处理量
     */
    public void setSeventDealCnt(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.sevent_deal_cnt</code>. sevent处理量
     */
    public Integer getSeventDealCnt() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.datahub_write_cnt</code>. datahub上云量
     */
    public void setDatahubWriteCnt(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.datahub_write_cnt</code>. datahub上云量
     */
    public Integer getDatahubWriteCnt() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.event_monitor.hbase_write_cnt</code>. hbase写入量
     */
    public void setHbaseWriteCnt(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_monitor.hbase_write_cnt</code>. hbase写入量
     */
    public Integer getHbaseWriteCnt() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Timestamp, Timestamp, String, String, Double, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Timestamp, Timestamp, String, String, Double, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return EventMonitor.EVENT_MONITOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return EventMonitor.EVENT_MONITOR.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return EventMonitor.EVENT_MONITOR.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return EventMonitor.EVENT_MONITOR.BIZ_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return EventMonitor.EVENT_MONITOR.EVENT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return EventMonitor.EVENT_MONITOR.MTEE_DISPATCH_CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return EventMonitor.EVENT_MONITOR.PISA_DISPATCH_CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return EventMonitor.EVENT_MONITOR.SEVENT_DEAL_CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return EventMonitor.EVENT_MONITOR.DATAHUB_WRITE_CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return EventMonitor.EVENT_MONITOR.HBASE_WRITE_CNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getBizDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getMteeDispatchCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getPisaDispatchCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getSeventDealCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getDatahubWriteCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getHbaseWriteCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getBizDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getMteeDispatchCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getPisaDispatchCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getSeventDealCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getDatahubWriteCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getHbaseWriteCnt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value4(String value) {
        setBizDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value5(String value) {
        setEventCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value6(Double value) {
        setMteeDispatchCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value7(Integer value) {
        setPisaDispatchCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value8(Integer value) {
        setSeventDealCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value9(Integer value) {
        setDatahubWriteCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord value10(Integer value) {
        setHbaseWriteCnt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventMonitorRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, Double value6, Integer value7, Integer value8, Integer value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventMonitorRecord
     */
    public EventMonitorRecord() {
        super(EventMonitor.EVENT_MONITOR);
    }

    /**
     * Create a detached, initialised EventMonitorRecord
     */
    public EventMonitorRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String bizDate, String eventCode, Double mteeDispatchCnt, Integer pisaDispatchCnt, Integer seventDealCnt, Integer datahubWriteCnt, Integer hbaseWriteCnt) {
        super(EventMonitor.EVENT_MONITOR);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, bizDate);
        set(4, eventCode);
        set(5, mteeDispatchCnt);
        set(6, pisaDispatchCnt);
        set(7, seventDealCnt);
        set(8, datahubWriteCnt);
        set(9, hbaseWriteCnt);
    }
}
