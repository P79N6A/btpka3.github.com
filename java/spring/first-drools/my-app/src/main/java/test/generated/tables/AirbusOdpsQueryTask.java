/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.AirbusOdpsQueryTaskRecord;


/**
 * 查询odps表数据的task
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AirbusOdpsQueryTask extends TableImpl<AirbusOdpsQueryTaskRecord> {

    private static final long serialVersionUID = 391491977;

    /**
     * The reference instance of <code>SMETA_APP.airbus_odps_query_task</code>
     */
    public static final AirbusOdpsQueryTask AIRBUS_ODPS_QUERY_TASK = new AirbusOdpsQueryTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AirbusOdpsQueryTaskRecord> getRecordType() {
        return AirbusOdpsQueryTaskRecord.class;
    }

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.id</code>. 主键
     */
    public final TableField<AirbusOdpsQueryTaskRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.gmt_create</code>. 创建时间
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.gmt_modified</code>. 修改时间
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.sic_result_table</code>. 结果表名
     */
    public final TableField<AirbusOdpsQueryTaskRecord, String> SIC_RESULT_TABLE = createField("sic_result_table", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "结果表名");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.sic_result_table_partition</code>. 分区
     */
    public final TableField<AirbusOdpsQueryTaskRecord, String> SIC_RESULT_TABLE_PARTITION = createField("sic_result_table_partition", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "分区");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.record</code>. 总记录数
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Long> RECORD = createField("record", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "总记录数");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.read_start</code>. 读取记录的起始位置
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Long> READ_START = createField("read_start", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "读取记录的起始位置");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.read_count</code>. 读取记录的数量
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Long> READ_COUNT = createField("read_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "读取记录的数量");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.consumer_ip</code>. 数据消费服务器
     */
    public final TableField<AirbusOdpsQueryTaskRecord, String> CONSUMER_IP = createField("consumer_ip", org.jooq.impl.SQLDataType.VARCHAR(32), this, "数据消费服务器");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.consumer_start_time</code>. 消费开始时间
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Timestamp> CONSUMER_START_TIME = createField("consumer_start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "消费开始时间");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.consumer_end_time</code>. 消费结束时间
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Timestamp> CONSUMER_END_TIME = createField("consumer_end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "消费结束时间");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.consumer_status</code>. 消费状态
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Integer> CONSUMER_STATUS = createField("consumer_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "消费状态");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.consumer_version</code>. 消费版本
     */
    public final TableField<AirbusOdpsQueryTaskRecord, Integer> CONSUMER_VERSION = createField("consumer_version", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "消费版本");

    /**
     * The column <code>SMETA_APP.airbus_odps_query_task.job_release_id</code>. job release id. 只有未进行合并的task会记录
     */
    public final TableField<AirbusOdpsQueryTaskRecord, ULong> JOB_RELEASE_ID = createField("job_release_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "job release id. 只有未进行合并的task会记录");

    /**
     * Create a <code>SMETA_APP.airbus_odps_query_task</code> table reference
     */
    public AirbusOdpsQueryTask() {
        this(DSL.name("airbus_odps_query_task"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.airbus_odps_query_task</code> table reference
     */
    public AirbusOdpsQueryTask(String alias) {
        this(DSL.name(alias), AIRBUS_ODPS_QUERY_TASK);
    }

    /**
     * Create an aliased <code>SMETA_APP.airbus_odps_query_task</code> table reference
     */
    public AirbusOdpsQueryTask(Name alias) {
        this(alias, AIRBUS_ODPS_QUERY_TASK);
    }

    private AirbusOdpsQueryTask(Name alias, Table<AirbusOdpsQueryTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private AirbusOdpsQueryTask(Name alias, Table<AirbusOdpsQueryTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "查询odps表数据的task");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AIRBUS_ODPS_QUERY_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AirbusOdpsQueryTaskRecord, ULong> getIdentity() {
        return Keys.IDENTITY_AIRBUS_ODPS_QUERY_TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AirbusOdpsQueryTaskRecord> getPrimaryKey() {
        return Keys.KEY_AIRBUS_ODPS_QUERY_TASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AirbusOdpsQueryTaskRecord>> getKeys() {
        return Arrays.<UniqueKey<AirbusOdpsQueryTaskRecord>>asList(Keys.KEY_AIRBUS_ODPS_QUERY_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AirbusOdpsQueryTask as(String alias) {
        return new AirbusOdpsQueryTask(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AirbusOdpsQueryTask as(Name alias) {
        return new AirbusOdpsQueryTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AirbusOdpsQueryTask rename(String name) {
        return new AirbusOdpsQueryTask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AirbusOdpsQueryTask rename(Name name) {
        return new AirbusOdpsQueryTask(name, null);
    }
}
