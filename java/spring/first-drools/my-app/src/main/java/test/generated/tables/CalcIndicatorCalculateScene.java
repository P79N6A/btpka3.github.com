/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcIndicatorCalculateSceneRecord;


/**
 * 指标计算分析场景
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorCalculateScene extends TableImpl<CalcIndicatorCalculateSceneRecord> {

    private static final long serialVersionUID = 450525901;

    /**
     * The reference instance of <code>SMETA_APP.calc_indicator_calculate_scene</code>
     */
    public static final CalcIndicatorCalculateScene CALC_INDICATOR_CALCULATE_SCENE = new CalcIndicatorCalculateScene();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcIndicatorCalculateSceneRecord> getRecordType() {
        return CalcIndicatorCalculateSceneRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.id</code>. 主键
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.gmt_create</code>. 创建时间
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.created_by</code>. 创建人
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "创建人");

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.updated_by</code>. 修改人
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "修改人");

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.scene_name</code>. 分析场景名称
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, String> SCENE_NAME = createField("scene_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "分析场景名称");

    /**
     * The column <code>SMETA_APP.calc_indicator_calculate_scene.comment</code>. 分析说明
     */
    public final TableField<CalcIndicatorCalculateSceneRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB, this, "分析说明");

    /**
     * Create a <code>SMETA_APP.calc_indicator_calculate_scene</code> table reference
     */
    public CalcIndicatorCalculateScene() {
        this(DSL.name("calc_indicator_calculate_scene"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_calculate_scene</code> table reference
     */
    public CalcIndicatorCalculateScene(String alias) {
        this(DSL.name(alias), CALC_INDICATOR_CALCULATE_SCENE);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_calculate_scene</code> table reference
     */
    public CalcIndicatorCalculateScene(Name alias) {
        this(alias, CALC_INDICATOR_CALCULATE_SCENE);
    }

    private CalcIndicatorCalculateScene(Name alias, Table<CalcIndicatorCalculateSceneRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcIndicatorCalculateScene(Name alias, Table<CalcIndicatorCalculateSceneRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "指标计算分析场景");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_INDICATOR_CALCULATE_SCENE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcIndicatorCalculateSceneRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_INDICATOR_CALCULATE_SCENE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcIndicatorCalculateSceneRecord> getPrimaryKey() {
        return Keys.KEY_CALC_INDICATOR_CALCULATE_SCENE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcIndicatorCalculateSceneRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcIndicatorCalculateSceneRecord>>asList(Keys.KEY_CALC_INDICATOR_CALCULATE_SCENE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorCalculateScene as(String alias) {
        return new CalcIndicatorCalculateScene(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorCalculateScene as(Name alias) {
        return new CalcIndicatorCalculateScene(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorCalculateScene rename(String name) {
        return new CalcIndicatorCalculateScene(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorCalculateScene rename(Name name) {
        return new CalcIndicatorCalculateScene(name, null);
    }
}
