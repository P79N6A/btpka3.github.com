/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.RayPreheatJobRecord;


/**
 * 预热数据
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RayPreheatJob extends TableImpl<RayPreheatJobRecord> {

    private static final long serialVersionUID = 227027784;

    /**
     * The reference instance of <code>SMETA_APP.ray_preheat_job</code>
     */
    public static final RayPreheatJob RAY_PREHEAT_JOB = new RayPreheatJob();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RayPreheatJobRecord> getRecordType() {
        return RayPreheatJobRecord.class;
    }

    /**
     * The column <code>SMETA_APP.ray_preheat_job.id</code>. 主键
     */
    public final TableField<RayPreheatJobRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.gmt_create</code>. 创建时间
     */
    public final TableField<RayPreheatJobRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.gmt_modified</code>. 修改时间
     */
    public final TableField<RayPreheatJobRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.biz_id</code>. 创建者唯一标识id
     */
    public final TableField<RayPreheatJobRecord, String> BIZ_ID = createField("biz_id", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "创建者唯一标识id");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.nick_name</code>. 创建者花名
     */
    public final TableField<RayPreheatJobRecord, String> NICK_NAME = createField("nick_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "创建者花名");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.tenant_code</code>. 租户id
     */
    public final TableField<RayPreheatJobRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "租户id");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.title</code>. 分析名称
     */
    public final TableField<RayPreheatJobRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "分析名称");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.event_code</code>. 事件code
     */
    public final TableField<RayPreheatJobRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "事件code");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.event_name</code>. 事件名称
     */
    public final TableField<RayPreheatJobRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "事件名称");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.start_time</code>. 起始时间
     */
    public final TableField<RayPreheatJobRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "起始时间");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.end_time</code>. 结束时间
     */
    public final TableField<RayPreheatJobRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "结束时间");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.preheat_detail</code>. 取数详情json，包括所选的所有特征字段
     */
    public final TableField<RayPreheatJobRecord, String> PREHEAT_DETAIL = createField("preheat_detail", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "取数详情json，包括所选的所有特征字段");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.permission_detail</code>. 权限详情json
     */
    public final TableField<RayPreheatJobRecord, String> PERMISSION_DETAIL = createField("permission_detail", org.jooq.impl.SQLDataType.CLOB, this, "权限详情json");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.result_table</code>. 预热生成的临时表
     */
    public final TableField<RayPreheatJobRecord, String> RESULT_TABLE = createField("result_table", org.jooq.impl.SQLDataType.VARCHAR(100), this, "预热生成的临时表");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.sample_detail</code>. 样本库详情json
     */
    public final TableField<RayPreheatJobRecord, String> SAMPLE_DETAIL = createField("sample_detail", org.jooq.impl.SQLDataType.CLOB, this, "样本库详情json");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.status</code>. 预热状态
     */
    public final TableField<RayPreheatJobRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(15), this, "预热状态");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.task_id</code>. 预热任务id
     */
    public final TableField<RayPreheatJobRecord, ULong> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "预热任务id");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.task_detail</code>. 任务状态json，失败原因等
     */
    public final TableField<RayPreheatJobRecord, String> TASK_DETAIL = createField("task_detail", org.jooq.impl.SQLDataType.CLOB, this, "任务状态json，失败原因等");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.has_risk_column</code>. 预热字段中最高等级
     */
    public final TableField<RayPreheatJobRecord, Short> HAS_RISK_COLUMN = createField("has_risk_column", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.SMALLINT)), this, "预热字段中最高等级");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.column_map</code>. 提交的预热字段名称映射
     */
    public final TableField<RayPreheatJobRecord, String> COLUMN_MAP = createField("column_map", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "提交的预热字段名称映射");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.preheat_from</code>. 数据来源
     */
    public final TableField<RayPreheatJobRecord, String> PREHEAT_FROM = createField("preheat_from", org.jooq.impl.SQLDataType.VARCHAR(20), this, "数据来源");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.result_table_column</code>. 预热结果列名
     */
    public final TableField<RayPreheatJobRecord, String> RESULT_TABLE_COLUMN = createField("result_table_column", org.jooq.impl.SQLDataType.CLOB, this, "预热结果列名");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.max_column_level</code>. 预热字典最大风险等级
     */
    public final TableField<RayPreheatJobRecord, Short> MAX_COLUMN_LEVEL = createField("max_column_level", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.SMALLINT)), this, "预热字典最大风险等级");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.add_column_task_id</code>. 添加字段任务id, 默认为0,表示未添加字段
     */
    public final TableField<RayPreheatJobRecord, ULong> ADD_COLUMN_TASK_ID = createField("add_column_task_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "添加字段任务id, 默认为0,表示未添加字段");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.add_column_result_table</code>. 添加字段任务结果表
     */
    public final TableField<RayPreheatJobRecord, String> ADD_COLUMN_RESULT_TABLE = createField("add_column_result_table", org.jooq.impl.SQLDataType.VARCHAR(100), this, "添加字段任务结果表");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.add_column_status</code>. 添加字段任务状态
     */
    public final TableField<RayPreheatJobRecord, String> ADD_COLUMN_STATUS = createField("add_column_status", org.jooq.impl.SQLDataType.VARCHAR(15), this, "添加字段任务状态");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.add_column_config</code>. 添加字段配置信息
     */
    public final TableField<RayPreheatJobRecord, String> ADD_COLUMN_CONFIG = createField("add_column_config", org.jooq.impl.SQLDataType.CLOB, this, "添加字段配置信息");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.compare_analysis_config</code>. 对比分析配置信息
     */
    public final TableField<RayPreheatJobRecord, String> COMPARE_ANALYSIS_CONFIG = createField("compare_analysis_config", org.jooq.impl.SQLDataType.CLOB, this, "对比分析配置信息");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.compare_analysis_task</code>. 对比信息任务信息
     */
    public final TableField<RayPreheatJobRecord, String> COMPARE_ANALYSIS_TASK = createField("compare_analysis_task", org.jooq.impl.SQLDataType.VARCHAR(500), this, "对比信息任务信息");

    /**
     * The column <code>SMETA_APP.ray_preheat_job.import_info</code>. 导入信息
     */
    public final TableField<RayPreheatJobRecord, String> IMPORT_INFO = createField("import_info", org.jooq.impl.SQLDataType.CLOB, this, "导入信息");

    /**
     * Create a <code>SMETA_APP.ray_preheat_job</code> table reference
     */
    public RayPreheatJob() {
        this(DSL.name("ray_preheat_job"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.ray_preheat_job</code> table reference
     */
    public RayPreheatJob(String alias) {
        this(DSL.name(alias), RAY_PREHEAT_JOB);
    }

    /**
     * Create an aliased <code>SMETA_APP.ray_preheat_job</code> table reference
     */
    public RayPreheatJob(Name alias) {
        this(alias, RAY_PREHEAT_JOB);
    }

    private RayPreheatJob(Name alias, Table<RayPreheatJobRecord> aliased) {
        this(alias, aliased, null);
    }

    private RayPreheatJob(Name alias, Table<RayPreheatJobRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "预热数据");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RAY_PREHEAT_JOB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RayPreheatJobRecord, ULong> getIdentity() {
        return Keys.IDENTITY_RAY_PREHEAT_JOB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RayPreheatJobRecord> getPrimaryKey() {
        return Keys.KEY_RAY_PREHEAT_JOB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RayPreheatJobRecord>> getKeys() {
        return Arrays.<UniqueKey<RayPreheatJobRecord>>asList(Keys.KEY_RAY_PREHEAT_JOB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RayPreheatJob as(String alias) {
        return new RayPreheatJob(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RayPreheatJob as(Name alias) {
        return new RayPreheatJob(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RayPreheatJob rename(String name) {
        return new RayPreheatJob(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RayPreheatJob rename(Name name) {
        return new RayPreheatJob(name, null);
    }
}
