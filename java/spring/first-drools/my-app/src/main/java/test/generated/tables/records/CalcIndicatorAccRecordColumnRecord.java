/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.CalcIndicatorAccRecordColumn;


/**
 * 关联表字段信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorAccRecordColumnRecord extends UpdatableRecordImpl<CalcIndicatorAccRecordColumnRecord> implements Record19<ULong, Timestamp, Timestamp, String, String, String, Integer, ULong, ULong, String, String, ULong, String, String, Integer, String, String, String, String> {

    private static final long serialVersionUID = -633919514;

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.column_name</code>. 字段名称
     */
    public void setColumnName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.column_name</code>. 字段名称
     */
    public String getColumnName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.column_type</code>. 字段类型
     */
    public void setColumnType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.column_type</code>. 字段类型
     */
    public String getColumnType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.column_desc</code>. 字段描述
     */
    public void setColumnDesc(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.column_desc</code>. 字段描述
     */
    public String getColumnDesc() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.is_primary_key</code>. 0：非主键，1：主键
     */
    public void setIsPrimaryKey(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.is_primary_key</code>. 0：非主键，1：主键
     */
    public Integer getIsPrimaryKey() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.table_id</code>. table 表ID
     */
    public void setTableId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.table_id</code>. table 表ID
     */
    public ULong getTableId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.record_id</code>. acc_record关联ID
     */
    public void setRecordId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.record_id</code>. acc_record关联ID
     */
    public ULong getRecordId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.security_level</code>. 安全等级
     */
    public void setSecurityLevel(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.security_level</code>. 安全等级
     */
    public String getSecurityLevel() {
        return (String) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.table_name</code>. 表名称
     */
    public void setTableName(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.table_name</code>. 表名称
     */
    public String getTableName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.fk_column_id</code>. 关联外键ID
     */
    public void setFkColumnId(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.fk_column_id</code>. 关联外键ID
     */
    public ULong getFkColumnId() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.column_script</code>. 实时取数脚本
     */
    public void setColumnScript(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.column_script</code>. 实时取数脚本
     */
    public String getColumnScript() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.column_script_off</code>. 离线取数脚本
     */
    public void setColumnScriptOff(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.column_script_off</code>. 离线取数脚本
     */
    public String getColumnScriptOff() {
        return (String) get(13);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.completion_level</code>. 字段补全等级：1 上云全量补全；2 离线补全 join：离线指标，实体，名单；3 模拟计算：实时指标，离线函数脚本；4 在线补全：调vbs再补全。
     */
    public void setCompletionLevel(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.completion_level</code>. 字段补全等级：1 上云全量补全；2 离线补全 join：离线指标，实体，名单；3 模拟计算：实时指标，离线函数脚本；4 在线补全：调vbs再补全。
     */
    public Integer getCompletionLevel() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.offline_table</code>. 实体对应离线表
     */
    public void setOfflineTable(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.offline_table</code>. 实体对应离线表
     */
    public String getOfflineTable() {
        return (String) get(15);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.offline_table_column</code>. 实体对应离线表字段
     */
    public void setOfflineTableColumn(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.offline_table_column</code>. 实体对应离线表字段
     */
    public String getOfflineTableColumn() {
        return (String) get(16);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.offline_table_pk</code>. 实体对应离线表主键
     */
    public void setOfflineTablePk(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.offline_table_pk</code>. 实体对应离线表主键
     */
    public String getOfflineTablePk() {
        return (String) get(17);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_column.event_table_pk</code>. 补全实体入参，事件表字段
     */
    public void setEventTablePk(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_column.event_table_pk</code>. 补全实体入参，事件表字段
     */
    public String getEventTablePk() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<ULong, Timestamp, Timestamp, String, String, String, Integer, ULong, ULong, String, String, ULong, String, String, Integer, String, String, String, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<ULong, Timestamp, Timestamp, String, String, String, Integer, ULong, ULong, String, String, ULong, String, String, Integer, String, String, String, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.COLUMN_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.COLUMN_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.COLUMN_DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.IS_PRIMARY_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field8() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.TABLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field9() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.RECORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.SECURITY_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field12() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.FK_COLUMN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.COLUMN_SCRIPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.COLUMN_SCRIPT_OFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.COMPLETION_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.OFFLINE_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.OFFLINE_TABLE_COLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field18() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.OFFLINE_TABLE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN.EVENT_TABLE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getColumnName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getColumnType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getColumnDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getIsPrimaryKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component8() {
        return getTableId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component9() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getSecurityLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component12() {
        return getFkColumnId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getColumnScript();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getColumnScriptOff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getCompletionLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getOfflineTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getOfflineTableColumn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component18() {
        return getOfflineTablePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getEventTablePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getColumnName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getColumnType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getColumnDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getIsPrimaryKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value8() {
        return getTableId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value9() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getSecurityLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value12() {
        return getFkColumnId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getColumnScript();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getColumnScriptOff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getCompletionLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getOfflineTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getOfflineTableColumn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value18() {
        return getOfflineTablePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getEventTablePk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value4(String value) {
        setColumnName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value5(String value) {
        setColumnType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value6(String value) {
        setColumnDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value7(Integer value) {
        setIsPrimaryKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value8(ULong value) {
        setTableId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value9(ULong value) {
        setRecordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value10(String value) {
        setSecurityLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value11(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value12(ULong value) {
        setFkColumnId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value13(String value) {
        setColumnScript(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value14(String value) {
        setColumnScriptOff(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value15(Integer value) {
        setCompletionLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value16(String value) {
        setOfflineTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value17(String value) {
        setOfflineTableColumn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value18(String value) {
        setOfflineTablePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord value19(String value) {
        setEventTablePk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordColumnRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, Integer value7, ULong value8, ULong value9, String value10, String value11, ULong value12, String value13, String value14, Integer value15, String value16, String value17, String value18, String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalcIndicatorAccRecordColumnRecord
     */
    public CalcIndicatorAccRecordColumnRecord() {
        super(CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN);
    }

    /**
     * Create a detached, initialised CalcIndicatorAccRecordColumnRecord
     */
    public CalcIndicatorAccRecordColumnRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String columnName, String columnType, String columnDesc, Integer isPrimaryKey, ULong tableId, ULong recordId, String securityLevel, String tableName, ULong fkColumnId, String columnScript, String columnScriptOff, Integer completionLevel, String offlineTable, String offlineTableColumn, String offlineTablePk, String eventTablePk) {
        super(CalcIndicatorAccRecordColumn.CALC_INDICATOR_ACC_RECORD_COLUMN);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, columnName);
        set(4, columnType);
        set(5, columnDesc);
        set(6, isPrimaryKey);
        set(7, tableId);
        set(8, recordId);
        set(9, securityLevel);
        set(10, tableName);
        set(11, fkColumnId);
        set(12, columnScript);
        set(13, columnScriptOff);
        set(14, completionLevel);
        set(15, offlineTable);
        set(16, offlineTableColumn);
        set(17, offlineTablePk);
        set(18, eventTablePk);
    }
}
