/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.EventOdpsColumnHeat;


/**
 * 数据字典热度表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventOdpsColumnHeatRecord extends UpdatableRecordImpl<EventOdpsColumnHeatRecord> implements Record10<ULong, Timestamp, Timestamp, String, String, String, Double, Double, Double, String> {

    private static final long serialVersionUID = -327778987;

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.event_code</code>. 事件code
     */
    public void setEventCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.event_code</code>. 事件code
     */
    public String getEventCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.odps_table</code>. odps表名
     */
    public void setOdpsTable(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.odps_table</code>. odps表名
     */
    public String getOdpsTable() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.event_column_code</code>. 字段code
     */
    public void setEventColumnCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.event_column_code</code>. 字段code
     */
    public String getEventColumnCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.odps_column_rate</code>. 表字段查询频次，字段查询次数/表查询次数
     */
    public void setOdpsColumnRate(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.odps_column_rate</code>. 表字段查询频次，字段查询次数/表查询次数
     */
    public Double getOdpsColumnRate() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.mtee_column_rate</code>. 属性引用频次，属性被该事件规则引用次数/该事件规则数
     */
    public void setMteeColumnRate(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.mtee_column_rate</code>. 属性引用频次，属性被该事件规则引用次数/该事件规则数
     */
    public Double getMteeColumnRate() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.column_heat_rate</code>. 属性热度值
     */
    public void setColumnHeatRate(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.column_heat_rate</code>. 属性热度值
     */
    public Double getColumnHeatRate() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.event_odps_column_heat.is_risk_action_col</code>. 是否高危风险规则字段，1-是，0-不是
     */
    public void setIsRiskActionCol(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.event_odps_column_heat.is_risk_action_col</code>. 是否高危风险规则字段，1-是，0-不是
     */
    public String getIsRiskActionCol() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Timestamp, Timestamp, String, String, String, Double, Double, Double, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Timestamp, Timestamp, String, String, String, Double, Double, Double, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.EVENT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.ODPS_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.EVENT_COLUMN_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.ODPS_COLUMN_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.MTEE_COLUMN_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.COLUMN_HEAT_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT.IS_RISK_ACTION_COL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getOdpsTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getEventColumnCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getOdpsColumnRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getMteeColumnRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getColumnHeatRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getIsRiskActionCol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getOdpsTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getEventColumnCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getOdpsColumnRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getMteeColumnRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getColumnHeatRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getIsRiskActionCol();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value4(String value) {
        setEventCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value5(String value) {
        setOdpsTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value6(String value) {
        setEventColumnCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value7(Double value) {
        setOdpsColumnRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value8(Double value) {
        setMteeColumnRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value9(Double value) {
        setColumnHeatRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord value10(String value) {
        setIsRiskActionCol(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsColumnHeatRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, Double value7, Double value8, Double value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventOdpsColumnHeatRecord
     */
    public EventOdpsColumnHeatRecord() {
        super(EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT);
    }

    /**
     * Create a detached, initialised EventOdpsColumnHeatRecord
     */
    public EventOdpsColumnHeatRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String eventCode, String odpsTable, String eventColumnCode, Double odpsColumnRate, Double mteeColumnRate, Double columnHeatRate, String isRiskActionCol) {
        super(EventOdpsColumnHeat.EVENT_ODPS_COLUMN_HEAT);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, eventCode);
        set(4, odpsTable);
        set(5, eventColumnCode);
        set(6, odpsColumnRate);
        set(7, mteeColumnRate);
        set(8, columnHeatRate);
        set(9, isRiskActionCol);
    }
}
