/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.UfEventDictSampleData;


/**
 * 事件数据字典采样值
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfEventDictSampleDataRecord extends UpdatableRecordImpl<UfEventDictSampleDataRecord> implements Record8<ULong, Timestamp, Timestamp, String, String, String, ULong, String> {

    private static final long serialVersionUID = -272821886;

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.event_code</code>. 事件编码
     */
    public void setEventCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.event_code</code>. 事件编码
     */
    public String getEventCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.dict</code>. 数据字典
     */
    public void setDict(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.dict</code>. 数据字典
     */
    public String getDict() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.data</code>. 值
     */
    public void setData(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.data</code>. 值
     */
    public String getData() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.receive_time</code>. 时间戳
     */
    public void setReceiveTime(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.receive_time</code>. 时间戳
     */
    public ULong getReceiveTime() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.uf_event_dict_sample_data.trace_id</code>. TraceId
     */
    public void setTraceId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.uf_event_dict_sample_data.trace_id</code>. TraceId
     */
    public String getTraceId() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<ULong, Timestamp, Timestamp, String, String, String, ULong, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<ULong, Timestamp, Timestamp, String, String, String, ULong, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.EVENT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.DICT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field7() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.RECEIVE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA.TRACE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDict();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component7() {
        return getReceiveTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getTraceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDict();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value7() {
        return getReceiveTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getTraceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value4(String value) {
        setEventCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value5(String value) {
        setDict(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value6(String value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value7(ULong value) {
        setReceiveTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord value8(String value) {
        setTraceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfEventDictSampleDataRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, ULong value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UfEventDictSampleDataRecord
     */
    public UfEventDictSampleDataRecord() {
        super(UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA);
    }

    /**
     * Create a detached, initialised UfEventDictSampleDataRecord
     */
    public UfEventDictSampleDataRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String eventCode, String dict, String data, ULong receiveTime, String traceId) {
        super(UfEventDictSampleData.UF_EVENT_DICT_SAMPLE_DATA);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, eventCode);
        set(4, dict);
        set(5, data);
        set(6, receiveTime);
        set(7, traceId);
    }
}
