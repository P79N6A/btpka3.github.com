/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcIndicatorAccRecordIndiRecord;


/**
 * 事件取数关联指标信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorAccRecordIndi extends TableImpl<CalcIndicatorAccRecordIndiRecord> {

    private static final long serialVersionUID = -1619615647;

    /**
     * The reference instance of <code>SMETA_APP.calc_indicator_acc_record_indi</code>
     */
    public static final CalcIndicatorAccRecordIndi CALC_INDICATOR_ACC_RECORD_INDI = new CalcIndicatorAccRecordIndi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcIndicatorAccRecordIndiRecord> getRecordType() {
        return CalcIndicatorAccRecordIndiRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.id</code>. 主键
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.gmt_create</code>. 创建时间
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_type</code>. 指标类型（离线：eunomia，近线：eunomia_nl，实时：eunomia_rt）
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_TYPE = createField("indi_type", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "指标类型（离线：eunomia，近线：eunomia_nl，实时：eunomia_rt）");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_name</code>. 指标名称
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_NAME = createField("indi_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "指标名称");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.column_type</code>. 字段类型
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> COLUMN_TYPE = createField("column_type", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "字段类型");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.source_table</code>. 指标存储表名
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> SOURCE_TABLE = createField("source_table", org.jooq.impl.SQLDataType.VARCHAR(128), this, "指标存储表名");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.source_table_field</code>. 存储指标数据column名称
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> SOURCE_TABLE_FIELD = createField("source_table_field", org.jooq.impl.SQLDataType.VARCHAR(64), this, "存储指标数据column名称");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_sic_code</code>. sic 指标code
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_SIC_CODE = createField("indi_sic_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "sic 指标code");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_smc_code</code>. smc 指标code
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_SMC_CODE = createField("indi_smc_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "smc 指标code");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_fk_column_id_1</code>. 关联指标主键1: 格式：id$$$column_name$$$column_type$$$column_desc$$$tablename
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_FK_COLUMN_ID_1 = createField("indi_fk_column_id_1", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "关联指标主键1: 格式：id$$$column_name$$$column_type$$$column_desc$$$tablename");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_fk_column_id_2</code>. 关联指标主键2
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_FK_COLUMN_ID_2 = createField("indi_fk_column_id_2", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "关联指标主键2");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_fk_column_id_3</code>. 关联指标主键3
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_FK_COLUMN_ID_3 = createField("indi_fk_column_id_3", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "关联指标主键3");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_primary_keys</code>. 指标主键Code，多个用逗号分隔
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_PRIMARY_KEYS = createField("indi_primary_keys", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "指标主键Code，多个用逗号分隔");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.record_id</code>. acc_record关联ID
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, ULong> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "acc_record关联ID");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_primary_keys_desc</code>. 指标主键描述，多个用$$分隔
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_PRIMARY_KEYS_DESC = createField("indi_primary_keys_desc", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "指标主键描述，多个用$$分隔");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.near_line_indi_code</code>. 实时指标转为进线指标sic code
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> NEAR_LINE_INDI_CODE = createField("near_line_indi_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "实时指标转为进线指标sic code");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.event_name</code>. 事件名称
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "事件名称");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.event_code</code>. 事件code
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "事件code");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.time_window</code>. 事件窗口
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> TIME_WINDOW = createField("time_window", org.jooq.impl.SQLDataType.VARCHAR(32), this, "事件窗口");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.life_cycle</code>. 生命周期
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> LIFE_CYCLE = createField("life_cycle", org.jooq.impl.SQLDataType.VARCHAR(32), this, "生命周期");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.calculate_model</code>. 近线指标计算模式
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> CALCULATE_MODEL = createField("calculate_model", org.jooq.impl.SQLDataType.VARCHAR(32), this, "近线指标计算模式");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.calculate_cycle</code>. 计算周期：0按天，2按小时
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, Integer> CALCULATE_CYCLE = createField("calculate_cycle", org.jooq.impl.SQLDataType.INTEGER, this, "计算周期：0按天，2按小时");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.near_line_indi_pks</code>. 实时指标为进线指标对应指标主键
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> NEAR_LINE_INDI_PKS = createField("near_line_indi_pks", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "实时指标为进线指标对应指标主键");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.need_calc</code>. 是否需要计算
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, Byte> NEED_CALC = createField("need_calc", org.jooq.impl.SQLDataType.TINYINT, this, "是否需要计算");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.indi_event_primary_keys</code>. 指标主键对应事件字段，多个用逗号分隔
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, String> INDI_EVENT_PRIMARY_KEYS = createField("indi_event_primary_keys", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "指标主键对应事件字段，多个用逗号分隔");

    /**
     * The column <code>SMETA_APP.calc_indicator_acc_record_indi.source_table_days</code>. 关联数据时，分区往前减1、2天。离线表默认往前推一天
     */
    public final TableField<CalcIndicatorAccRecordIndiRecord, Integer> SOURCE_TABLE_DAYS = createField("source_table_days", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "关联数据时，分区往前减1、2天。离线表默认往前推一天");

    /**
     * Create a <code>SMETA_APP.calc_indicator_acc_record_indi</code> table reference
     */
    public CalcIndicatorAccRecordIndi() {
        this(DSL.name("calc_indicator_acc_record_indi"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_acc_record_indi</code> table reference
     */
    public CalcIndicatorAccRecordIndi(String alias) {
        this(DSL.name(alias), CALC_INDICATOR_ACC_RECORD_INDI);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_acc_record_indi</code> table reference
     */
    public CalcIndicatorAccRecordIndi(Name alias) {
        this(alias, CALC_INDICATOR_ACC_RECORD_INDI);
    }

    private CalcIndicatorAccRecordIndi(Name alias, Table<CalcIndicatorAccRecordIndiRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcIndicatorAccRecordIndi(Name alias, Table<CalcIndicatorAccRecordIndiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件取数关联指标信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_INDICATOR_ACC_RECORD_INDI_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcIndicatorAccRecordIndiRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_INDICATOR_ACC_RECORD_INDI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcIndicatorAccRecordIndiRecord> getPrimaryKey() {
        return Keys.KEY_CALC_INDICATOR_ACC_RECORD_INDI_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcIndicatorAccRecordIndiRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcIndicatorAccRecordIndiRecord>>asList(Keys.KEY_CALC_INDICATOR_ACC_RECORD_INDI_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordIndi as(String alias) {
        return new CalcIndicatorAccRecordIndi(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordIndi as(Name alias) {
        return new CalcIndicatorAccRecordIndi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorAccRecordIndi rename(String name) {
        return new CalcIndicatorAccRecordIndi(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorAccRecordIndi rename(Name name) {
        return new CalcIndicatorAccRecordIndi(name, null);
    }
}
