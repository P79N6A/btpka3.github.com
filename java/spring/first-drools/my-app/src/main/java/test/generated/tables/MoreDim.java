/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.MoreDimRecord;


/**
 * 近线引擎维表信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MoreDim extends TableImpl<MoreDimRecord> {

    private static final long serialVersionUID = 331058246;

    /**
     * The reference instance of <code>SMETA_APP.more_dim</code>
     */
    public static final MoreDim MORE_DIM = new MoreDim();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MoreDimRecord> getRecordType() {
        return MoreDimRecord.class;
    }

    /**
     * The column <code>SMETA_APP.more_dim.id</code>. 主键
     */
    public final TableField<MoreDimRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.more_dim.gmt_create</code>. 创建时间
     */
    public final TableField<MoreDimRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.more_dim.gmt_modified</code>. 修改时间
     */
    public final TableField<MoreDimRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.more_dim.operator_id</code>. 操作人id
     */
    public final TableField<MoreDimRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "操作人id");

    /**
     * The column <code>SMETA_APP.more_dim.operator</code>. 操作人
     */
    public final TableField<MoreDimRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作人");

    /**
     * The column <code>SMETA_APP.more_dim.name</code>. 维表名称-唯一
     */
    public final TableField<MoreDimRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "维表名称-唯一");

    /**
     * The column <code>SMETA_APP.more_dim.description</code>. 维表描述
     */
    public final TableField<MoreDimRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "维表描述");

    /**
     * The column <code>SMETA_APP.more_dim.db_type</code>. 维表的数据类型，alihbse
     */
    public final TableField<MoreDimRecord, String> DB_TYPE = createField("db_type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "维表的数据类型，alihbse");

    /**
     * The column <code>SMETA_APP.more_dim.db_parameter_info</code>. 维表的数据连接信息，json格式
     */
    public final TableField<MoreDimRecord, String> DB_PARAMETER_INFO = createField("db_parameter_info", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "维表的数据连接信息，json格式");

    /**
     * The column <code>SMETA_APP.more_dim.script</code>. 脚本，主要是创建表的脚本
     */
    public final TableField<MoreDimRecord, String> SCRIPT = createField("script", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "脚本，主要是创建表的脚本");

    /**
     * The column <code>SMETA_APP.more_dim.primary_keys</code>. 主键，多个用逗号分割
     */
    public final TableField<MoreDimRecord, String> PRIMARY_KEYS = createField("primary_keys", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "主键，多个用逗号分割");

    /**
     * The column <code>SMETA_APP.more_dim.join_keys</code>. 关联主键，多个用逗号分割
     */
    public final TableField<MoreDimRecord, String> JOIN_KEYS = createField("join_keys", org.jooq.impl.SQLDataType.VARCHAR(512), this, "关联主键，多个用逗号分割");

    /**
     * The column <code>SMETA_APP.more_dim.from_type</code>. 来源类型，user-用户自定义，sys-系统定义
     */
    public final TableField<MoreDimRecord, String> FROM_TYPE = createField("from_type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "来源类型，user-用户自定义，sys-系统定义");

    /**
     * The column <code>SMETA_APP.more_dim.data_overwrite_type</code>. 数据写入方式，replace-按主键覆盖历史数据，默认方式，merge-相同主键插入同一行，
     */
    public final TableField<MoreDimRecord, String> DATA_OVERWRITE_TYPE = createField("data_overwrite_type", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "数据写入方式，replace-按主键覆盖历史数据，默认方式，merge-相同主键插入同一行，");

    /**
     * The column <code>SMETA_APP.more_dim.status</code>. 状态 0-草稿，1-发布,-1-删除
     */
    public final TableField<MoreDimRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "状态 0-草稿，1-发布,-1-删除");

    /**
     * The column <code>SMETA_APP.more_dim.lifecycle</code>. 生命周期
     */
    public final TableField<MoreDimRecord, Integer> LIFECYCLE = createField("lifecycle", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("365", org.jooq.impl.SQLDataType.INTEGER)), this, "生命周期");

    /**
     * The column <code>SMETA_APP.more_dim.lifecycle_unit</code>. 生命周期，d-天，h-小时
     */
    public final TableField<MoreDimRecord, String> LIFECYCLE_UNIT = createField("lifecycle_unit", org.jooq.impl.SQLDataType.VARCHAR(8).defaultValue(org.jooq.impl.DSL.inline("d", org.jooq.impl.SQLDataType.VARCHAR)), this, "生命周期，d-天，h-小时");

    /**
     * The column <code>SMETA_APP.more_dim.name_test</code>. 对应的测试维表的名称
     */
    public final TableField<MoreDimRecord, String> NAME_TEST = createField("name_test", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "对应的测试维表的名称");

    /**
     * Create a <code>SMETA_APP.more_dim</code> table reference
     */
    public MoreDim() {
        this(DSL.name("more_dim"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.more_dim</code> table reference
     */
    public MoreDim(String alias) {
        this(DSL.name(alias), MORE_DIM);
    }

    /**
     * Create an aliased <code>SMETA_APP.more_dim</code> table reference
     */
    public MoreDim(Name alias) {
        this(alias, MORE_DIM);
    }

    private MoreDim(Name alias, Table<MoreDimRecord> aliased) {
        this(alias, aliased, null);
    }

    private MoreDim(Name alias, Table<MoreDimRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "近线引擎维表信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MORE_DIM_IDX_NAME_DBTYPE, Indexes.MORE_DIM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MoreDimRecord, ULong> getIdentity() {
        return Keys.IDENTITY_MORE_DIM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MoreDimRecord> getPrimaryKey() {
        return Keys.KEY_MORE_DIM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MoreDimRecord>> getKeys() {
        return Arrays.<UniqueKey<MoreDimRecord>>asList(Keys.KEY_MORE_DIM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MoreDim as(String alias) {
        return new MoreDim(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MoreDim as(Name alias) {
        return new MoreDim(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MoreDim rename(String name) {
        return new MoreDim(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MoreDim rename(Name name) {
        return new MoreDim(name, null);
    }
}
