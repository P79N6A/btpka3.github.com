/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfClusterRecord;


/**
 * MTee3集群表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfCluster extends TableImpl<UfClusterRecord> {

    private static final long serialVersionUID = 2132300781;

    /**
     * The reference instance of <code>SMETA_APP.uf_cluster</code>
     */
    public static final UfCluster UF_CLUSTER = new UfCluster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfClusterRecord> getRecordType() {
        return UfClusterRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_cluster.id</code>. 主键
     */
    public final TableField<UfClusterRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_cluster.gmt_create</code>. 创建时间
     */
    public final TableField<UfClusterRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_cluster.gmt_modified</code>. 修改时间
     */
    public final TableField<UfClusterRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_cluster.cluster_name</code>. 构建akka集群的标识
     */
    public final TableField<UfClusterRecord, String> CLUSTER_NAME = createField("cluster_name", org.jooq.impl.SQLDataType.VARCHAR(256), this, "构建akka集群的标识");

    /**
     * The column <code>SMETA_APP.uf_cluster.event_type</code>. 事件类型:同步、异步、混合
     */
    public final TableField<UfClusterRecord, String> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.VARCHAR(256), this, "事件类型:同步、异步、混合");

    /**
     * The column <code>SMETA_APP.uf_cluster.node_groups</code>. 节点分组列表
     */
    public final TableField<UfClusterRecord, String> NODE_GROUPS = createField("node_groups", org.jooq.impl.SQLDataType.VARCHAR(2048), this, "节点分组列表");

    /**
     * The column <code>SMETA_APP.uf_cluster.tenant_codes</code>. 租户code列表
     */
    public final TableField<UfClusterRecord, String> TENANT_CODES = createField("tenant_codes", org.jooq.impl.SQLDataType.VARCHAR(2048), this, "租户code列表");

    /**
     * The column <code>SMETA_APP.uf_cluster.armory_group</code>. armory所在分组，当指定运行机器时需指定分组名
     */
    public final TableField<UfClusterRecord, String> ARMORY_GROUP = createField("armory_group", org.jooq.impl.SQLDataType.VARCHAR(256), this, "armory所在分组，当指定运行机器时需指定分组名");

    /**
     * The column <code>SMETA_APP.uf_cluster.last_operator</code>. 最近的操作人
     */
    public final TableField<UfClusterRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "最近的操作人");

    /**
     * The column <code>SMETA_APP.uf_cluster.cluster_title</code>. 集群名称
     */
    public final TableField<UfClusterRecord, String> CLUSTER_TITLE = createField("cluster_title", org.jooq.impl.SQLDataType.VARCHAR(256), this, "集群名称");

    /**
     * The column <code>SMETA_APP.uf_cluster.specified_nodes</code>. 指定机器列表
     */
    public final TableField<UfClusterRecord, String> SPECIFIED_NODES = createField("specified_nodes", org.jooq.impl.SQLDataType.VARCHAR(10000), this, "指定机器列表");

    /**
     * Create a <code>SMETA_APP.uf_cluster</code> table reference
     */
    public UfCluster() {
        this(DSL.name("uf_cluster"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_cluster</code> table reference
     */
    public UfCluster(String alias) {
        this(DSL.name(alias), UF_CLUSTER);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_cluster</code> table reference
     */
    public UfCluster(Name alias) {
        this(alias, UF_CLUSTER);
    }

    private UfCluster(Name alias, Table<UfClusterRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfCluster(Name alias, Table<UfClusterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "MTee3集群表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_CLUSTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfClusterRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_CLUSTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfClusterRecord> getPrimaryKey() {
        return Keys.KEY_UF_CLUSTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfClusterRecord>> getKeys() {
        return Arrays.<UniqueKey<UfClusterRecord>>asList(Keys.KEY_UF_CLUSTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfCluster as(String alias) {
        return new UfCluster(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfCluster as(Name alias) {
        return new UfCluster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfCluster rename(String name) {
        return new UfCluster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfCluster rename(Name name) {
        return new UfCluster(name, null);
    }
}
