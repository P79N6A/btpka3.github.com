/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DqcCheckResultRecord;


/**
 * sevent的dqc校验结果表（同步adl_smeta_event_dqc_resu
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DqcCheckResult extends TableImpl<DqcCheckResultRecord> {

    private static final long serialVersionUID = -2097333201;

    /**
     * The reference instance of <code>SMETA_APP.dqc_check_result</code>
     */
    public static final DqcCheckResult DQC_CHECK_RESULT = new DqcCheckResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DqcCheckResultRecord> getRecordType() {
        return DqcCheckResultRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dqc_check_result.id</code>. 主键
     */
    public final TableField<DqcCheckResultRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dqc_check_result.gmt_create</code>. 创建时间
     */
    public final TableField<DqcCheckResultRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dqc_check_result.gmt_modified</code>. 修改时间
     */
    public final TableField<DqcCheckResultRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dqc_check_result.rule_id</code>. 规则ID
     */
    public final TableField<DqcCheckResultRecord, String> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "规则ID");

    /**
     * The column <code>SMETA_APP.dqc_check_result.table_name</code>. 表名
     */
    public final TableField<DqcCheckResultRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "表名");

    /**
     * The column <code>SMETA_APP.dqc_check_result.match_expression</code>. 所属分区表达式
     */
    public final TableField<DqcCheckResultRecord, String> MATCH_EXPRESSION = createField("match_expression", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "所属分区表达式");

    /**
     * The column <code>SMETA_APP.dqc_check_result.actual_expression</code>. 当前校验规则的实际分区
     */
    public final TableField<DqcCheckResultRecord, String> ACTUAL_EXPRESSION = createField("actual_expression", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "当前校验规则的实际分区");

    /**
     * The column <code>SMETA_APP.dqc_check_result.check_cycle</code>. 校验周期，1d，15mi
     */
    public final TableField<DqcCheckResultRecord, String> CHECK_CYCLE = createField("check_cycle", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "校验周期，1d，15mi");

    /**
     * The column <code>SMETA_APP.dqc_check_result.property</code>. 表的字段名，如果是字段级别的规则就是其字段，表级规则则是table_count或者是模板的名称
     */
    public final TableField<DqcCheckResultRecord, String> PROPERTY = createField("property", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "表的字段名，如果是字段级别的规则就是其字段，表级规则则是table_count或者是模板的名称");

    /**
     * The column <code>SMETA_APP.dqc_check_result.template_name</code>. 模板名称，如果是property=table_count，则值为：与固定值比较
     */
    public final TableField<DqcCheckResultRecord, String> TEMPLATE_NAME = createField("template_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "模板名称，如果是property=table_count，则值为：与固定值比较");

    /**
     * The column <code>SMETA_APP.dqc_check_result.check_result</code>. 校验结果0-正常，1触发橙色告警，2触发红色告警
     */
    public final TableField<DqcCheckResultRecord, Long> CHECK_RESULT = createField("check_result", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "校验结果0-正常，1触发橙色告警，2触发红色告警");

    /**
     * The column <code>SMETA_APP.dqc_check_result.sample_result</code>. 当次采样数据
     */
    public final TableField<DqcCheckResultRecord, String> SAMPLE_RESULT = createField("sample_result", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "当次采样数据");

    /**
     * The column <code>SMETA_APP.dqc_check_result.operator</code>. 操作符
     */
    public final TableField<DqcCheckResultRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "操作符");

    /**
     * The column <code>SMETA_APP.dqc_check_result.expected_value</code>. 期望值
     */
    public final TableField<DqcCheckResultRecord, String> EXPECTED_VALUE = createField("expected_value", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "期望值");

    /**
     * The column <code>SMETA_APP.dqc_check_result.gmt_rule_create</code>. 规则创建时间
     */
    public final TableField<DqcCheckResultRecord, Timestamp> GMT_RULE_CREATE = createField("gmt_rule_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "规则创建时间");

    /**
     * The column <code>SMETA_APP.dqc_check_result.gmt_rule_modify</code>. 规则最后修改时间
     */
    public final TableField<DqcCheckResultRecord, Timestamp> GMT_RULE_MODIFY = createField("gmt_rule_modify", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "规则最后修改时间");

    /**
     * The column <code>SMETA_APP.dqc_check_result.on_duty</code>. 责任人工号
     */
    public final TableField<DqcCheckResultRecord, String> ON_DUTY = createField("on_duty", org.jooq.impl.SQLDataType.VARCHAR(10), this, "责任人工号");

    /**
     * Create a <code>SMETA_APP.dqc_check_result</code> table reference
     */
    public DqcCheckResult() {
        this(DSL.name("dqc_check_result"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_check_result</code> table reference
     */
    public DqcCheckResult(String alias) {
        this(DSL.name(alias), DQC_CHECK_RESULT);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_check_result</code> table reference
     */
    public DqcCheckResult(Name alias) {
        this(alias, DQC_CHECK_RESULT);
    }

    private DqcCheckResult(Name alias, Table<DqcCheckResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private DqcCheckResult(Name alias, Table<DqcCheckResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "sevent的dqc校验结果表（同步adl_smeta_event_dqc_resu");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DQC_CHECK_RESULT_IDX_ACTUAL_EXPRESSION, Indexes.DQC_CHECK_RESULT_IDX_TABLE_NAME, Indexes.DQC_CHECK_RESULT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DqcCheckResultRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DQC_CHECK_RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DqcCheckResultRecord> getPrimaryKey() {
        return Keys.KEY_DQC_CHECK_RESULT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DqcCheckResultRecord>> getKeys() {
        return Arrays.<UniqueKey<DqcCheckResultRecord>>asList(Keys.KEY_DQC_CHECK_RESULT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcCheckResult as(String alias) {
        return new DqcCheckResult(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcCheckResult as(Name alias) {
        return new DqcCheckResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcCheckResult rename(String name) {
        return new DqcCheckResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcCheckResult rename(Name name) {
        return new DqcCheckResult(name, null);
    }
}
