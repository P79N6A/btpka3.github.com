/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.StrategyVersionRecord;


/**
 * 操作日志
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrategyVersion extends TableImpl<StrategyVersionRecord> {

    private static final long serialVersionUID = -1970526605;

    /**
     * The reference instance of <code>SMETA_APP.strategy_version</code>
     */
    public static final StrategyVersion STRATEGY_VERSION = new StrategyVersion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StrategyVersionRecord> getRecordType() {
        return StrategyVersionRecord.class;
    }

    /**
     * The column <code>SMETA_APP.strategy_version.id</code>. 主键
     */
    public final TableField<StrategyVersionRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.strategy_version.gmt_create</code>. 创建时间
     */
    public final TableField<StrategyVersionRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>SMETA_APP.strategy_version.gmt_modified</code>. 修改时间
     */
    public final TableField<StrategyVersionRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>SMETA_APP.strategy_version.modifier</code>. 修改人

     */
    public final TableField<StrategyVersionRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR(32), this, "修改人\n");

    /**
     * The column <code>SMETA_APP.strategy_version.creator</code>. 创建人
     */
    public final TableField<StrategyVersionRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(32), this, "创建人");

    /**
     * The column <code>SMETA_APP.strategy_version.strategy_content</code>. 策略状态内容

     */
    public final TableField<StrategyVersionRecord, String> STRATEGY_CONTENT = createField("strategy_content", org.jooq.impl.SQLDataType.CLOB, this, "策略状态内容\n");

    /**
     * The column <code>SMETA_APP.strategy_version.is_success</code>. 是否推送成功

     */
    public final TableField<StrategyVersionRecord, Byte> IS_SUCCESS = createField("is_success", org.jooq.impl.SQLDataType.TINYINT, this, "是否推送成功\n");

    /**
     * The column <code>SMETA_APP.strategy_version.transfer_reason</code>. 状态转换原因
     */
    public final TableField<StrategyVersionRecord, String> TRANSFER_REASON = createField("transfer_reason", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "状态转换原因");

    /**
     * The column <code>SMETA_APP.strategy_version.type</code>. 天平类型
     */
    public final TableField<StrategyVersionRecord, ULong> TYPE = createField("type", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "天平类型");

    /**
     * The column <code>SMETA_APP.strategy_version.strategy_value</code>. 策略影响值
     */
    public final TableField<StrategyVersionRecord, String> STRATEGY_VALUE = createField("strategy_value", org.jooq.impl.SQLDataType.CLOB, this, "策略影响值");

    /**
     * The column <code>SMETA_APP.strategy_version.name</code>. 天平名称
     */
    public final TableField<StrategyVersionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.inline("themis", org.jooq.impl.SQLDataType.VARCHAR)), this, "天平名称");

    /**
     * The column <code>SMETA_APP.strategy_version.trigger_condition</code>. 触发原因
     */
    public final TableField<StrategyVersionRecord, String> TRIGGER_CONDITION = createField("trigger_condition", org.jooq.impl.SQLDataType.VARCHAR(512), this, "触发原因");

    /**
     * Create a <code>SMETA_APP.strategy_version</code> table reference
     */
    public StrategyVersion() {
        this(DSL.name("strategy_version"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.strategy_version</code> table reference
     */
    public StrategyVersion(String alias) {
        this(DSL.name(alias), STRATEGY_VERSION);
    }

    /**
     * Create an aliased <code>SMETA_APP.strategy_version</code> table reference
     */
    public StrategyVersion(Name alias) {
        this(alias, STRATEGY_VERSION);
    }

    private StrategyVersion(Name alias, Table<StrategyVersionRecord> aliased) {
        this(alias, aliased, null);
    }

    private StrategyVersion(Name alias, Table<StrategyVersionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "操作日志");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STRATEGY_VERSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StrategyVersionRecord, ULong> getIdentity() {
        return Keys.IDENTITY_STRATEGY_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StrategyVersionRecord> getPrimaryKey() {
        return Keys.KEY_STRATEGY_VERSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StrategyVersionRecord>> getKeys() {
        return Arrays.<UniqueKey<StrategyVersionRecord>>asList(Keys.KEY_STRATEGY_VERSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategyVersion as(String alias) {
        return new StrategyVersion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategyVersion as(Name alias) {
        return new StrategyVersion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StrategyVersion rename(String name) {
        return new StrategyVersion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StrategyVersion rename(Name name) {
        return new StrategyVersion(name, null);
    }
}
