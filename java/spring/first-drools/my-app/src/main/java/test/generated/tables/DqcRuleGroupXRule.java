/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DqcRuleGroupXRuleRecord;


/**
 * 规则分组和规则映射表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DqcRuleGroupXRule extends TableImpl<DqcRuleGroupXRuleRecord> {

    private static final long serialVersionUID = 1552250276;

    /**
     * The reference instance of <code>SMETA_APP.dqc_rule_group_x_rule</code>
     */
    public static final DqcRuleGroupXRule DQC_RULE_GROUP_X_RULE = new DqcRuleGroupXRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DqcRuleGroupXRuleRecord> getRecordType() {
        return DqcRuleGroupXRuleRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.id</code>. 主键
     */
    public final TableField<DqcRuleGroupXRuleRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.gmt_create</code>. 创建时间
     */
    public final TableField<DqcRuleGroupXRuleRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.gmt_modified</code>. 修改时间
     */
    public final TableField<DqcRuleGroupXRuleRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.group_code</code>. 规则分组code
     */
    public final TableField<DqcRuleGroupXRuleRecord, String> GROUP_CODE = createField("group_code", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "规则分组code");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.status</code>. 状态，1-有效，0-无效
     */
    public final TableField<DqcRuleGroupXRuleRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，1-有效，0-无效");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.last_operator</code>. 最后操作人
     */
    public final TableField<DqcRuleGroupXRuleRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "最后操作人");

    /**
     * The column <code>SMETA_APP.dqc_rule_group_x_rule.rule_name</code>. 规则名称
     */
    public final TableField<DqcRuleGroupXRuleRecord, String> RULE_NAME = createField("rule_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "规则名称");

    /**
     * Create a <code>SMETA_APP.dqc_rule_group_x_rule</code> table reference
     */
    public DqcRuleGroupXRule() {
        this(DSL.name("dqc_rule_group_x_rule"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_rule_group_x_rule</code> table reference
     */
    public DqcRuleGroupXRule(String alias) {
        this(DSL.name(alias), DQC_RULE_GROUP_X_RULE);
    }

    /**
     * Create an aliased <code>SMETA_APP.dqc_rule_group_x_rule</code> table reference
     */
    public DqcRuleGroupXRule(Name alias) {
        this(alias, DQC_RULE_GROUP_X_RULE);
    }

    private DqcRuleGroupXRule(Name alias, Table<DqcRuleGroupXRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private DqcRuleGroupXRule(Name alias, Table<DqcRuleGroupXRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "规则分组和规则映射表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DQC_RULE_GROUP_X_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DqcRuleGroupXRuleRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DQC_RULE_GROUP_X_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DqcRuleGroupXRuleRecord> getPrimaryKey() {
        return Keys.KEY_DQC_RULE_GROUP_X_RULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DqcRuleGroupXRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<DqcRuleGroupXRuleRecord>>asList(Keys.KEY_DQC_RULE_GROUP_X_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcRuleGroupXRule as(String alias) {
        return new DqcRuleGroupXRule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DqcRuleGroupXRule as(Name alias) {
        return new DqcRuleGroupXRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcRuleGroupXRule rename(String name) {
        return new DqcRuleGroupXRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DqcRuleGroupXRule rename(Name name) {
        return new DqcRuleGroupXRule(name, null);
    }
}
