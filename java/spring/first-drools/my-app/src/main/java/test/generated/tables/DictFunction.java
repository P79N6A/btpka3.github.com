/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DictFunctionRecord;


/**
 * mtee函数信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictFunction extends TableImpl<DictFunctionRecord> {

    private static final long serialVersionUID = -445999634;

    /**
     * The reference instance of <code>SMETA_APP.dict_function</code>
     */
    public static final DictFunction DICT_FUNCTION = new DictFunction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictFunctionRecord> getRecordType() {
        return DictFunctionRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dict_function.id</code>. 主键
     */
    public final TableField<DictFunctionRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dict_function.gmt_create</code>. 创建时间
     */
    public final TableField<DictFunctionRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dict_function.gmt_modified</code>. 修改时间
     */
    public final TableField<DictFunctionRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dict_function.name</code>. 函数名称
     */
    public final TableField<DictFunctionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "函数名称");

    /**
     * The column <code>SMETA_APP.dict_function.status</code>. 状态，0删除1有效
     */
    public final TableField<DictFunctionRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "状态，0删除1有效");

    /**
     * The column <code>SMETA_APP.dict_function.is_complete_by_default</code>. 数据上云时该函数对应的数据字典默认是否补全，1是0否
     */
    public final TableField<DictFunctionRecord, Byte> IS_COMPLETE_BY_DEFAULT = createField("is_complete_by_default", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "数据上云时该函数对应的数据字典默认是否补全，1是0否");

    /**
     * The column <code>SMETA_APP.dict_function.description</code>. 函数描述
     */
    public final TableField<DictFunctionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "函数描述");

    /**
     * Create a <code>SMETA_APP.dict_function</code> table reference
     */
    public DictFunction() {
        this(DSL.name("dict_function"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_function</code> table reference
     */
    public DictFunction(String alias) {
        this(DSL.name(alias), DICT_FUNCTION);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_function</code> table reference
     */
    public DictFunction(Name alias) {
        this(alias, DICT_FUNCTION);
    }

    private DictFunction(Name alias, Table<DictFunctionRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictFunction(Name alias, Table<DictFunctionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "mtee函数信息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DICT_FUNCTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictFunctionRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DICT_FUNCTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictFunctionRecord> getPrimaryKey() {
        return Keys.KEY_DICT_FUNCTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictFunctionRecord>> getKeys() {
        return Arrays.<UniqueKey<DictFunctionRecord>>asList(Keys.KEY_DICT_FUNCTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictFunction as(String alias) {
        return new DictFunction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictFunction as(Name alias) {
        return new DictFunction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictFunction rename(String name) {
        return new DictFunction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DictFunction rename(Name name) {
        return new DictFunction(name, null);
    }
}
