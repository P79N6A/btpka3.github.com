/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfDailyRiskRecord;


/**
 * 日常风险表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfDailyRisk extends TableImpl<UfDailyRiskRecord> {

    private static final long serialVersionUID = -1785407149;

    /**
     * The reference instance of <code>SMETA_APP.uf_daily_risk</code>
     */
    public static final UfDailyRisk UF_DAILY_RISK = new UfDailyRisk();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfDailyRiskRecord> getRecordType() {
        return UfDailyRiskRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_daily_risk.id</code>. 主键
     */
    public final TableField<UfDailyRiskRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.gmt_create</code>. 创建时间
     */
    public final TableField<UfDailyRiskRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.gmt_modified</code>. 修改时间
     */
    public final TableField<UfDailyRiskRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.creator</code>. 创建人UserId
     */
    public final TableField<UfDailyRiskRecord, ULong> CREATOR = createField("creator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "创建人UserId");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.last_operator</code>. 最后修改人UserId
     */
    public final TableField<UfDailyRiskRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "最后修改人UserId");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.tenant_code</code>. 租户code
     */
    public final TableField<UfDailyRiskRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "租户code");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.risk_domain_id</code>. 风险域ID。关联 risk_tag
     */
    public final TableField<UfDailyRiskRecord, ULong> RISK_DOMAIN_ID = createField("risk_domain_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "风险域ID。关联 risk_tag");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.risk_src_id</code>. 风险来源ID。关联 risk_tag
     */
    public final TableField<UfDailyRiskRecord, ULong> RISK_SRC_ID = createField("risk_src_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "风险来源ID。关联 risk_tag");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.risk_level</code>. 风险等级。 1-E1, 2-E2, 3-E3, 4-E4
     */
    public final TableField<UfDailyRiskRecord, Short> RISK_LEVEL = createField("risk_level", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "风险等级。 1-E1, 2-E2, 3-E3, 4-E4");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.title</code>. 标题
     */
    public final TableField<UfDailyRiskRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "标题");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.desp</code>. 描述
     */
    public final TableField<UfDailyRiskRecord, String> DESP = createField("desp", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "描述");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.action_ids</code>. 处理动作列表，逗号分隔，有先后顺序。
     */
    public final TableField<UfDailyRiskRecord, String> ACTION_IDS = createField("action_ids", org.jooq.impl.SQLDataType.VARCHAR(512), this, "处理动作列表，逗号分隔，有先后顺序。");

    /**
     * The column <code>SMETA_APP.uf_daily_risk.cc_user_ids</code>. 抄送人员ID列表，逗号分隔
     */
    public final TableField<UfDailyRiskRecord, String> CC_USER_IDS = createField("cc_user_ids", org.jooq.impl.SQLDataType.VARCHAR(512), this, "抄送人员ID列表，逗号分隔");

    /**
     * Create a <code>SMETA_APP.uf_daily_risk</code> table reference
     */
    public UfDailyRisk() {
        this(DSL.name("uf_daily_risk"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_daily_risk</code> table reference
     */
    public UfDailyRisk(String alias) {
        this(DSL.name(alias), UF_DAILY_RISK);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_daily_risk</code> table reference
     */
    public UfDailyRisk(Name alias) {
        this(alias, UF_DAILY_RISK);
    }

    private UfDailyRisk(Name alias, Table<UfDailyRiskRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfDailyRisk(Name alias, Table<UfDailyRiskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "日常风险表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_DAILY_RISK_IDX_ACTION_IDS, Indexes.UF_DAILY_RISK_IDX_RISK_DOMAIN_ID, Indexes.UF_DAILY_RISK_IDX_RISK_SRC_ID, Indexes.UF_DAILY_RISK_IDX_TENANT_CODE, Indexes.UF_DAILY_RISK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfDailyRiskRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_DAILY_RISK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfDailyRiskRecord> getPrimaryKey() {
        return Keys.KEY_UF_DAILY_RISK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfDailyRiskRecord>> getKeys() {
        return Arrays.<UniqueKey<UfDailyRiskRecord>>asList(Keys.KEY_UF_DAILY_RISK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfDailyRisk as(String alias) {
        return new UfDailyRisk(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfDailyRisk as(Name alias) {
        return new UfDailyRisk(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfDailyRisk rename(String name) {
        return new UfDailyRisk(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfDailyRisk rename(Name name) {
        return new UfDailyRisk(name, null);
    }
}
