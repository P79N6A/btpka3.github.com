/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcIndicatorRecommendRecord;


/**
 * 特征推荐计算任务
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorRecommend extends TableImpl<CalcIndicatorRecommendRecord> {

    private static final long serialVersionUID = -1719753090;

    /**
     * The reference instance of <code>SMETA_APP.calc_indicator_recommend</code>
     */
    public static final CalcIndicatorRecommend CALC_INDICATOR_RECOMMEND = new CalcIndicatorRecommend();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcIndicatorRecommendRecord> getRecordType() {
        return CalcIndicatorRecommendRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.id</code>. 主键
     */
    public final TableField<CalcIndicatorRecommendRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.gmt_create</code>. 创建时间
     */
    public final TableField<CalcIndicatorRecommendRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcIndicatorRecommendRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.created_by</code>. 创建人
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "创建人");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.updated_by</code>. 修改人
     */
    public final TableField<CalcIndicatorRecommendRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "修改人");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.sample_table</code>. 样本表
     */
    public final TableField<CalcIndicatorRecommendRecord, String> SAMPLE_TABLE = createField("sample_table", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "样本表");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.sample_key</code>. 样本关联字段
     */
    public final TableField<CalcIndicatorRecommendRecord, String> SAMPLE_KEY = createField("sample_key", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "样本关联字段");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_start_time</code>. 计算开始时间
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CALC_START_TIME = createField("calc_start_time", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "计算开始时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_end_time</code>. 计算结束时间
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CALC_END_TIME = createField("calc_end_time", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "计算结束时间");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.link_name</code>. 风险/链路等名称，多个用逗号分隔
     */
    public final TableField<CalcIndicatorRecommendRecord, String> LINK_NAME = createField("link_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "风险/链路等名称，多个用逗号分隔");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.result_table</code>. 特征推荐结果表
     */
    public final TableField<CalcIndicatorRecommendRecord, String> RESULT_TABLE = createField("result_table", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "特征推荐结果表");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_sql</code>. 计算任务脚本
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CALC_SQL = createField("calc_sql", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "计算任务脚本");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_node_id</code>. 计算任务节点ID
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CALC_NODE_ID = createField("calc_node_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "计算任务节点ID");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_task_id</code>. 任务实例ID
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CALC_TASK_ID = createField("calc_task_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "任务实例ID");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_status</code>. 计算任务状态： 1: "未运行",2: "等待时间", 3: "等待资源",4: "运行中",5: "运行失败",6: "运行成功"
     */
    public final TableField<CalcIndicatorRecommendRecord, Integer> CALC_STATUS = createField("calc_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "计算任务状态： 1: \"未运行\",2: \"等待时间\", 3: \"等待资源\",4: \"运行中\",5: \"运行失败\",6: \"运行成功\"");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.link_code</code>. (废弃)链路code
     */
    public final TableField<CalcIndicatorRecommendRecord, String> LINK_CODE = createField("link_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "(废弃)链路code");

    /**
     * The column <code>SMETA_APP.calc_indicator_recommend.calc_code</code>. 计算编码
     */
    public final TableField<CalcIndicatorRecommendRecord, String> CALC_CODE = createField("calc_code", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "计算编码");

    /**
     * Create a <code>SMETA_APP.calc_indicator_recommend</code> table reference
     */
    public CalcIndicatorRecommend() {
        this(DSL.name("calc_indicator_recommend"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_recommend</code> table reference
     */
    public CalcIndicatorRecommend(String alias) {
        this(DSL.name(alias), CALC_INDICATOR_RECOMMEND);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_indicator_recommend</code> table reference
     */
    public CalcIndicatorRecommend(Name alias) {
        this(alias, CALC_INDICATOR_RECOMMEND);
    }

    private CalcIndicatorRecommend(Name alias, Table<CalcIndicatorRecommendRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcIndicatorRecommend(Name alias, Table<CalcIndicatorRecommendRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "特征推荐计算任务");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_INDICATOR_RECOMMEND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcIndicatorRecommendRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_INDICATOR_RECOMMEND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcIndicatorRecommendRecord> getPrimaryKey() {
        return Keys.KEY_CALC_INDICATOR_RECOMMEND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcIndicatorRecommendRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcIndicatorRecommendRecord>>asList(Keys.KEY_CALC_INDICATOR_RECOMMEND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorRecommend as(String alias) {
        return new CalcIndicatorRecommend(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorRecommend as(Name alias) {
        return new CalcIndicatorRecommend(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorRecommend rename(String name) {
        return new CalcIndicatorRecommend(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcIndicatorRecommend rename(Name name) {
        return new CalcIndicatorRecommend(name, null);
    }
}
