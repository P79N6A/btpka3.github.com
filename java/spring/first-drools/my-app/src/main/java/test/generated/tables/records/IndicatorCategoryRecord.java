/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.IndicatorCategory;


/**
 * 指标类目（分
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndicatorCategoryRecord extends UpdatableRecordImpl<IndicatorCategoryRecord> implements Record9<ULong, Timestamp, Timestamp, ULong, ULong, Byte, String, String, String> {

    private static final long serialVersionUID = 2087657640;

    /**
     * Setter for <code>SMETA_APP.indicator_category.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.indicator_id</code>. 指标ID（废弃）
     */
    public void setIndicatorId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.indicator_id</code>. 指标ID（废弃）
     */
    public ULong getIndicatorId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.category_id</code>. 指标类目ID（废弃）
     */
    public void setCategoryId(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.category_id</code>. 指标类目ID（废弃）
     */
    public ULong getCategoryId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.is_effective</code>. 是否被删除
     */
    public void setIsEffective(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.is_effective</code>. 是否被删除
     */
    public Byte getIsEffective() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.indicator_code</code>. 指标唯一code
     */
    public void setIndicatorCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.indicator_code</code>. 指标唯一code
     */
    public String getIndicatorCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.category_code</code>. 指标类目唯一code
     */
    public void setCategoryCode(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.category_code</code>. 指标类目唯一code
     */
    public String getCategoryCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.indicator_category.alias</code>. 别名
     */
    public void setAlias(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.indicator_category.alias</code>. 别名
     */
    public String getAlias() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<ULong, Timestamp, Timestamp, ULong, ULong, Byte, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<ULong, Timestamp, Timestamp, ULong, ULong, Byte, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return IndicatorCategory.INDICATOR_CATEGORY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return IndicatorCategory.INDICATOR_CATEGORY.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return IndicatorCategory.INDICATOR_CATEGORY.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field4() {
        return IndicatorCategory.INDICATOR_CATEGORY.INDICATOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field5() {
        return IndicatorCategory.INDICATOR_CATEGORY.CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return IndicatorCategory.INDICATOR_CATEGORY.IS_EFFECTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return IndicatorCategory.INDICATOR_CATEGORY.INDICATOR_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return IndicatorCategory.INDICATOR_CATEGORY.CATEGORY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return IndicatorCategory.INDICATOR_CATEGORY.ALIAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component4() {
        return getIndicatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component5() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component6() {
        return getIsEffective();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIndicatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getCategoryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value4() {
        return getIndicatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value5() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getIsEffective();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIndicatorCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCategoryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getAlias();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value4(ULong value) {
        setIndicatorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value5(ULong value) {
        setCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value6(Byte value) {
        setIsEffective(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value7(String value) {
        setIndicatorCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value8(String value) {
        setCategoryCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord value9(String value) {
        setAlias(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorCategoryRecord values(ULong value1, Timestamp value2, Timestamp value3, ULong value4, ULong value5, Byte value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndicatorCategoryRecord
     */
    public IndicatorCategoryRecord() {
        super(IndicatorCategory.INDICATOR_CATEGORY);
    }

    /**
     * Create a detached, initialised IndicatorCategoryRecord
     */
    public IndicatorCategoryRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, ULong indicatorId, ULong categoryId, Byte isEffective, String indicatorCode, String categoryCode, String alias) {
        super(IndicatorCategory.INDICATOR_CATEGORY);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, indicatorId);
        set(4, categoryId);
        set(5, isEffective);
        set(6, indicatorCode);
        set(7, categoryCode);
        set(8, alias);
    }
}
