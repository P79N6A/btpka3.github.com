/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.SparkCtxInfo;


/**
 * spark context 信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SparkCtxInfoRecord extends UpdatableRecordImpl<SparkCtxInfoRecord> implements Record11<ULong, Timestamp, Timestamp, String, String, Integer, String, String, Integer, Integer, String> {

    private static final long serialVersionUID = -1215592678;

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.operator_id</code>. 操作人ID
     */
    public void setOperatorId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.operator_id</code>. 操作人ID
     */
    public String getOperatorId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.operator</code>. 操作人
     */
    public void setOperator(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.operator</code>. 操作人
     */
    public String getOperator() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.del_status</code>. -1 ：表示删除
     */
    public void setDelStatus(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.del_status</code>. -1 ：表示删除
     */
    public Integer getDelStatus() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.ctx_id</code>. spark content instance id
     */
    public void setCtxId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.ctx_id</code>. spark content instance id
     */
    public String getCtxId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.host_name</code>. 启动机器名称（IP）
     */
    public void setHostName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.host_name</code>. 启动机器名称（IP）
     */
    public String getHostName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.max_job_count</code>. 最大运行job数量
     */
    public void setMaxJobCount(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.max_job_count</code>. 最大运行job数量
     */
    public Integer getMaxJobCount() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.status</code>. 状态：1：运行中，3：停止，5：停止，-1：禁用
     */
    public void setStatus(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.status</code>. 状态：1：运行中，3：停止，5：停止，-1：禁用
     */
    public Integer getStatus() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.spark_ctx_info.jar_name</code>. jar 名称

     */
    public void setJarName(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.spark_ctx_info.jar_name</code>. jar 名称

     */
    public String getJarName() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<ULong, Timestamp, Timestamp, String, String, Integer, String, String, Integer, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<ULong, Timestamp, Timestamp, String, String, Integer, String, String, Integer, Integer, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return SparkCtxInfo.SPARK_CTX_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return SparkCtxInfo.SPARK_CTX_INFO.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return SparkCtxInfo.SPARK_CTX_INFO.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SparkCtxInfo.SPARK_CTX_INFO.OPERATOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SparkCtxInfo.SPARK_CTX_INFO.OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return SparkCtxInfo.SPARK_CTX_INFO.DEL_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SparkCtxInfo.SPARK_CTX_INFO.CTX_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SparkCtxInfo.SPARK_CTX_INFO.HOST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return SparkCtxInfo.SPARK_CTX_INFO.MAX_JOB_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return SparkCtxInfo.SPARK_CTX_INFO.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return SparkCtxInfo.SPARK_CTX_INFO.JAR_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getDelStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getCtxId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getHostName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getMaxJobCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getJarName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getDelStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCtxId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getHostName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getMaxJobCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getJarName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value4(String value) {
        setOperatorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value5(String value) {
        setOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value6(Integer value) {
        setDelStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value7(String value) {
        setCtxId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value8(String value) {
        setHostName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value9(Integer value) {
        setMaxJobCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value10(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord value11(String value) {
        setJarName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SparkCtxInfoRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, Integer value6, String value7, String value8, Integer value9, Integer value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SparkCtxInfoRecord
     */
    public SparkCtxInfoRecord() {
        super(SparkCtxInfo.SPARK_CTX_INFO);
    }

    /**
     * Create a detached, initialised SparkCtxInfoRecord
     */
    public SparkCtxInfoRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String operatorId, String operator, Integer delStatus, String ctxId, String hostName, Integer maxJobCount, Integer status, String jarName) {
        super(SparkCtxInfo.SPARK_CTX_INFO);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, operatorId);
        set(4, operator);
        set(5, delStatus);
        set(6, ctxId);
        set(7, hostName);
        set(8, maxJobCount);
        set(9, status);
        set(10, jarName);
    }
}
