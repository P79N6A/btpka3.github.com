/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfFlowNodeRecord;


/**
 * 流程节点表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfFlowNode extends TableImpl<UfFlowNodeRecord> {

    private static final long serialVersionUID = 377262674;

    /**
     * The reference instance of <code>SMETA_APP.uf_flow_node</code>
     */
    public static final UfFlowNode UF_FLOW_NODE = new UfFlowNode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfFlowNodeRecord> getRecordType() {
        return UfFlowNodeRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_flow_node.id</code>. 主键
     */
    public final TableField<UfFlowNodeRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_flow_node.gmt_create</code>. 创建时间
     */
    public final TableField<UfFlowNodeRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_flow_node.gmt_modified</code>. 修改时间
     */
    public final TableField<UfFlowNodeRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_flow_node.title</code>. 节点名称
     */
    public final TableField<UfFlowNodeRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "节点名称");

    /**
     * The column <code>SMETA_APP.uf_flow_node.type</code>. 节点类型（1 自动节点、2手工节点）
     */
    public final TableField<UfFlowNodeRecord, UInteger> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "节点类型（1 自动节点、2手工节点）");

    /**
     * The column <code>SMETA_APP.uf_flow_node.node_order</code>. 节点序号
     */
    public final TableField<UfFlowNodeRecord, UInteger> NODE_ORDER = createField("node_order", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "节点序号");

    /**
     * The column <code>SMETA_APP.uf_flow_node.callback_type</code>. 回调类型（1 hsf、2 http）
     */
    public final TableField<UfFlowNodeRecord, UInteger> CALLBACK_TYPE = createField("callback_type", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "回调类型（1 hsf、2 http）");

    /**
     * The column <code>SMETA_APP.uf_flow_node.callback_json</code>. 回调json
     */
    public final TableField<UfFlowNodeRecord, String> CALLBACK_JSON = createField("callback_json", org.jooq.impl.SQLDataType.VARCHAR(300), this, "回调json");

    /**
     * The column <code>SMETA_APP.uf_flow_node.approver_type</code>. 审批人类型（1 groovy，2 指定第N级主管为审批人）
     */
    public final TableField<UfFlowNodeRecord, UInteger> APPROVER_TYPE = createField("approver_type", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "审批人类型（1 groovy，2 指定第N级主管为审批人）");

    /**
     * The column <code>SMETA_APP.uf_flow_node.approver_json</code>. 审批人json
     */
    public final TableField<UfFlowNodeRecord, String> APPROVER_JSON = createField("approver_json", org.jooq.impl.SQLDataType.VARCHAR(300), this, "审批人json");

    /**
     * The column <code>SMETA_APP.uf_flow_node.flow_code</code>. 流程编码
     */
    public final TableField<UfFlowNodeRecord, String> FLOW_CODE = createField("flow_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "流程编码");

    /**
     * The column <code>SMETA_APP.uf_flow_node.tenant_code</code>. 租户编码
     */
    public final TableField<UfFlowNodeRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "租户编码");

    /**
     * The column <code>SMETA_APP.uf_flow_node.last_operator</code>. 最近修改人
     */
    public final TableField<UfFlowNodeRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "最近修改人");

    /**
     * The column <code>SMETA_APP.uf_flow_node.comment</code>. 节点备注
     */
    public final TableField<UfFlowNodeRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR(300), this, "节点备注");

    /**
     * The column <code>SMETA_APP.uf_flow_node.creator</code>. 创建者
     */
    public final TableField<UfFlowNodeRecord, ULong> CREATOR = createField("creator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "创建者");

    /**
     * Create a <code>SMETA_APP.uf_flow_node</code> table reference
     */
    public UfFlowNode() {
        this(DSL.name("uf_flow_node"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_flow_node</code> table reference
     */
    public UfFlowNode(String alias) {
        this(DSL.name(alias), UF_FLOW_NODE);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_flow_node</code> table reference
     */
    public UfFlowNode(Name alias) {
        this(alias, UF_FLOW_NODE);
    }

    private UfFlowNode(Name alias, Table<UfFlowNodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfFlowNode(Name alias, Table<UfFlowNodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "流程节点表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_FLOW_NODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfFlowNodeRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_FLOW_NODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfFlowNodeRecord> getPrimaryKey() {
        return Keys.KEY_UF_FLOW_NODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfFlowNodeRecord>> getKeys() {
        return Arrays.<UniqueKey<UfFlowNodeRecord>>asList(Keys.KEY_UF_FLOW_NODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFlowNode as(String alias) {
        return new UfFlowNode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfFlowNode as(Name alias) {
        return new UfFlowNode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFlowNode rename(String name) {
        return new UfFlowNode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfFlowNode rename(Name name) {
        return new UfFlowNode(name, null);
    }
}
