/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.CalcOffEngineRecord;


/**
 * 离线引擎计算任务表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcOffEngineRecordRecord extends UpdatableRecordImpl<CalcOffEngineRecordRecord> {

    private static final long serialVersionUID = 1754701870;

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.operator_id</code>. 操作人工号
     */
    public void setOperatorId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.operator_id</code>. 操作人工号
     */
    public String getOperatorId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.operator</code>. 操作人
     */
    public void setOperator(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.operator</code>. 操作人
     */
    public String getOperator() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.event_code</code>. 离线事件编码
     */
    public void setEventCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.event_code</code>. 离线事件编码
     */
    public String getEventCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.table_name</code>. 离线表名
     */
    public void setTableName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.table_name</code>. 离线表名
     */
    public String getTableName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.table_partition</code>. 离线表分区
     */
    public void setTablePartition(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.table_partition</code>. 离线表分区
     */
    public String getTablePartition() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.table_calc_cycle</code>. 离线表计算周期
     */
    public void setTableCalcCycle(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.table_calc_cycle</code>. 离线表计算周期
     */
    public Integer getTableCalcCycle() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.rule_id</code>. 规则ID
     */
    public void setRuleId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.rule_id</code>. 规则ID
     */
    public String getRuleId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.rule_condition</code>. 规则条件
     */
    public void setRuleCondition(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.rule_condition</code>. 规则条件
     */
    public String getRuleCondition() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.result_table</code>. 计算结果表
     */
    public void setResultTable(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.result_table</code>. 计算结果表
     */
    public String getResultTable() {
        return (String) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.ddl_node_id</code>. DDL节点ID
     */
    public void setDdlNodeId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.ddl_node_id</code>. DDL节点ID
     */
    public String getDdlNodeId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.ddl_node_context</code>. DDL节点内容
     */
    public void setDdlNodeContext(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.ddl_node_context</code>. DDL节点内容
     */
    public String getDdlNodeContext() {
        return (String) get(13);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.calc_node_id</code>. 计算节点ID
     */
    public void setCalcNodeId(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.calc_node_id</code>. 计算节点ID
     */
    public String getCalcNodeId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.calc_node_context</code>. 计算节点内容
     */
    public void setCalcNodeContext(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.calc_node_context</code>. 计算节点内容
     */
    public String getCalcNodeContext() {
        return (String) get(15);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.calc_status</code>. 计算状态：1未运行，2等待时间，3等待资源，4运行中，5运行失败，6运行成功
     */
    public void setCalcStatus(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.calc_status</code>. 计算状态：1未运行，2等待时间，3等待资源，4运行中，5运行失败，6运行成功
     */
    public Integer getCalcStatus() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.logs</code>. 计算日志
     */
    public void setLogs(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.logs</code>. 计算日志
     */
    public String getLogs() {
        return (String) get(17);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.status</code>. 记录状态：0删除，1有效
     */
    public void setStatus(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.status</code>. 记录状态：0删除，1有效
     */
    public Integer getStatus() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.calc_code</code>. 计算编码
     */
    public void setCalcCode(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.calc_code</code>. 计算编码
     */
    public String getCalcCode() {
        return (String) get(19);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.event_columns</code>. 计算结果表字段集：userId, buyerId
     */
    public void setEventColumns(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.event_columns</code>. 计算结果表字段集：userId, buyerId
     */
    public String getEventColumns() {
        return (String) get(20);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.table_columns</code>. 原始表 字段集：user_id as userId, buyer_id as buyerId
     */
    public void setTableColumns(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.table_columns</code>. 原始表 字段集：user_id as userId, buyer_id as buyerId
     */
    public String getTableColumns() {
        return (String) get(21);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.event_name</code>. 离线事件名称
     */
    public void setEventName(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.event_name</code>. 离线事件名称
     */
    public String getEventName() {
        return (String) get(22);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.node_type</code>. 节点类型：0周期任务，1一次性任务
     */
    public void setNodeType(Integer value) {
        set(23, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.node_type</code>. 节点类型：0周期任务，1一次性任务
     */
    public Integer getNodeType() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.stats_table</code>. 计算结果统计表
     */
    public void setStatsTable(String value) {
        set(24, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.stats_table</code>. 计算结果统计表
     */
    public String getStatsTable() {
        return (String) get(24);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.dag_id</code>. 一次性任务运行返回的dagid
     */
    public void setDagId(String value) {
        set(25, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.dag_id</code>. 一次性任务运行返回的dagid
     */
    public String getDagId() {
        return (String) get(25);
    }

    /**
     * Setter for <code>SMETA_APP.calc_off_engine_record.kfc_script</code>. 离线KFC UDF脚本集，多个以@_@分隔
     */
    public void setKfcScript(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_off_engine_record.kfc_script</code>. 离线KFC UDF脚本集，多个以@_@分隔
     */
    public String getKfcScript() {
        return (String) get(26);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalcOffEngineRecordRecord
     */
    public CalcOffEngineRecordRecord() {
        super(CalcOffEngineRecord.CALC_OFF_ENGINE_RECORD);
    }

    /**
     * Create a detached, initialised CalcOffEngineRecordRecord
     */
    public CalcOffEngineRecordRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String operatorId, String operator, String eventCode, String tableName, String tablePartition, Integer tableCalcCycle, String ruleId, String ruleCondition, String resultTable, String ddlNodeId, String ddlNodeContext, String calcNodeId, String calcNodeContext, Integer calcStatus, String logs, Integer status, String calcCode, String eventColumns, String tableColumns, String eventName, Integer nodeType, String statsTable, String dagId, String kfcScript) {
        super(CalcOffEngineRecord.CALC_OFF_ENGINE_RECORD);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, operatorId);
        set(4, operator);
        set(5, eventCode);
        set(6, tableName);
        set(7, tablePartition);
        set(8, tableCalcCycle);
        set(9, ruleId);
        set(10, ruleCondition);
        set(11, resultTable);
        set(12, ddlNodeId);
        set(13, ddlNodeContext);
        set(14, calcNodeId);
        set(15, calcNodeContext);
        set(16, calcStatus);
        set(17, logs);
        set(18, status);
        set(19, calcCode);
        set(20, eventColumns);
        set(21, tableColumns);
        set(22, eventName);
        set(23, nodeType);
        set(24, statsTable);
        set(25, dagId);
        set(26, kfcScript);
    }
}
