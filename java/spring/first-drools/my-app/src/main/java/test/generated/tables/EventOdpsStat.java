/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.EventOdpsStatRecord;


/**
 * 事件上云状态统
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventOdpsStat extends TableImpl<EventOdpsStatRecord> {

    private static final long serialVersionUID = 812191436;

    /**
     * The reference instance of <code>SMETA_APP.event_odps_stat</code>
     */
    public static final EventOdpsStat EVENT_ODPS_STAT = new EventOdpsStat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventOdpsStatRecord> getRecordType() {
        return EventOdpsStatRecord.class;
    }

    /**
     * The column <code>SMETA_APP.event_odps_stat.id</code>. 主键
     */
    public final TableField<EventOdpsStatRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.event_odps_stat.gmt_create</code>. 创建时间
     */
    public final TableField<EventOdpsStatRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>SMETA_APP.event_odps_stat.gmt_modified</code>. 修改时间
     */
    public final TableField<EventOdpsStatRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>SMETA_APP.event_odps_stat.event_code</code>. 事件编码
     */
    public final TableField<EventOdpsStatRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "事件编码");

    /**
     * The column <code>SMETA_APP.event_odps_stat.status</code>. 上云状态，0：未上云，1：已上云
     */
    public final TableField<EventOdpsStatRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "上云状态，0：未上云，1：已上云");

    /**
     * The column <code>SMETA_APP.event_odps_stat.operate_status</code>. 操作状态，0：未操作，1：执行中，2：操作成功，3：操作失败
     */
    public final TableField<EventOdpsStatRecord, Integer> OPERATE_STATUS = createField("operate_status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "操作状态，0：未操作，1：执行中，2：操作成功，3：操作失败");

    /**
     * The column <code>SMETA_APP.event_odps_stat.error_log</code>. 错误日志
     */
    public final TableField<EventOdpsStatRecord, String> ERROR_LOG = createField("error_log", org.jooq.impl.SQLDataType.CLOB, this, "错误日志");

    /**
     * Create a <code>SMETA_APP.event_odps_stat</code> table reference
     */
    public EventOdpsStat() {
        this(DSL.name("event_odps_stat"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.event_odps_stat</code> table reference
     */
    public EventOdpsStat(String alias) {
        this(DSL.name(alias), EVENT_ODPS_STAT);
    }

    /**
     * Create an aliased <code>SMETA_APP.event_odps_stat</code> table reference
     */
    public EventOdpsStat(Name alias) {
        this(alias, EVENT_ODPS_STAT);
    }

    private EventOdpsStat(Name alias, Table<EventOdpsStatRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventOdpsStat(Name alias, Table<EventOdpsStatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件上云状态统");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVENT_ODPS_STAT_IDX_EVENT_CODE, Indexes.EVENT_ODPS_STAT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventOdpsStatRecord, ULong> getIdentity() {
        return Keys.IDENTITY_EVENT_ODPS_STAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventOdpsStatRecord> getPrimaryKey() {
        return Keys.KEY_EVENT_ODPS_STAT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventOdpsStatRecord>> getKeys() {
        return Arrays.<UniqueKey<EventOdpsStatRecord>>asList(Keys.KEY_EVENT_ODPS_STAT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsStat as(String alias) {
        return new EventOdpsStat(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventOdpsStat as(Name alias) {
        return new EventOdpsStat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventOdpsStat rename(String name) {
        return new EventOdpsStat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventOdpsStat rename(Name name) {
        return new EventOdpsStat(name, null);
    }
}
