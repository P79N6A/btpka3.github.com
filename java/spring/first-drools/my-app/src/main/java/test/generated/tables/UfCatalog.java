/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfCatalogRecord;


/**
 * kv种类表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfCatalog extends TableImpl<UfCatalogRecord> {

    private static final long serialVersionUID = -1620978924;

    /**
     * The reference instance of <code>SMETA_APP.uf_catalog</code>
     */
    public static final UfCatalog UF_CATALOG = new UfCatalog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfCatalogRecord> getRecordType() {
        return UfCatalogRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_catalog.id</code>. 主键
     */
    public final TableField<UfCatalogRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_catalog.gmt_create</code>. 创建时间
     */
    public final TableField<UfCatalogRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_catalog.gmt_modified</code>. 修改时间
     */
    public final TableField<UfCatalogRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_catalog.title</code>. kv名称
     */
    public final TableField<UfCatalogRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "kv名称");

    /**
     * The column <code>SMETA_APP.uf_catalog.code</code>. kv的id，全局唯一
     */
    public final TableField<UfCatalogRecord, Long> CODE = createField("code", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "kv的id，全局唯一");

    /**
     * The column <code>SMETA_APP.uf_catalog.status</code>. 状态，1-有效，0-废弃
     */
    public final TableField<UfCatalogRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，1-有效，0-废弃");

    /**
     * The column <code>SMETA_APP.uf_catalog.creator</code>. 创建人
     */
    public final TableField<UfCatalogRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "创建人");

    /**
     * The column <code>SMETA_APP.uf_catalog.last_operator</code>. 最后编辑人
     */
    public final TableField<UfCatalogRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "最后编辑人");

    /**
     * The column <code>SMETA_APP.uf_catalog.tenant_code</code>. 租户code
     */
    public final TableField<UfCatalogRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "租户code");

    /**
     * Create a <code>SMETA_APP.uf_catalog</code> table reference
     */
    public UfCatalog() {
        this(DSL.name("uf_catalog"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_catalog</code> table reference
     */
    public UfCatalog(String alias) {
        this(DSL.name(alias), UF_CATALOG);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_catalog</code> table reference
     */
    public UfCatalog(Name alias) {
        this(alias, UF_CATALOG);
    }

    private UfCatalog(Name alias, Table<UfCatalogRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfCatalog(Name alias, Table<UfCatalogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "kv种类表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_CATALOG_PRIMARY, Indexes.UF_CATALOG_UK_CODE, Indexes.UF_CATALOG_UK_TITLE_TENANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfCatalogRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfCatalogRecord> getPrimaryKey() {
        return Keys.KEY_UF_CATALOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfCatalogRecord>> getKeys() {
        return Arrays.<UniqueKey<UfCatalogRecord>>asList(Keys.KEY_UF_CATALOG_PRIMARY, Keys.KEY_UF_CATALOG_UK_TITLE_TENANT, Keys.KEY_UF_CATALOG_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfCatalog as(String alias) {
        return new UfCatalog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfCatalog as(Name alias) {
        return new UfCatalog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfCatalog rename(String name) {
        return new UfCatalog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfCatalog rename(Name name) {
        return new UfCatalog(name, null);
    }
}
