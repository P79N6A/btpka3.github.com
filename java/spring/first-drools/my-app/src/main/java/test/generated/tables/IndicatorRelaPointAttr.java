/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.IndicatorRelaPointAttrRecord;


/**
 * 关系特征中点的属性信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndicatorRelaPointAttr extends TableImpl<IndicatorRelaPointAttrRecord> {

    private static final long serialVersionUID = -1474309022;

    /**
     * The reference instance of <code>SMETA_APP.indicator_rela_point_attr</code>
     */
    public static final IndicatorRelaPointAttr INDICATOR_RELA_POINT_ATTR = new IndicatorRelaPointAttr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndicatorRelaPointAttrRecord> getRecordType() {
        return IndicatorRelaPointAttrRecord.class;
    }

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.id</code>. 主键
     */
    public final TableField<IndicatorRelaPointAttrRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.gmt_create</code>. 创建时间
     */
    public final TableField<IndicatorRelaPointAttrRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.gmt_modified</code>. 修改时间
     */
    public final TableField<IndicatorRelaPointAttrRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.point_code</code>. 关系中点的code
     */
    public final TableField<IndicatorRelaPointAttrRecord, String> POINT_CODE = createField("point_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "关系中点的code");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.point_attr_code</code>. 关系中点的属性code
     */
    public final TableField<IndicatorRelaPointAttrRecord, String> POINT_ATTR_CODE = createField("point_attr_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "关系中点的属性code");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.point_attr_name</code>. 关系中点的属性名称
     */
    public final TableField<IndicatorRelaPointAttrRecord, String> POINT_ATTR_NAME = createField("point_attr_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "关系中点的属性名称");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.is_valid</code>. 是否有效，0-无效；1-有效
     */
    public final TableField<IndicatorRelaPointAttrRecord, Short> IS_VALID = createField("is_valid", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "是否有效，0-无效；1-有效");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.comments</code>. 备注
     */
    public final TableField<IndicatorRelaPointAttrRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "备注");

    /**
     * The column <code>SMETA_APP.indicator_rela_point_attr.point_attr_type</code>. 点属性字段类型，默认为double，需订正
     */
    public final TableField<IndicatorRelaPointAttrRecord, String> POINT_ATTR_TYPE = createField("point_attr_type", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("double", org.jooq.impl.SQLDataType.VARCHAR)), this, "点属性字段类型，默认为double，需订正");

    /**
     * Create a <code>SMETA_APP.indicator_rela_point_attr</code> table reference
     */
    public IndicatorRelaPointAttr() {
        this(DSL.name("indicator_rela_point_attr"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.indicator_rela_point_attr</code> table reference
     */
    public IndicatorRelaPointAttr(String alias) {
        this(DSL.name(alias), INDICATOR_RELA_POINT_ATTR);
    }

    /**
     * Create an aliased <code>SMETA_APP.indicator_rela_point_attr</code> table reference
     */
    public IndicatorRelaPointAttr(Name alias) {
        this(alias, INDICATOR_RELA_POINT_ATTR);
    }

    private IndicatorRelaPointAttr(Name alias, Table<IndicatorRelaPointAttrRecord> aliased) {
        this(alias, aliased, null);
    }

    private IndicatorRelaPointAttr(Name alias, Table<IndicatorRelaPointAttrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "关系特征中点的属性信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INDICATOR_RELA_POINT_ATTR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IndicatorRelaPointAttrRecord, ULong> getIdentity() {
        return Keys.IDENTITY_INDICATOR_RELA_POINT_ATTR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IndicatorRelaPointAttrRecord> getPrimaryKey() {
        return Keys.KEY_INDICATOR_RELA_POINT_ATTR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IndicatorRelaPointAttrRecord>> getKeys() {
        return Arrays.<UniqueKey<IndicatorRelaPointAttrRecord>>asList(Keys.KEY_INDICATOR_RELA_POINT_ATTR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorRelaPointAttr as(String alias) {
        return new IndicatorRelaPointAttr(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndicatorRelaPointAttr as(Name alias) {
        return new IndicatorRelaPointAttr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IndicatorRelaPointAttr rename(String name) {
        return new IndicatorRelaPointAttr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IndicatorRelaPointAttr rename(Name name) {
        return new IndicatorRelaPointAttr(name, null);
    }
}
