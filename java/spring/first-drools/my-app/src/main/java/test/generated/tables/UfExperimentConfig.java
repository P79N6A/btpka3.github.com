/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfExperimentConfigRecord;


/**
 * 规则实验室实验配置表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfExperimentConfig extends TableImpl<UfExperimentConfigRecord> {

    private static final long serialVersionUID = -1379509193;

    /**
     * The reference instance of <code>SMETA_APP.uf_experiment_config</code>
     */
    public static final UfExperimentConfig UF_EXPERIMENT_CONFIG = new UfExperimentConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfExperimentConfigRecord> getRecordType() {
        return UfExperimentConfigRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_experiment_config.id</code>. 主键
     */
    public final TableField<UfExperimentConfigRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.gmt_create</code>. 创建时间
     */
    public final TableField<UfExperimentConfigRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.gmt_modified</code>. 修改时间
     */
    public final TableField<UfExperimentConfigRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.rule_set_id</code>. 规则集编号
     */
    public final TableField<UfExperimentConfigRecord, ULong> RULE_SET_ID = createField("rule_set_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "规则集编号");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.rule_id</code>. 规则编号
     */
    public final TableField<UfExperimentConfigRecord, ULong> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "规则编号");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.rule_version</code>. 规则版本号
     */
    public final TableField<UfExperimentConfigRecord, Integer> RULE_VERSION = createField("rule_version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "规则版本号");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.rule_title</code>. 规则标题
     */
    public final TableField<UfExperimentConfigRecord, String> RULE_TITLE = createField("rule_title", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "规则标题");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.rule_status</code>. 规则状态
     */
    public final TableField<UfExperimentConfigRecord, Integer> RULE_STATUS = createField("rule_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "规则状态");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.event_code</code>. 事件code
     */
    public final TableField<UfExperimentConfigRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "事件code");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.event_title</code>. 事件名称
     */
    public final TableField<UfExperimentConfigRecord, String> EVENT_TITLE = createField("event_title", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "事件名称");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.visual_settings</code>. 规则结构
     */
    public final TableField<UfExperimentConfigRecord, String> VISUAL_SETTINGS = createField("visual_settings", org.jooq.impl.SQLDataType.CLOB, this, "规则结构");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.creator</code>. 实验创建人
     */
    public final TableField<UfExperimentConfigRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "实验创建人");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.last_operator</code>. 实验最近一次修改人
     */
    public final TableField<UfExperimentConfigRecord, String> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "实验最近一次修改人");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.start_time</code>. 实验开始时间
     */
    public final TableField<UfExperimentConfigRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "实验开始时间");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.prepare_data_end_time</code>. 取数阶段完成时间
     */
    public final TableField<UfExperimentConfigRecord, Timestamp> PREPARE_DATA_END_TIME = createField("prepare_data_end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "取数阶段完成时间");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.end_time</code>. 结束时间
     */
    public final TableField<UfExperimentConfigRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "结束时间");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.sample_info</code>. 样本信息
     */
    public final TableField<UfExperimentConfigRecord, String> SAMPLE_INFO = createField("sample_info", org.jooq.impl.SQLDataType.CLOB, this, "样本信息");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.status</code>. 实验状态,0:失败,1:成功,2:实验运行中
     */
    public final TableField<UfExperimentConfigRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "实验状态,0:失败,1:成功,2:实验运行中");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.task_info</code>. 任务信息
     */
    public final TableField<UfExperimentConfigRecord, String> TASK_INFO = createField("task_info", org.jooq.impl.SQLDataType.CLOB, this, "任务信息");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.extra_task_info</code>. 变量任务信息
     */
    public final TableField<UfExperimentConfigRecord, String> EXTRA_TASK_INFO = createField("extra_task_info", org.jooq.impl.SQLDataType.CLOB, this, "变量任务信息");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.confusion_matrix</code>. 样本命中情况(混淆矩阵),json格式
     */
    public final TableField<UfExperimentConfigRecord, String> CONFUSION_MATRIX = createField("confusion_matrix", org.jooq.impl.SQLDataType.CLOB, this, "样本命中情况(混淆矩阵),json格式");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.hit_rate</code>. 规则样本命中情况,json格式
     */
    public final TableField<UfExperimentConfigRecord, String> HIT_RATE = createField("hit_rate", org.jooq.impl.SQLDataType.CLOB, this, "规则样本命中情况,json格式");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.tenant_code</code>. 租户号
     */
    public final TableField<UfExperimentConfigRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(50), this, "租户号");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.rule_sub_version</code>. 规则副版本
     */
    public final TableField<UfExperimentConfigRecord, Integer> RULE_SUB_VERSION = createField("rule_sub_version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "规则副版本");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.emp_id</code>. 工号
     */
    public final TableField<UfExperimentConfigRecord, String> EMP_ID = createField("emp_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "工号");

    /**
     * The column <code>SMETA_APP.uf_experiment_config.open_account_id</code>. 统一标志编码
     */
    public final TableField<UfExperimentConfigRecord, String> OPEN_ACCOUNT_ID = createField("open_account_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "统一标志编码");

    /**
     * Create a <code>SMETA_APP.uf_experiment_config</code> table reference
     */
    public UfExperimentConfig() {
        this(DSL.name("uf_experiment_config"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_experiment_config</code> table reference
     */
    public UfExperimentConfig(String alias) {
        this(DSL.name(alias), UF_EXPERIMENT_CONFIG);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_experiment_config</code> table reference
     */
    public UfExperimentConfig(Name alias) {
        this(alias, UF_EXPERIMENT_CONFIG);
    }

    private UfExperimentConfig(Name alias, Table<UfExperimentConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfExperimentConfig(Name alias, Table<UfExperimentConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "规则实验室实验配置表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_EXPERIMENT_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfExperimentConfigRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_EXPERIMENT_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfExperimentConfigRecord> getPrimaryKey() {
        return Keys.KEY_UF_EXPERIMENT_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfExperimentConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<UfExperimentConfigRecord>>asList(Keys.KEY_UF_EXPERIMENT_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfExperimentConfig as(String alias) {
        return new UfExperimentConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfExperimentConfig as(Name alias) {
        return new UfExperimentConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfExperimentConfig rename(String name) {
        return new UfExperimentConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfExperimentConfig rename(Name name) {
        return new UfExperimentConfig(name, null);
    }
}
