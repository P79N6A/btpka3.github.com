/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.CalcIndicatorAccRecordTable;


/**
 * 关联表信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcIndicatorAccRecordTableRecord extends UpdatableRecordImpl<CalcIndicatorAccRecordTableRecord> implements Record10<ULong, Timestamp, Timestamp, String, String, String, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = -568634989;

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.table_name</code>. 数据表名
     */
    public void setTableName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.table_name</code>. 数据表名
     */
    public String getTableName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.event_name</code>. 事件名称
     */
    public void setEventName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.event_name</code>. 事件名称
     */
    public String getEventName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.event_code</code>. 事件Code
     */
    public void setEventCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.event_code</code>. 事件Code
     */
    public String getEventCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.is_main_table</code>. 0：关联表，1：主表
     */
    public void setIsMainTable(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.is_main_table</code>. 0：关联表，1：主表
     */
    public Integer getIsMainTable() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.record_id</code>. 取数信息ID
     */
    public void setRecordId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.record_id</code>. 取数信息ID
     */
    public Integer getRecordId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.condition_limit</code>. 筛选数据比例
     */
    public void setConditionLimit(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.condition_limit</code>. 筛选数据比例
     */
    public Integer getConditionLimit() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.calc_indicator_acc_record_table.condition_sql</code>. 筛选数据条件
     */
    public void setConditionSql(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_indicator_acc_record_table.condition_sql</code>. 筛选数据条件
     */
    public String getConditionSql() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Timestamp, Timestamp, String, String, String, Integer, Integer, Integer, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Timestamp, Timestamp, String, String, String, Integer, Integer, Integer, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.EVENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.EVENT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.IS_MAIN_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.RECORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.CONDITION_LIMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE.CONDITION_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getEventName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getIsMainTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getConditionLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getConditionSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEventName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getEventCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getIsMainTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getConditionLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getConditionSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value4(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value5(String value) {
        setEventName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value6(String value) {
        setEventCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value7(Integer value) {
        setIsMainTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value8(Integer value) {
        setRecordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value9(Integer value) {
        setConditionLimit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord value10(String value) {
        setConditionSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcIndicatorAccRecordTableRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, Integer value7, Integer value8, Integer value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalcIndicatorAccRecordTableRecord
     */
    public CalcIndicatorAccRecordTableRecord() {
        super(CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE);
    }

    /**
     * Create a detached, initialised CalcIndicatorAccRecordTableRecord
     */
    public CalcIndicatorAccRecordTableRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String tableName, String eventName, String eventCode, Integer isMainTable, Integer recordId, Integer conditionLimit, String conditionSql) {
        super(CalcIndicatorAccRecordTable.CALC_INDICATOR_ACC_RECORD_TABLE);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, tableName);
        set(4, eventName);
        set(5, eventCode);
        set(6, isMainTable);
        set(7, recordId);
        set(8, conditionLimit);
        set(9, conditionSql);
    }
}
