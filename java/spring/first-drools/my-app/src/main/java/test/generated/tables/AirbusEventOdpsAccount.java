/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.AirbusEventOdpsAccountRecord;


/**
 * 事件结果表权限的ODPS账号
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AirbusEventOdpsAccount extends TableImpl<AirbusEventOdpsAccountRecord> {

    private static final long serialVersionUID = 1760200666;

    /**
     * The reference instance of <code>SMETA_APP.airbus_event_odps_account</code>
     */
    public static final AirbusEventOdpsAccount AIRBUS_EVENT_ODPS_ACCOUNT = new AirbusEventOdpsAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AirbusEventOdpsAccountRecord> getRecordType() {
        return AirbusEventOdpsAccountRecord.class;
    }

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.id</code>. 主键
     */
    public final TableField<AirbusEventOdpsAccountRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.gmt_create</code>. 创建时间
     */
    public final TableField<AirbusEventOdpsAccountRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.gmt_modified</code>. 修改时间
     */
    public final TableField<AirbusEventOdpsAccountRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.event_code</code>. 事件code
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "事件code");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.sic_result_table</code>. sic结果表，表名以逗号分隔
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> SIC_RESULT_TABLE = createField("sic_result_table", org.jooq.impl.SQLDataType.CLOB, this, "sic结果表，表名以逗号分隔");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.account</code>. odps云账号
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "odps云账号");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.operator_id</code>. 操作人工号
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作人工号");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.operator</code>. 操作人昵称
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作人昵称");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.deleted</code>. 是否已经删除
     */
    public final TableField<AirbusEventOdpsAccountRecord, Byte> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已经删除");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.project</code>. odps工程名
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> PROJECT = createField("project", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "odps工程名");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.employee_id</code>. 云账号对应的员工工号
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> EMPLOYEE_ID = createField("employee_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "云账号对应的员工工号");

    /**
     * The column <code>SMETA_APP.airbus_event_odps_account.employee_nick</code>. 云账号对应的员工花名
     */
    public final TableField<AirbusEventOdpsAccountRecord, String> EMPLOYEE_NICK = createField("employee_nick", org.jooq.impl.SQLDataType.VARCHAR(64), this, "云账号对应的员工花名");

    /**
     * Create a <code>SMETA_APP.airbus_event_odps_account</code> table reference
     */
    public AirbusEventOdpsAccount() {
        this(DSL.name("airbus_event_odps_account"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.airbus_event_odps_account</code> table reference
     */
    public AirbusEventOdpsAccount(String alias) {
        this(DSL.name(alias), AIRBUS_EVENT_ODPS_ACCOUNT);
    }

    /**
     * Create an aliased <code>SMETA_APP.airbus_event_odps_account</code> table reference
     */
    public AirbusEventOdpsAccount(Name alias) {
        this(alias, AIRBUS_EVENT_ODPS_ACCOUNT);
    }

    private AirbusEventOdpsAccount(Name alias, Table<AirbusEventOdpsAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private AirbusEventOdpsAccount(Name alias, Table<AirbusEventOdpsAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件结果表权限的ODPS账号");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AIRBUS_EVENT_ODPS_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AirbusEventOdpsAccountRecord, ULong> getIdentity() {
        return Keys.IDENTITY_AIRBUS_EVENT_ODPS_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AirbusEventOdpsAccountRecord> getPrimaryKey() {
        return Keys.KEY_AIRBUS_EVENT_ODPS_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AirbusEventOdpsAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<AirbusEventOdpsAccountRecord>>asList(Keys.KEY_AIRBUS_EVENT_ODPS_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AirbusEventOdpsAccount as(String alias) {
        return new AirbusEventOdpsAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AirbusEventOdpsAccount as(Name alias) {
        return new AirbusEventOdpsAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AirbusEventOdpsAccount rename(String name) {
        return new AirbusEventOdpsAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AirbusEventOdpsAccount rename(Name name) {
        return new AirbusEventOdpsAccount(name, null);
    }
}
