/*
 * This file is generated by jOOQ.
*/
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import test.generated.tables.CalcDatasource;


/**
 * 数据源表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcDatasourceRecord extends UpdatableRecordImpl<CalcDatasourceRecord> implements Record22<ULong, Timestamp, Timestamp, String, String, String, String, String, String, String, String, Byte, String, String, String, String, Integer, Integer, String, String, String, String> {

    private static final long serialVersionUID = 369448266;

    /**
     * Setter for <code>SMETA_APP.calc_datasource.id</code>. 主键
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.id</code>. 主键
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.gmt_create</code>. 创建时间
     */
    public void setGmtCreate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.gmt_create</code>. 创建时间
     */
    public Timestamp getGmtCreate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.gmt_modified</code>. 修改时间
     */
    public void setGmtModified(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.gmt_modified</code>. 修改时间
     */
    public Timestamp getGmtModified() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.created_by</code>. 创建人
     */
    public void setCreatedBy(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.created_by</code>. 创建人
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.updated_by</code>. 最后修改人
     */
    public void setUpdatedBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.updated_by</code>. 最后修改人
     */
    public String getUpdatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.code</code>. 数据源编码
     */
    public void setCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.code</code>. 数据源编码
     */
    public String getCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.name</code>. 数据源名称
     */
    public void setName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.name</code>. 数据源名称
     */
    public String getName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.type</code>. 数据源类型
     */
    public void setType(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.type</code>. 数据源类型
     */
    public String getType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.description</code>. 描述
     */
    public void setDescription(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.description</code>. 描述
     */
    public String getDescription() {
        return (String) get(8);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.name_space</code>. tair namespace
     */
    public void setNameSpace(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.name_space</code>. tair namespace
     */
    public String getNameSpace() {
        return (String) get(9);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.config_id</code>. tair configid
     */
    public void setConfigId(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.config_id</code>. tair configid
     */
    public String getConfigId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.is_effective</code>. 状态
     */
    public void setIsEffective(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.is_effective</code>. 状态
     */
    public Byte getIsEffective() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.area_code</code>. 区域编码
     */
    public void setAreaCode(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.area_code</code>. 区域编码
     */
    public String getAreaCode() {
        return (String) get(12);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_zk_quorum</code>. hbase zk quorum
     */
    public void setHbZkQuorum(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_zk_quorum</code>. hbase zk quorum
     */
    public String getHbZkQuorum() {
        return (String) get(13);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_zk_port</code>. hbase zk port
     */
    public void setHbZkPort(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_zk_port</code>. hbase zk port
     */
    public String getHbZkPort() {
        return (String) get(14);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_zk_parent</code>. hbase zk parent
     */
    public void setHbZkParent(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_zk_parent</code>. hbase zk parent
     */
    public String getHbZkParent() {
        return (String) get(15);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_pool_size</code>. hbase pool size
     */
    public void setHbPoolSize(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_pool_size</code>. hbase pool size
     */
    public Integer getHbPoolSize() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_scan_cache_rows</code>. hbase scan cache rows
     */
    public void setHbScanCacheRows(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_scan_cache_rows</code>. hbase scan cache rows
     */
    public Integer getHbScanCacheRows() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.indi_type</code>. 用户实时、离线指标存储
     */
    public void setIndiType(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.indi_type</code>. 用户实时、离线指标存储
     */
    public String getIndiType() {
        return (String) get(18);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_table_name</code>. hbase table name
     */
    public void setHbTableName(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_table_name</code>. hbase table name
     */
    public String getHbTableName() {
        return (String) get(19);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_write_path</code>. hbase 写入目录
     */
    public void setHbWritePath(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_write_path</code>. hbase 写入目录
     */
    public String getHbWritePath() {
        return (String) get(20);
    }

    /**
     * Setter for <code>SMETA_APP.calc_datasource.hb_configs</code>. hbase 同步配置
     */
    public void setHbConfigs(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>SMETA_APP.calc_datasource.hb_configs</code>. hbase 同步配置
     */
    public String getHbConfigs() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<ULong, Timestamp, Timestamp, String, String, String, String, String, String, String, String, Byte, String, String, String, String, Integer, Integer, String, String, String, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<ULong, Timestamp, Timestamp, String, String, String, String, String, String, String, String, Byte, String, String, String, String, Integer, Integer, String, String, String, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return CalcDatasource.CALC_DATASOURCE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return CalcDatasource.CALC_DATASOURCE.GMT_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return CalcDatasource.CALC_DATASOURCE.GMT_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CalcDatasource.CALC_DATASOURCE.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return CalcDatasource.CALC_DATASOURCE.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return CalcDatasource.CALC_DATASOURCE.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return CalcDatasource.CALC_DATASOURCE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return CalcDatasource.CALC_DATASOURCE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return CalcDatasource.CALC_DATASOURCE.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return CalcDatasource.CALC_DATASOURCE.NAME_SPACE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return CalcDatasource.CALC_DATASOURCE.CONFIG_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field12() {
        return CalcDatasource.CALC_DATASOURCE.IS_EFFECTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return CalcDatasource.CALC_DATASOURCE.AREA_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return CalcDatasource.CALC_DATASOURCE.HB_ZK_QUORUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return CalcDatasource.CALC_DATASOURCE.HB_ZK_PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return CalcDatasource.CALC_DATASOURCE.HB_ZK_PARENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field17() {
        return CalcDatasource.CALC_DATASOURCE.HB_POOL_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field18() {
        return CalcDatasource.CALC_DATASOURCE.HB_SCAN_CACHE_ROWS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return CalcDatasource.CALC_DATASOURCE.INDI_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field20() {
        return CalcDatasource.CALC_DATASOURCE.HB_TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field21() {
        return CalcDatasource.CALC_DATASOURCE.HB_WRITE_PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field22() {
        return CalcDatasource.CALC_DATASOURCE.HB_CONFIGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getNameSpace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getConfigId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component12() {
        return getIsEffective();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getAreaCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getHbZkQuorum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getHbZkPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getHbZkParent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component17() {
        return getHbPoolSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component18() {
        return getHbScanCacheRows();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getIndiType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component20() {
        return getHbTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component21() {
        return getHbWritePath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component22() {
        return getHbConfigs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getGmtCreate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getGmtModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getNameSpace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getConfigId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value12() {
        return getIsEffective();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getAreaCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getHbZkQuorum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getHbZkPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getHbZkParent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value17() {
        return getHbPoolSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value18() {
        return getHbScanCacheRows();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getIndiType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value20() {
        return getHbTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value21() {
        return getHbWritePath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value22() {
        return getHbConfigs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value2(Timestamp value) {
        setGmtCreate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value3(Timestamp value) {
        setGmtModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value5(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value6(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value7(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value8(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value9(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value10(String value) {
        setNameSpace(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value11(String value) {
        setConfigId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value12(Byte value) {
        setIsEffective(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value13(String value) {
        setAreaCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value14(String value) {
        setHbZkQuorum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value15(String value) {
        setHbZkPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value16(String value) {
        setHbZkParent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value17(Integer value) {
        setHbPoolSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value18(Integer value) {
        setHbScanCacheRows(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value19(String value) {
        setIndiType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value20(String value) {
        setHbTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value21(String value) {
        setHbWritePath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord value22(String value) {
        setHbConfigs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcDatasourceRecord values(ULong value1, Timestamp value2, Timestamp value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, Byte value12, String value13, String value14, String value15, String value16, Integer value17, Integer value18, String value19, String value20, String value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalcDatasourceRecord
     */
    public CalcDatasourceRecord() {
        super(CalcDatasource.CALC_DATASOURCE);
    }

    /**
     * Create a detached, initialised CalcDatasourceRecord
     */
    public CalcDatasourceRecord(ULong id, Timestamp gmtCreate, Timestamp gmtModified, String createdBy, String updatedBy, String code, String name, String type, String description, String nameSpace, String configId, Byte isEffective, String areaCode, String hbZkQuorum, String hbZkPort, String hbZkParent, Integer hbPoolSize, Integer hbScanCacheRows, String indiType, String hbTableName, String hbWritePath, String hbConfigs) {
        super(CalcDatasource.CALC_DATASOURCE);

        set(0, id);
        set(1, gmtCreate);
        set(2, gmtModified);
        set(3, createdBy);
        set(4, updatedBy);
        set(5, code);
        set(6, name);
        set(7, type);
        set(8, description);
        set(9, nameSpace);
        set(10, configId);
        set(11, isEffective);
        set(12, areaCode);
        set(13, hbZkQuorum);
        set(14, hbZkPort);
        set(15, hbZkParent);
        set(16, hbPoolSize);
        set(17, hbScanCacheRows);
        set(18, indiType);
        set(19, hbTableName);
        set(20, hbWritePath);
        set(21, hbConfigs);
    }
}
