/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.RiskDetailRecord;


/**
 * 风险详情表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiskDetail extends TableImpl<RiskDetailRecord> {

    private static final long serialVersionUID = 1950869621;

    /**
     * The reference instance of <code>SMETA_APP.risk_detail</code>
     */
    public static final RiskDetail RISK_DETAIL = new RiskDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RiskDetailRecord> getRecordType() {
        return RiskDetailRecord.class;
    }

    /**
     * The column <code>SMETA_APP.risk_detail.id</code>. 主键
     */
    public final TableField<RiskDetailRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.risk_detail.gmt_create</code>. 创建时间
     */
    public final TableField<RiskDetailRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.risk_detail.gmt_modified</code>. 修改时间
     */
    public final TableField<RiskDetailRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_tag_id</code>. 风险分类id
     */
    public final TableField<RiskDetailRecord, Long> RISK_TAG_ID = createField("risk_tag_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "风险分类id");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_cn_name</code>. 风险点中文名
     */
    public final TableField<RiskDetailRecord, String> RISK_CN_NAME = createField("risk_cn_name", org.jooq.impl.SQLDataType.VARCHAR(512), this, "风险点中文名");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_en_name</code>. 风险点英文名
     */
    public final TableField<RiskDetailRecord, String> RISK_EN_NAME = createField("risk_en_name", org.jooq.impl.SQLDataType.VARCHAR(512), this, "风险点英文名");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_level</code>. 风险等级,ABCDEF
     */
    public final TableField<RiskDetailRecord, String> RISK_LEVEL = createField("risk_level", org.jooq.impl.SQLDataType.VARCHAR(32), this, "风险等级,ABCDEF");

    /**
     * The column <code>SMETA_APP.risk_detail.contact</code>. 业务联系人
     */
    public final TableField<RiskDetailRecord, String> CONTACT = createField("contact", org.jooq.impl.SQLDataType.VARCHAR(256), this, "业务联系人");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_source</code>. 风险来源
     */
    public final TableField<RiskDetailRecord, String> RISK_SOURCE = createField("risk_source", org.jooq.impl.SQLDataType.VARCHAR(256), this, "风险来源");

    /**
     * The column <code>SMETA_APP.risk_detail.internal</code>. 公司内部外化
     */
    public final TableField<RiskDetailRecord, Integer> INTERNAL = createField("internal", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公司内部外化");

    /**
     * The column <code>SMETA_APP.risk_detail.external</code>. 公司外部外化
     */
    public final TableField<RiskDetailRecord, Integer> EXTERNAL = createField("external", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公司外部外化");

    /**
     * The column <code>SMETA_APP.risk_detail.status</code>. 状态
     */
    public final TableField<RiskDetailRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态");

    /**
     * The column <code>SMETA_APP.risk_detail.effect_range</code>. 有效时间范围
     */
    public final TableField<RiskDetailRecord, String> EFFECT_RANGE = createField("effect_range", org.jooq.impl.SQLDataType.VARCHAR(256), this, "有效时间范围");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_desc</code>. 风险点描述
     */
    public final TableField<RiskDetailRecord, String> RISK_DESC = createField("risk_desc", org.jooq.impl.SQLDataType.CLOB, this, "风险点描述");

    /**
     * The column <code>SMETA_APP.risk_detail.law_detail</code>. 管控法律依据
     */
    public final TableField<RiskDetailRecord, String> LAW_DETAIL = createField("law_detail", org.jooq.impl.SQLDataType.CLOB, this, "管控法律依据");

    /**
     * The column <code>SMETA_APP.risk_detail.taobao_rule_id</code>. 管控网站合规id
     */
    public final TableField<RiskDetailRecord, Long> TAOBAO_RULE_ID = createField("taobao_rule_id", org.jooq.impl.SQLDataType.BIGINT, this, "管控网站合规id");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_standard</code>. 风险点判定标准
     */
    public final TableField<RiskDetailRecord, String> RISK_STANDARD = createField("risk_standard", org.jooq.impl.SQLDataType.CLOB, this, "风险点判定标准");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_bu</code>. 风险点应用站点
     */
    public final TableField<RiskDetailRecord, String> RISK_BU = createField("risk_bu", org.jooq.impl.SQLDataType.VARCHAR(256), this, "风险点应用站点");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_image</code>. 风险点图片
     */
    public final TableField<RiskDetailRecord, String> RISK_IMAGE = createField("risk_image", org.jooq.impl.SQLDataType.CLOB, this, "风险点图片");

    /**
     * The column <code>SMETA_APP.risk_detail.operator</code>. 编辑人
     */
    public final TableField<RiskDetailRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "编辑人");

    /**
     * The column <code>SMETA_APP.risk_detail.tenant_code</code>. 租户code
     */
    public final TableField<RiskDetailRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(256), this, "租户code");

    /**
     * The column <code>SMETA_APP.risk_detail.risk_id</code>. 风险点id，数据迁移自iris
     */
    public final TableField<RiskDetailRecord, Long> RISK_ID = createField("risk_id", org.jooq.impl.SQLDataType.BIGINT, this, "风险点id，数据迁移自iris");

    /**
     * The column <code>SMETA_APP.risk_detail.rule_scene</code>. 管控背景
     */
    public final TableField<RiskDetailRecord, String> RULE_SCENE = createField("rule_scene", org.jooq.impl.SQLDataType.CLOB, this, "管控背景");

    /**
     * The column <code>SMETA_APP.risk_detail.rectify_suggest</code>. 整改建议
     */
    public final TableField<RiskDetailRecord, String> RECTIFY_SUGGEST = createField("rectify_suggest", org.jooq.impl.SQLDataType.CLOB, this, "整改建议");

    /**
     * The column <code>SMETA_APP.risk_detail.clean_range</code>. 清理期，yyyyMMdd hh:ss:mm,yyyyMMdd hh:ss:mm 格式
     */
    public final TableField<RiskDetailRecord, String> CLEAN_RANGE = createField("clean_range", org.jooq.impl.SQLDataType.VARCHAR(256), this, "清理期，yyyyMMdd hh:ss:mm,yyyyMMdd hh:ss:mm 格式");

    /**
     * The column <code>SMETA_APP.risk_detail.hand_type</code>. 维权处置类型：0-无(初始配置状态)，1-仅退款，2-打款，3-退货退款，4-关单，5-撤销
     */
    public final TableField<RiskDetailRecord, Integer> HAND_TYPE = createField("hand_type", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "维权处置类型：0-无(初始配置状态)，1-仅退款，2-打款，3-退货退款，4-关单，5-撤销");

    /**
     * Create a <code>SMETA_APP.risk_detail</code> table reference
     */
    public RiskDetail() {
        this(DSL.name("risk_detail"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.risk_detail</code> table reference
     */
    public RiskDetail(String alias) {
        this(DSL.name(alias), RISK_DETAIL);
    }

    /**
     * Create an aliased <code>SMETA_APP.risk_detail</code> table reference
     */
    public RiskDetail(Name alias) {
        this(alias, RISK_DETAIL);
    }

    private RiskDetail(Name alias, Table<RiskDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private RiskDetail(Name alias, Table<RiskDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "风险详情表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RISK_DETAIL_IDX_RISK_TAG_ID, Indexes.RISK_DETAIL_IDX_TAOBAO_RULE_ID, Indexes.RISK_DETAIL_PRIMARY, Indexes.RISK_DETAIL_UK_RISK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RiskDetailRecord, ULong> getIdentity() {
        return Keys.IDENTITY_RISK_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RiskDetailRecord> getPrimaryKey() {
        return Keys.KEY_RISK_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RiskDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<RiskDetailRecord>>asList(Keys.KEY_RISK_DETAIL_PRIMARY, Keys.KEY_RISK_DETAIL_UK_RISK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RiskDetail as(String alias) {
        return new RiskDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RiskDetail as(Name alias) {
        return new RiskDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RiskDetail rename(String name) {
        return new RiskDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RiskDetail rename(Name name) {
        return new RiskDetail(name, null);
    }
}
