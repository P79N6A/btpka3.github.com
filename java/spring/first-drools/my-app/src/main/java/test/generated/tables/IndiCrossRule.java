/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.IndiCrossRuleRecord;


/**
 * 指标规则血缘关系表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndiCrossRule extends TableImpl<IndiCrossRuleRecord> {

    private static final long serialVersionUID = -2006105654;

    /**
     * The reference instance of <code>SMETA_APP.indi_cross_rule</code>
     */
    public static final IndiCrossRule INDI_CROSS_RULE = new IndiCrossRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndiCrossRuleRecord> getRecordType() {
        return IndiCrossRuleRecord.class;
    }

    /**
     * The column <code>SMETA_APP.indi_cross_rule.id</code>. 主键
     */
    public final TableField<IndiCrossRuleRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.gmt_create</code>. 创建时间
     */
    public final TableField<IndiCrossRuleRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.gmt_modified</code>. 修改时间
     */
    public final TableField<IndiCrossRuleRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.indi_code</code>. 指标编码
     */
    public final TableField<IndiCrossRuleRecord, String> INDI_CODE = createField("indi_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "指标编码");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.indi_name</code>. 指标名称
     */
    public final TableField<IndiCrossRuleRecord, String> INDI_NAME = createField("indi_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "指标名称");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.rule_id</code>. 规则id
     */
    public final TableField<IndiCrossRuleRecord, String> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "规则id");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.rule_name</code>. 规则名称
     */
    public final TableField<IndiCrossRuleRecord, String> RULE_NAME = createField("rule_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "规则名称");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.event_column_code</code>. 事件属性code
     */
    public final TableField<IndiCrossRuleRecord, String> EVENT_COLUMN_CODE = createField("event_column_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "事件属性code");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.event_code</code>. 事件code
     */
    public final TableField<IndiCrossRuleRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128), this, "事件code");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.rela_type</code>. 	
指标与规则关联关系:1-指标通过字典被规则引用；2-指标直接被规则调用；3-通过码农规则调用指标；4-老指标通过关系映射到新指标
     */
    public final TableField<IndiCrossRuleRecord, String> RELA_TYPE = createField("rela_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "	\n指标与规则关联关系:1-指标通过字典被规则引用；2-指标直接被规则调用；3-通过码农规则调用指标；4-老指标通过关系映射到新指标");

    /**
     * The column <code>SMETA_APP.indi_cross_rule.func_name</code>. rela_type为函数时，对应函数名称
     */
    public final TableField<IndiCrossRuleRecord, String> FUNC_NAME = createField("func_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "rela_type为函数时，对应函数名称");

    /**
     * Create a <code>SMETA_APP.indi_cross_rule</code> table reference
     */
    public IndiCrossRule() {
        this(DSL.name("indi_cross_rule"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.indi_cross_rule</code> table reference
     */
    public IndiCrossRule(String alias) {
        this(DSL.name(alias), INDI_CROSS_RULE);
    }

    /**
     * Create an aliased <code>SMETA_APP.indi_cross_rule</code> table reference
     */
    public IndiCrossRule(Name alias) {
        this(alias, INDI_CROSS_RULE);
    }

    private IndiCrossRule(Name alias, Table<IndiCrossRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private IndiCrossRule(Name alias, Table<IndiCrossRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "指标规则血缘关系表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INDI_CROSS_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IndiCrossRuleRecord, ULong> getIdentity() {
        return Keys.IDENTITY_INDI_CROSS_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IndiCrossRuleRecord> getPrimaryKey() {
        return Keys.KEY_INDI_CROSS_RULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IndiCrossRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<IndiCrossRuleRecord>>asList(Keys.KEY_INDI_CROSS_RULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndiCrossRule as(String alias) {
        return new IndiCrossRule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndiCrossRule as(Name alias) {
        return new IndiCrossRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IndiCrossRule rename(String name) {
        return new IndiCrossRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IndiCrossRule rename(Name name) {
        return new IndiCrossRule(name, null);
    }
}
