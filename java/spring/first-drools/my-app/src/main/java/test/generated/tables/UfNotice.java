/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.UfNoticeRecord;


/**
 * 公告表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UfNotice extends TableImpl<UfNoticeRecord> {

    private static final long serialVersionUID = -1101237641;

    /**
     * The reference instance of <code>SMETA_APP.uf_notice</code>
     */
    public static final UfNotice UF_NOTICE = new UfNotice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UfNoticeRecord> getRecordType() {
        return UfNoticeRecord.class;
    }

    /**
     * The column <code>SMETA_APP.uf_notice.id</code>. 主键
     */
    public final TableField<UfNoticeRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.uf_notice.gmt_create</code>. 创建时间
     */
    public final TableField<UfNoticeRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.uf_notice.gmt_modified</code>. 修改时间
     */
    public final TableField<UfNoticeRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.uf_notice.creator</code>. 创建人UserId
     */
    public final TableField<UfNoticeRecord, ULong> CREATOR = createField("creator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "创建人UserId");

    /**
     * The column <code>SMETA_APP.uf_notice.last_operator</code>. 最后修改人UserId
     */
    public final TableField<UfNoticeRecord, ULong> LAST_OPERATOR = createField("last_operator", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "最后修改人UserId");

    /**
     * The column <code>SMETA_APP.uf_notice.type</code>. 公告类别 : 0-系统级别，1-租户级别
     */
    public final TableField<UfNoticeRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "公告类别 : 0-系统级别，1-租户级别");

    /**
     * The column <code>SMETA_APP.uf_notice.tenant_code</code>. 租户Code
     */
    public final TableField<UfNoticeRecord, String> TENANT_CODE = createField("tenant_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "租户Code");

    /**
     * The column <code>SMETA_APP.uf_notice.gmt_show_begin</code>. 公告显示的开始时间
     */
    public final TableField<UfNoticeRecord, Timestamp> GMT_SHOW_BEGIN = createField("gmt_show_begin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "公告显示的开始时间");

    /**
     * The column <code>SMETA_APP.uf_notice.gmt_show_end</code>. 公告显示的结束时间
     */
    public final TableField<UfNoticeRecord, Timestamp> GMT_SHOW_END = createField("gmt_show_end", org.jooq.impl.SQLDataType.TIMESTAMP, this, "公告显示的结束时间");

    /**
     * The column <code>SMETA_APP.uf_notice.content</code>. 公告内容
     */
    public final TableField<UfNoticeRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "公告内容");

    /**
     * Create a <code>SMETA_APP.uf_notice</code> table reference
     */
    public UfNotice() {
        this(DSL.name("uf_notice"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_notice</code> table reference
     */
    public UfNotice(String alias) {
        this(DSL.name(alias), UF_NOTICE);
    }

    /**
     * Create an aliased <code>SMETA_APP.uf_notice</code> table reference
     */
    public UfNotice(Name alias) {
        this(alias, UF_NOTICE);
    }

    private UfNotice(Name alias, Table<UfNoticeRecord> aliased) {
        this(alias, aliased, null);
    }

    private UfNotice(Name alias, Table<UfNoticeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "公告表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UF_NOTICE_IDX_RULE_TENANT, Indexes.UF_NOTICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UfNoticeRecord, ULong> getIdentity() {
        return Keys.IDENTITY_UF_NOTICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UfNoticeRecord> getPrimaryKey() {
        return Keys.KEY_UF_NOTICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UfNoticeRecord>> getKeys() {
        return Arrays.<UniqueKey<UfNoticeRecord>>asList(Keys.KEY_UF_NOTICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfNotice as(String alias) {
        return new UfNotice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UfNotice as(Name alias) {
        return new UfNotice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UfNotice rename(String name) {
        return new UfNotice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UfNotice rename(Name name) {
        return new UfNotice(name, null);
    }
}
