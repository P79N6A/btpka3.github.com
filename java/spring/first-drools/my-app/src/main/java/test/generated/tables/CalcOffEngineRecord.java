/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcOffEngineRecordRecord;


/**
 * 离线引擎计算任务表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcOffEngineRecord extends TableImpl<CalcOffEngineRecordRecord> {

    private static final long serialVersionUID = 1737365370;

    /**
     * The reference instance of <code>SMETA_APP.calc_off_engine_record</code>
     */
    public static final CalcOffEngineRecord CALC_OFF_ENGINE_RECORD = new CalcOffEngineRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcOffEngineRecordRecord> getRecordType() {
        return CalcOffEngineRecordRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.id</code>. 主键
     */
    public final TableField<CalcOffEngineRecordRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.gmt_create</code>. 创建时间
     */
    public final TableField<CalcOffEngineRecordRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcOffEngineRecordRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.operator_id</code>. 操作人工号
     */
    public final TableField<CalcOffEngineRecordRecord, String> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.VARCHAR(32), this, "操作人工号");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.operator</code>. 操作人
     */
    public final TableField<CalcOffEngineRecordRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "操作人");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.event_code</code>. 离线事件编码
     */
    public final TableField<CalcOffEngineRecordRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "离线事件编码");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.table_name</code>. 离线表名
     */
    public final TableField<CalcOffEngineRecordRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "离线表名");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.table_partition</code>. 离线表分区
     */
    public final TableField<CalcOffEngineRecordRecord, String> TABLE_PARTITION = createField("table_partition", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "离线表分区");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.table_calc_cycle</code>. 离线表计算周期
     */
    public final TableField<CalcOffEngineRecordRecord, Integer> TABLE_CALC_CYCLE = createField("table_calc_cycle", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "离线表计算周期");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.rule_id</code>. 规则ID
     */
    public final TableField<CalcOffEngineRecordRecord, String> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "规则ID");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.rule_condition</code>. 规则条件
     */
    public final TableField<CalcOffEngineRecordRecord, String> RULE_CONDITION = createField("rule_condition", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "规则条件");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.result_table</code>. 计算结果表
     */
    public final TableField<CalcOffEngineRecordRecord, String> RESULT_TABLE = createField("result_table", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "计算结果表");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.ddl_node_id</code>. DDL节点ID
     */
    public final TableField<CalcOffEngineRecordRecord, String> DDL_NODE_ID = createField("ddl_node_id", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "DDL节点ID");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.ddl_node_context</code>. DDL节点内容
     */
    public final TableField<CalcOffEngineRecordRecord, String> DDL_NODE_CONTEXT = createField("ddl_node_context", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "DDL节点内容");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.calc_node_id</code>. 计算节点ID
     */
    public final TableField<CalcOffEngineRecordRecord, String> CALC_NODE_ID = createField("calc_node_id", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "计算节点ID");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.calc_node_context</code>. 计算节点内容
     */
    public final TableField<CalcOffEngineRecordRecord, String> CALC_NODE_CONTEXT = createField("calc_node_context", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "计算节点内容");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.calc_status</code>. 计算状态：1未运行，2等待时间，3等待资源，4运行中，5运行失败，6运行成功
     */
    public final TableField<CalcOffEngineRecordRecord, Integer> CALC_STATUS = createField("calc_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "计算状态：1未运行，2等待时间，3等待资源，4运行中，5运行失败，6运行成功");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.logs</code>. 计算日志
     */
    public final TableField<CalcOffEngineRecordRecord, String> LOGS = createField("logs", org.jooq.impl.SQLDataType.CLOB, this, "计算日志");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.status</code>. 记录状态：0删除，1有效
     */
    public final TableField<CalcOffEngineRecordRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "记录状态：0删除，1有效");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.calc_code</code>. 计算编码
     */
    public final TableField<CalcOffEngineRecordRecord, String> CALC_CODE = createField("calc_code", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "计算编码");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.event_columns</code>. 计算结果表字段集：userId, buyerId
     */
    public final TableField<CalcOffEngineRecordRecord, String> EVENT_COLUMNS = createField("event_columns", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "计算结果表字段集：userId, buyerId");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.table_columns</code>. 原始表 字段集：user_id as userId, buyer_id as buyerId
     */
    public final TableField<CalcOffEngineRecordRecord, String> TABLE_COLUMNS = createField("table_columns", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "原始表 字段集：user_id as userId, buyer_id as buyerId");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.event_name</code>. 离线事件名称
     */
    public final TableField<CalcOffEngineRecordRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "离线事件名称");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.node_type</code>. 节点类型：0周期任务，1一次性任务
     */
    public final TableField<CalcOffEngineRecordRecord, Integer> NODE_TYPE = createField("node_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "节点类型：0周期任务，1一次性任务");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.stats_table</code>. 计算结果统计表
     */
    public final TableField<CalcOffEngineRecordRecord, String> STATS_TABLE = createField("stats_table", org.jooq.impl.SQLDataType.VARCHAR(128), this, "计算结果统计表");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.dag_id</code>. 一次性任务运行返回的dagid
     */
    public final TableField<CalcOffEngineRecordRecord, String> DAG_ID = createField("dag_id", org.jooq.impl.SQLDataType.VARCHAR(16), this, "一次性任务运行返回的dagid");

    /**
     * The column <code>SMETA_APP.calc_off_engine_record.kfc_script</code>. 离线KFC UDF脚本集，多个以@_@分隔
     */
    public final TableField<CalcOffEngineRecordRecord, String> KFC_SCRIPT = createField("kfc_script", org.jooq.impl.SQLDataType.CLOB, this, "离线KFC UDF脚本集，多个以@_@分隔");

    /**
     * Create a <code>SMETA_APP.calc_off_engine_record</code> table reference
     */
    public CalcOffEngineRecord() {
        this(DSL.name("calc_off_engine_record"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_off_engine_record</code> table reference
     */
    public CalcOffEngineRecord(String alias) {
        this(DSL.name(alias), CALC_OFF_ENGINE_RECORD);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_off_engine_record</code> table reference
     */
    public CalcOffEngineRecord(Name alias) {
        this(alias, CALC_OFF_ENGINE_RECORD);
    }

    private CalcOffEngineRecord(Name alias, Table<CalcOffEngineRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcOffEngineRecord(Name alias, Table<CalcOffEngineRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "离线引擎计算任务表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_OFF_ENGINE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcOffEngineRecordRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_OFF_ENGINE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcOffEngineRecordRecord> getPrimaryKey() {
        return Keys.KEY_CALC_OFF_ENGINE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcOffEngineRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcOffEngineRecordRecord>>asList(Keys.KEY_CALC_OFF_ENGINE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcOffEngineRecord as(String alias) {
        return new CalcOffEngineRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcOffEngineRecord as(Name alias) {
        return new CalcOffEngineRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcOffEngineRecord rename(String name) {
        return new CalcOffEngineRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcOffEngineRecord rename(Name name) {
        return new CalcOffEngineRecord(name, null);
    }
}
