/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.CalcSyncTaskBackupRecord;


/**
 * 离线指标线上化同步任务_备份表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalcSyncTaskBackup extends TableImpl<CalcSyncTaskBackupRecord> {

    private static final long serialVersionUID = 1875568313;

    /**
     * The reference instance of <code>SMETA_APP.calc_sync_task_backup</code>
     */
    public static final CalcSyncTaskBackup CALC_SYNC_TASK_BACKUP = new CalcSyncTaskBackup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalcSyncTaskBackupRecord> getRecordType() {
        return CalcSyncTaskBackupRecord.class;
    }

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.id</code>. 主键
     */
    public final TableField<CalcSyncTaskBackupRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.gmt_create</code>. 创建时间
     */
    public final TableField<CalcSyncTaskBackupRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.gmt_modified</code>. 修改时间
     */
    public final TableField<CalcSyncTaskBackupRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.realtime_fetch_code</code>. 实时取数code：a-z规则
     */
    public final TableField<CalcSyncTaskBackupRecord, String> REALTIME_FETCH_CODE = createField("realtime_fetch_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "实时取数code：a-z规则");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.indicator_code</code>. 指标code
     */
    public final TableField<CalcSyncTaskBackupRecord, String> INDICATOR_CODE = createField("indicator_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "指标code");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.indicator_name</code>. 指标名称
     */
    public final TableField<CalcSyncTaskBackupRecord, String> INDICATOR_NAME = createField("indicator_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "指标名称");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.source_table_name</code>. 源表表名
     */
    public final TableField<CalcSyncTaskBackupRecord, String> SOURCE_TABLE_NAME = createField("source_table_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "源表表名");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.time_window</code>. 时间窗口
     */
    public final TableField<CalcSyncTaskBackupRecord, String> TIME_WINDOW = createField("time_window", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "时间窗口");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.created_by</code>. 创建人
     */
    public final TableField<CalcSyncTaskBackupRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "创建人");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.updated_by</code>. 修改人
     */
    public final TableField<CalcSyncTaskBackupRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "修改人");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.calculate_status</code>. 增量计算转换任务状态：\n已删除0，等待中1，运行中2
     */
    public final TableField<CalcSyncTaskBackupRecord, Integer> CALCULATE_STATUS = createField("calculate_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "增量计算转换任务状态：\\n已删除0，等待中1，运行中2");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.sync_status</code>. 同步任务状态：\n已删除0，等待中1，运行中2
     */
    public final TableField<CalcSyncTaskBackupRecord, Integer> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "同步任务状态：\\n已删除0，等待中1，运行中2");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.odps_node_id</code>. odps类型节点id
     */
    public final TableField<CalcSyncTaskBackupRecord, String> ODPS_NODE_ID = createField("odps_node_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "odps类型节点id");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.dsc_node_id</code>. 同步任务节点id
     */
    public final TableField<CalcSyncTaskBackupRecord, String> DSC_NODE_ID = createField("dsc_node_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "同步任务节点id");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.job_id</code>. datax3配置任务id
     */
    public final TableField<CalcSyncTaskBackupRecord, String> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "datax3配置任务id");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.job_version</code>. datax3配置任务id对应的版本
     */
    public final TableField<CalcSyncTaskBackupRecord, String> JOB_VERSION = createField("job_version", org.jooq.impl.SQLDataType.VARCHAR(64), this, "datax3配置任务id对应的版本");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.total_sync_mark</code>. 指标全量同步字段，1：是 2：否
     */
    public final TableField<CalcSyncTaskBackupRecord, Integer> TOTAL_SYNC_MARK = createField("total_sync_mark", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "指标全量同步字段，1：是 2：否");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.ddl_task_id</code>. DDL建表任务ID
     */
    public final TableField<CalcSyncTaskBackupRecord, String> DDL_TASK_ID = createField("ddl_task_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "DDL建表任务ID");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.odps_sql</code>. ODPS SQL
     */
    public final TableField<CalcSyncTaskBackupRecord, String> ODPS_SQL = createField("odps_sql", org.jooq.impl.SQLDataType.CLOB, this, "ODPS SQL");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.job_config_json</code>. Job配置
     */
    public final TableField<CalcSyncTaskBackupRecord, String> JOB_CONFIG_JSON = createField("job_config_json", org.jooq.impl.SQLDataType.CLOB, this, "Job配置");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.datasource_code</code>. 数据源编码
     */
    public final TableField<CalcSyncTaskBackupRecord, String> DATASOURCE_CODE = createField("datasource_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "数据源编码");

    /**
     * The column <code>SMETA_APP.calc_sync_task_backup.datasource_type</code>. 数据源类型
     */
    public final TableField<CalcSyncTaskBackupRecord, String> DATASOURCE_TYPE = createField("datasource_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "数据源类型");

    /**
     * Create a <code>SMETA_APP.calc_sync_task_backup</code> table reference
     */
    public CalcSyncTaskBackup() {
        this(DSL.name("calc_sync_task_backup"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_sync_task_backup</code> table reference
     */
    public CalcSyncTaskBackup(String alias) {
        this(DSL.name(alias), CALC_SYNC_TASK_BACKUP);
    }

    /**
     * Create an aliased <code>SMETA_APP.calc_sync_task_backup</code> table reference
     */
    public CalcSyncTaskBackup(Name alias) {
        this(alias, CALC_SYNC_TASK_BACKUP);
    }

    private CalcSyncTaskBackup(Name alias, Table<CalcSyncTaskBackupRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalcSyncTaskBackup(Name alias, Table<CalcSyncTaskBackupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "离线指标线上化同步任务_备份表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CALC_SYNC_TASK_BACKUP_IDX_CALCULATESTATUS_SYNCSTATUS, Indexes.CALC_SYNC_TASK_BACKUP_IDX_INDICATOR_CODE, Indexes.CALC_SYNC_TASK_BACKUP_IDX_SO_TI_CA, Indexes.CALC_SYNC_TASK_BACKUP_IDX_TI_CR_UP, Indexes.CALC_SYNC_TASK_BACKUP_IDX_TOTAL_SYNC_MARK, Indexes.CALC_SYNC_TASK_BACKUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalcSyncTaskBackupRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CALC_SYNC_TASK_BACKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalcSyncTaskBackupRecord> getPrimaryKey() {
        return Keys.KEY_CALC_SYNC_TASK_BACKUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalcSyncTaskBackupRecord>> getKeys() {
        return Arrays.<UniqueKey<CalcSyncTaskBackupRecord>>asList(Keys.KEY_CALC_SYNC_TASK_BACKUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcSyncTaskBackup as(String alias) {
        return new CalcSyncTaskBackup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalcSyncTaskBackup as(Name alias) {
        return new CalcSyncTaskBackup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcSyncTaskBackup rename(String name) {
        return new CalcSyncTaskBackup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalcSyncTaskBackup rename(Name name) {
        return new CalcSyncTaskBackup(name, null);
    }
}
