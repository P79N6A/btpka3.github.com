/*
 * This file is generated by jOOQ.
*/
package test.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import test.generated.Indexes;
import test.generated.Keys;
import test.generated.SmetaApp;
import test.generated.tables.records.DictPkTagMapingRecord;


/**
 * 事件主键属性标志映射表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictPkTagMaping extends TableImpl<DictPkTagMapingRecord> {

    private static final long serialVersionUID = -2032111872;

    /**
     * The reference instance of <code>SMETA_APP.dict_pk_tag_maping</code>
     */
    public static final DictPkTagMaping DICT_PK_TAG_MAPING = new DictPkTagMaping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictPkTagMapingRecord> getRecordType() {
        return DictPkTagMapingRecord.class;
    }

    /**
     * The column <code>SMETA_APP.dict_pk_tag_maping.id</code>. 主键
     */
    public final TableField<DictPkTagMapingRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>SMETA_APP.dict_pk_tag_maping.gmt_create</code>. 创建时间
     */
    public final TableField<DictPkTagMapingRecord, Timestamp> GMT_CREATE = createField("gmt_create", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>SMETA_APP.dict_pk_tag_maping.gmt_modified</code>. 修改时间
     */
    public final TableField<DictPkTagMapingRecord, Timestamp> GMT_MODIFIED = createField("gmt_modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>SMETA_APP.dict_pk_tag_maping.event_code</code>. 事件code
     */
    public final TableField<DictPkTagMapingRecord, String> EVENT_CODE = createField("event_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "事件code");

    /**
     * The column <code>SMETA_APP.dict_pk_tag_maping.pk_column_code</code>. 主键属性code
     */
    public final TableField<DictPkTagMapingRecord, String> PK_COLUMN_CODE = createField("pk_column_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "主键属性code");

    /**
     * The column <code>SMETA_APP.dict_pk_tag_maping.tag_code</code>. 标志code
     */
    public final TableField<DictPkTagMapingRecord, String> TAG_CODE = createField("tag_code", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "标志code");

    /**
     * Create a <code>SMETA_APP.dict_pk_tag_maping</code> table reference
     */
    public DictPkTagMaping() {
        this(DSL.name("dict_pk_tag_maping"), null);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_pk_tag_maping</code> table reference
     */
    public DictPkTagMaping(String alias) {
        this(DSL.name(alias), DICT_PK_TAG_MAPING);
    }

    /**
     * Create an aliased <code>SMETA_APP.dict_pk_tag_maping</code> table reference
     */
    public DictPkTagMaping(Name alias) {
        this(alias, DICT_PK_TAG_MAPING);
    }

    private DictPkTagMaping(Name alias, Table<DictPkTagMapingRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictPkTagMaping(Name alias, Table<DictPkTagMapingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "事件主键属性标志映射表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SmetaApp.SMETA_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DICT_PK_TAG_MAPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictPkTagMapingRecord, ULong> getIdentity() {
        return Keys.IDENTITY_DICT_PK_TAG_MAPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictPkTagMapingRecord> getPrimaryKey() {
        return Keys.KEY_DICT_PK_TAG_MAPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictPkTagMapingRecord>> getKeys() {
        return Arrays.<UniqueKey<DictPkTagMapingRecord>>asList(Keys.KEY_DICT_PK_TAG_MAPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictPkTagMaping as(String alias) {
        return new DictPkTagMaping(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictPkTagMaping as(Name alias) {
        return new DictPkTagMaping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictPkTagMaping rename(String name) {
        return new DictPkTagMaping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DictPkTagMaping rename(Name name) {
        return new DictPkTagMaping(name, null);
    }
}
